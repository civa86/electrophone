{"version":3,"sources":["webpack:///web-synth.min.js","webpack:///webpack/bootstrap 278636dfcc1fc13dced2","webpack:///./src/index.js","webpack:///./src/lib/core/Constants.js","webpack:///./src/lib/AudioContext.js","webpack:///./src/lib/core/Effect.js","webpack:///./src/lib/core/Module.js","webpack:///./src/lib/core/SoundSource.js","webpack:///./src/lib/modules/index.js","webpack:///./src/WebSynth.js","webpack:///./src/lib/Synth.js","webpack:///./src/lib/core/EffectManager.js","webpack:///./src/lib/core/Voice.js","webpack:///./src/lib/modules/Delay.js","webpack:///./src/lib/modules/Envelope.js","webpack:///./src/lib/modules/Filter.js","webpack:///./src/lib/modules/Master.js","webpack:///./src/lib/modules/Modulator.js","webpack:///./src/lib/modules/Noise.js","webpack:///./src/lib/modules/Oscillator.js","webpack:///./src/lib/modules/PingPongDelay.js","webpack:///./src/lib/modules/Tremolo.js","webpack:///./src/lib/modules/WahWah.js","webpack:///./~/tunajs/tuna.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_WebSynth","_WebSynth2","win","window","WebSynth","Object","defineProperty","value","TYPES","MASTER","OSCILLATOR","MODULATOR","FILTER","NOISE","REVERB","CHORUS","DELAY","ENVELOPE","CONST","ADSR","NOISE_WHITE","NOISE_PINK","NOISE_BROWN","WAVE_SINE","WAVE_SQUARE","WAVE_SAWTOOTH","WAVE_TRIANLGE","WAVE_CUSTOM","FILTER_LOWPASS","FILTER_HIGHPASS","FILTER_BANDPASS","FILTER_LOWSHELF","FILTER_HIGHSHELF","FILTER_PEAKING","FILTER_NOTCH","FILTER_ALLPASS","AudioCtx","AudioContext","webkitAudioContext","ctx","deprecatedFn","createGainNode","createDelayNode","f","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","parent","getPrototypeOf","_coreConstants","_coreModule","_coreModule2","_EffectManager","_EffectManager2","Effect","_Module","this","main","mainEffect","type","sourceType","source","input","output","ret","gain","filter","_AudioContext","_AudioContext2","Module","link","level","createGain","l","disconnect","SoundSource","start","release","stop","_interopRequire","_Master","Master","_Oscillator","Oscillator","_Modulator","Modulator","_Noise","Noise","_Envelope","Envelope","_Filter","Filter","_Delay","Delay","_PingPongDelay","PingPongDelay","_WahWah","WahWah","_Tremolo","Tremolo","_interopRequireWildcard","newObj","hasOwnProperty","_libModules","Modules","_libCoreConstants","_libSynth","_libSynth2","_this","properties","synth","methods","keys","fx","VARS","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","toLowerCase","label","_iterator","Symbol","iterator","next","done","err","play","note","_coreVoice","_coreVoice2","Synth","modulesConfig","voices","spectrum","updateSpectrum","attack","decay","sustain","String","Error","addModule","noteOn","noteOff","_tunajs","_tunajs2","manager","_modules","_SoundSource","_SoundSource2","_Constants","Voice","soundSources","master","onSpectrum","createSpectrum","setupModules","linkModules","javascriptNode","createScriptProcessor","connect","destination","analyser","createAnalyser","fftSize","modConf","forEach","mod","push","_this2","masterOutput","currentModule","currentModuleType","destinationModule","dest","getLineOut","getLineIn","lineOut","_this3","frequencyData","Uint8Array","frequencyBinCount","onaudioprocess","getByteFrequencyData","e","setEnvelope","setNote","_this4","adsr","getReleaseTime","resetEnvelope","_coreEffect","_coreEffect2","_Effect","wet","feedback","cutoff","delayTime","bypass","setMainEffect","wetLevel","dryLevel","now","currentTime","envelope","attackLevel","sustainLevel","attackEnd","t","getEnvelopeTarget","setValueAtTime","linearRampToValueAtTime","setTargetAtTime","cancelScheduledValues","freq","q","filterGain","frequency","Q","filterType","_coreSoundSource","_coreSoundSource2","createOscillator","createBufferSource","color","setColor","buffer","white","pink","brown","noiseBuffer","getNoiseBuffer","bufferSize","getBufferSize","getChannelData","Math","random","b0","b1","b2","b3","b4","b5","b6","lastOut","sampleRate","createBuffer","loop","detune","setDetune","delayTimeLeft","delayTimeRight","intensity","rate","stereoPhase","automode","baseFrequency","excursionOctaves","sweep","resonance","sensitivity","definition","Tuna","context","console","log","connectify","userContext","userInstance","shimConnect","node","Array","shift","apply","arguments","Super","isPrototypeOf","slice","unshift","oconnect","__connectified__","proto","dbToWAVolume","db","max","round","pow","fmod","x","y","tmp","tmp2","pY","l2","toExponential","match","parseInt","toFixed","parseFloat","sign","abs","tanh","n","exp","initValue","userVal","defaultVal","pipe","param","val","activate","doActivate","activateNode","activateCallback","_bypass","set","_lastBypassValue","connectInOrder","nodeArray","error","getDefaults","result","defaults","automate","duration","startTime","method","dur","_is","automatable","name","FLOAT","BOOLEAN","STRING","INT","define","Bitcrusher","processor","step","phaser","last","inputBuffer","outputBuffer","bits","normfreq","floor","min","Cabinet","convolver","newConvolver","impulsePath","makeupNode","makeupGain","Convolver","impulse","Chorus","attenuator","splitter","createChannelSplitter","delayL","createDelay","delayR","feedbackGainNodeLR","feedbackGainNodeRL","merger","createChannelMerger","lfoL","LFO","callback","lfoR","delay","depth","phase","PI","_delay","offset","_depth","oscillation","_feedback","_rate","Compressor","compNode","createDynamicsCompressor","automakeup","threshold","ratio","knee","computeMakeup","magicCoefficient","_automakeup","createConvolver","dry","filterLow","createBiquadFilter","filterHigh","highCut","lowCut","xhr","XMLHttpRequest","open","responseType","onreadystatechange","readyState","status","decodeAudioData","response","send","feedbackNode","MoogFilter","in1","in2","in3","in4","out1","out2","out3","out4","fb","inputFactor","Overdrive","inputDrive","waveshaper","createWaveShaper","outputDrive","ws_table","Float32Array","k_nSamples","drive","outputGain","curveAmount","algorithmIndex","scaled","_drive","_curveAmount","_algorithmIndex","waveshaperAlgorithms","curve","_outputGain","amount","n_samples","k","a","abx","Phaser","filtersL","filtersR","feedbackGainNodeL","feedbackGainNodeR","filteredSignal","stage","baseModulationFrequency","filters","_baseModulationFrequency","_stereoPhase","newPhase","_phase","stereoToMonoMix","feedbackLevel","delayLeft","delayRight","_delayTimeLeft","_delayTimeRight","amplitudeL","amplitudeR","_intensity","envelopeFollower","EnvelopeFollower","filterBp","filterPeaking","init","enableAutoMode","_automode","filterFreqTimeout","setFilterFreq","_baseFrequency","_excursionFrequency","_sweep","clearTimeout","setTimeout","bind","_sensitivity","_excursionOctaves","_resonance","jsNode","buffersize","attackTime","releaseTime","_envelope","_attackTime","_attackC","_releaseTime","_releaseC","_callback","_target","activated","returnCompute","event","compute","current","chan","rms","count","channels","numberOfChannels","sqrt","_frequency","_phaseInc","_offset","_oscillation","that","sin","toString"],"mappings":"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","file":"web-synth.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _WebSynth = __webpack_require__(/*! ./WebSynth */ 7);\n\t\n\tvar _WebSynth2 = _interopRequireDefault(_WebSynth);\n\t\n\tvar win = window || {};\n\t\n\twin.WebSynth = _WebSynth2['default'];\n\n/***/ },\n/* 1 */\n/*!***********************************!*\\\n  !*** ./src/lib/core/Constants.js ***!\n  \\***********************************/\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\tvar TYPES = {\n\t    MASTER: 'Master',\n\t    OSCILLATOR: 'Oscillator',\n\t    MODULATOR: 'Modulator',\n\t    FILTER: 'Filter',\n\t    NOISE: 'Noise',\n\t    REVERB: 'Reverb',\n\t    CHORUS: 'Chorus',\n\t    DELAY: 'Delay',\n\t    ENVELOPE: 'Envelope'\n\t};\n\t\n\texports.TYPES = TYPES;\n\tvar CONST = {\n\t    MASTER: 'master',\n\t    ADSR: 'adsr',\n\t\n\t    NOISE_WHITE: 'white',\n\t    NOISE_PINK: 'pink',\n\t    NOISE_BROWN: 'brown',\n\t\n\t    WAVE_SINE: 'sine',\n\t    WAVE_SQUARE: 'square',\n\t    WAVE_SAWTOOTH: 'sawtooth',\n\t    WAVE_TRIANLGE: 'triangle',\n\t    WAVE_CUSTOM: 'custom',\n\t\n\t    FILTER_LOWPASS: 'lowpass',\n\t    FILTER_HIGHPASS: 'highpass',\n\t    FILTER_BANDPASS: 'bandpass',\n\t    FILTER_LOWSHELF: 'lowshelf',\n\t    FILTER_HIGHSHELF: 'highshelf',\n\t    FILTER_PEAKING: 'peaking',\n\t    FILTER_NOTCH: 'notch',\n\t    FILTER_ALLPASS: 'allpass'\n\t};\n\texports.CONST = CONST;\n\n/***/ },\n/* 2 */\n/*!*********************************!*\\\n  !*** ./src/lib/AudioContext.js ***!\n  \\*********************************/\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\tvar AudioCtx = window.AudioContext || window.webkitAudioContext,\n\t    ctx = new AudioCtx(),\n\t    deprecatedFn = {\n\t    createGainNode: 'createGain',\n\t    createDelayNode: 'createDelay'\n\t};\n\t\n\tfor (var f in deprecatedFn) {\n\t    if (typeof ctx[f] === 'function') {\n\t        ctx[deprecatedFn[f]] = ctx[f];\n\t    }\n\t}\n\t\n\texports['default'] = ctx;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/*!********************************!*\\\n  !*** ./src/lib/core/Effect.js ***!\n  \\********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../core/Constants */ 1);\n\t\n\tvar _coreModule = __webpack_require__(/*! ../core/Module */ 4);\n\t\n\tvar _coreModule2 = _interopRequireDefault(_coreModule);\n\t\n\tvar _EffectManager = __webpack_require__(/*! ./EffectManager */ 9);\n\t\n\tvar _EffectManager2 = _interopRequireDefault(_EffectManager);\n\t\n\tvar Effect = (function (_Module) {\n\t    _inherits(Effect, _Module);\n\t\n\t    function Effect(props) {\n\t        _classCallCheck(this, Effect);\n\t\n\t        _get(Object.getPrototypeOf(Effect.prototype), 'constructor', this).call(this, props);\n\t        this.main = null;\n\t        this.mainEffect = null;\n\t    }\n\t\n\t    _createClass(Effect, [{\n\t        key: 'setMainEffect',\n\t        value: function setMainEffect(type, mainEffect, props) {\n\t            this.main = new _EffectManager2['default'][type](props);\n\t            this.mainEffect = this.main[mainEffect];\n\t        }\n\t    }, {\n\t        key: 'createGain',\n\t        value: function createGain() {\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'getLineIn',\n\t        value: function getLineIn(sourceType, source) {\n\t            if (sourceType === _coreConstants.TYPES.MODULATOR) {\n\t                return this.mainEffect[source.target];\n\t            } else {\n\t                return this.main.input;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getLineOut',\n\t        value: function getLineOut() {\n\t            return this.main.output;\n\t        }\n\t    }, {\n\t        key: 'getEnvelopeTarget',\n\t        value: function getEnvelopeTarget(target) {\n\t            var ret = null;\n\t\n\t            if (target === 'gain') {\n\t                ret = this.main.output.gain;\n\t            } else if (this.main && this.mainEffect && this.mainEffect[target]) {\n\t                ret = this.main.filter[target];\n\t            }\n\t\n\t            return ret;\n\t        }\n\t    }]);\n\t\n\t    return Effect;\n\t})(_coreModule2['default']);\n\t\n\texports['default'] = Effect;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/*!********************************!*\\\n  !*** ./src/lib/core/Module.js ***!\n  \\********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar Module = (function () {\n\t    function Module(props) {\n\t        _classCallCheck(this, Module);\n\t\n\t        //TODO introduce this security line in all modules....\n\t        //let properties = props || {};\n\t        this.gain = null;\n\t        this.main = null;\n\t        this.link = props.link || null;\n\t        this.level = +props.level;\n\t\n\t        this.createGain(this.level);\n\t    }\n\t\n\t    _createClass(Module, [{\n\t        key: 'createGain',\n\t        value: function createGain(level) {\n\t            var l = level >= 0 ? level % 101 : 100;\n\t            //TODO create two gians...one for envelope and one as output to se finale level!!\n\t            //TODO now if you put an envelope on gain your module level prop is ignored because envelope insist on same gain....\n\t            this.gain = _AudioContext2['default'].createGain();\n\t            this.gain.gain.value = l / 100;\n\t        }\n\t    }, {\n\t        key: 'disconnect',\n\t        value: function disconnect() {\n\t            this.gain.disconnect();\n\t        }\n\t    }, {\n\t        key: 'getLineIn',\n\t        value: function getLineIn() {\n\t            return this.main;\n\t        }\n\t    }, {\n\t        key: 'getLineOut',\n\t        value: function getLineOut() {\n\t            return this.gain;\n\t        }\n\t    }, {\n\t        key: 'getEnvelopeTarget',\n\t        value: function getEnvelopeTarget(target) {\n\t            var ret = null;\n\t\n\t            if (this.main && this.main[target]) {\n\t                ret = this.main[target];\n\t            } else if (target === 'gain' && this.gain) {\n\t                ret = this.gain.gain;\n\t            }\n\t\n\t            return ret;\n\t        }\n\t    }]);\n\t\n\t    return Module;\n\t})();\n\t\n\texports['default'] = Module;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 5 */\n/*!*************************************!*\\\n  !*** ./src/lib/core/SoundSource.js ***!\n  \\*************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreModule = __webpack_require__(/*! ../core/Module */ 4);\n\t\n\tvar _coreModule2 = _interopRequireDefault(_coreModule);\n\t\n\tvar SoundSource = (function (_Module) {\n\t    _inherits(SoundSource, _Module);\n\t\n\t    function SoundSource(props) {\n\t        _classCallCheck(this, SoundSource);\n\t\n\t        _get(Object.getPrototypeOf(SoundSource.prototype), 'constructor', this).call(this, props);\n\t    }\n\t\n\t    _createClass(SoundSource, [{\n\t        key: 'noteOn',\n\t        value: function noteOn() {\n\t            this.main.start(0);\n\t        }\n\t    }, {\n\t        key: 'noteOff',\n\t        value: function noteOff(release) {\n\t            this.main.stop(release);\n\t        }\n\t    }]);\n\t\n\t    return SoundSource;\n\t})(_coreModule2['default']);\n\t\n\texports['default'] = SoundSource;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/*!**********************************!*\\\n  !*** ./src/lib/modules/index.js ***!\n  \\**********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequire(obj) { return obj && obj.__esModule ? obj['default'] : obj; }\n\t\n\tvar _Master = __webpack_require__(/*! ./Master */ 14);\n\t\n\texports.Master = _interopRequire(_Master);\n\t\n\tvar _Oscillator = __webpack_require__(/*! ./Oscillator */ 17);\n\t\n\texports.Oscillator = _interopRequire(_Oscillator);\n\t\n\tvar _Modulator = __webpack_require__(/*! ./Modulator */ 15);\n\t\n\texports.Modulator = _interopRequire(_Modulator);\n\t\n\tvar _Noise = __webpack_require__(/*! ./Noise */ 16);\n\t\n\texports.Noise = _interopRequire(_Noise);\n\t\n\tvar _Envelope = __webpack_require__(/*! ./Envelope */ 12);\n\t\n\texports.Envelope = _interopRequire(_Envelope);\n\t\n\t//EFFECTS\n\t\n\tvar _Filter = __webpack_require__(/*! ./Filter */ 13);\n\t\n\texports.Filter = _interopRequire(_Filter);\n\t\n\tvar _Delay = __webpack_require__(/*! ./Delay */ 11);\n\t\n\texports.Delay = _interopRequire(_Delay);\n\t\n\tvar _PingPongDelay = __webpack_require__(/*! ./PingPongDelay */ 18);\n\t\n\texports.PingPongDelay = _interopRequire(_PingPongDelay);\n\t\n\tvar _WahWah = __webpack_require__(/*! ./WahWah */ 20);\n\t\n\texports.WahWah = _interopRequire(_WahWah);\n\t\n\tvar _Tremolo = __webpack_require__(/*! ./Tremolo */ 19);\n\t\n\texports.Tremolo = _interopRequire(_Tremolo);\n\t\n\t//Filter --> DONE\n\t//Delay --> DONE\n\t//Ping Pong Delay --> DONE\n\t//WahWah --> DONE\n\t//Tremolo --> DONE\n\n\t//Overdrive\n\t//Cabinet\n\t//Convolver (Reverb)\n\t//Compressor\n\t//Phaser\n\t//Chorus\n\t//Bitcrusher\n\t//Moog Filter\n\n/***/ },\n/* 7 */\n/*!*************************!*\\\n  !*** ./src/WebSynth.js ***!\n  \\*************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _libModules = __webpack_require__(/*! ./lib/modules */ 6);\n\t\n\tvar Modules = _interopRequireWildcard(_libModules);\n\t\n\tvar _libCoreConstants = __webpack_require__(/*! ./lib/core/Constants */ 1);\n\t\n\tvar _libSynth = __webpack_require__(/*! ./lib/Synth */ 8);\n\t\n\tvar _libSynth2 = _interopRequireDefault(_libSynth);\n\t\n\tvar WebSynth = function WebSynth(props) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, WebSynth);\n\t\n\t    var properties = props || {},\n\t        synth = new _libSynth2['default'](properties),\n\t        methods = Object.keys(Modules),\n\t        fx = undefined;\n\t\n\t    this.VARS = _libCoreConstants.CONST;\n\t\n\t    //Synth Module Creators\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        var _loop = function () {\n\t            var type = _step.value;\n\t\n\t            fx = type.toLowerCase();\n\t            _this[fx] = function (label, props) {\n\t                synth.module(type, label, props);\n\t                return _this;\n\t            };\n\t        };\n\t\n\t        for (var _iterator = methods[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            _loop();\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator['return']) {\n\t                _iterator['return']();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t\n\t    this.play = function (note) {\n\t        return synth.play(note);\n\t    };\n\t    this.stop = function (note) {\n\t        return synth.stop(note);\n\t    };\n\t};\n\t\n\texports['default'] = WebSynth;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/*!**************************!*\\\n  !*** ./src/lib/Synth.js ***!\n  \\**************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ./core/Constants */ 1);\n\t\n\tvar _coreVoice = __webpack_require__(/*! ./core/Voice */ 10);\n\t\n\tvar _coreVoice2 = _interopRequireDefault(_coreVoice);\n\t\n\tvar Synth = (function () {\n\t    function Synth(props) {\n\t        _classCallCheck(this, Synth);\n\t\n\t        var properties = props || {};\n\t        this.modulesConfig = {};\n\t        this.voices = {};\n\t        this.spectrum = properties.spectrum || false;\n\t        this.updateSpectrum = properties.updateSpectrum || null;\n\t\n\t        this.module('Master', _coreConstants.CONST.MASTER, {\n\t            level: 100\n\t        });\n\t\n\t        this.module('Envelope', _coreConstants.CONST.ADSR, {\n\t            link: _coreConstants.CONST.MASTER,\n\t            target: 'gain',\n\t            level: 100,\n\t            attack: null,\n\t            decay: 0.1,\n\t            sustain: 100,\n\t            release: 5\n\t        });\n\t    }\n\t\n\t    _createClass(Synth, [{\n\t        key: 'module',\n\t        value: function module(type, label, props) {\n\t            if (!type || type.constructor !== String) {\n\t                throw new Error('Synth Module :: missing type');\n\t            }\n\t\n\t            if (!label || label.constructor !== String) {\n\t                throw new Error('Synth Module :: missing label');\n\t            }\n\t\n\t            if (!props || props.constructor !== Object) {\n\t                throw new Error('Synth Module :: missing properties');\n\t            }\n\t\n\t            if (!this.modulesConfig[label]) {\n\t                this.addModule(type, label, props);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'addModule',\n\t        value: function addModule(type, label, props) {\n\t            this.modulesConfig[label] = {\n\t                type: type,\n\t                props: props\n\t            };\n\t        }\n\t    }, {\n\t        key: 'play',\n\t        value: function play(note) {\n\t            if (!this.voices[note]) {\n\t                //TODO study on spectrum centralization....create on synth and pass to voices....\n\t                this.voices[note] = new _coreVoice2['default'](note, this.modulesConfig, this.spectrum, this.updateSpectrum);\n\t                this.voices[note].noteOn();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'stop',\n\t        value: function stop(note) {\n\t            if (this.voices[note]) {\n\t                this.voices[note].noteOff();\n\t                this.voices[note] = undefined;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Synth;\n\t})();\n\t\n\texports['default'] = Synth;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 9 */\n/*!***************************************!*\\\n  !*** ./src/lib/core/EffectManager.js ***!\n  \\***************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _tunajs = __webpack_require__(/*! tunajs */ 21);\n\t\n\tvar _tunajs2 = _interopRequireDefault(_tunajs);\n\t\n\tvar manager = new _tunajs2['default'](_AudioContext2['default']);\n\t\n\texports['default'] = manager;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/*!*******************************!*\\\n  !*** ./src/lib/core/Voice.js ***!\n  \\*******************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _modules = __webpack_require__(/*! ../modules */ 6);\n\t\n\tvar Modules = _interopRequireWildcard(_modules);\n\t\n\tvar _SoundSource = __webpack_require__(/*! ./SoundSource */ 5);\n\t\n\tvar _SoundSource2 = _interopRequireDefault(_SoundSource);\n\t\n\tvar _Constants = __webpack_require__(/*! ./Constants */ 1);\n\t\n\tvar Voice = (function () {\n\t    function Voice(note, modulesConfig, spectrum, updateSpectrum) {\n\t        _classCallCheck(this, Voice);\n\t\n\t        this.note = note;\n\t        this.modulesConfig = modulesConfig;\n\t        this.modules = {};\n\t        this.soundSources = [];\n\t        this.master = null;\n\t        this.spectrum = spectrum || false;\n\t        this.onSpectrum = updateSpectrum || null;\n\t\n\t        if (this.spectrum) {\n\t            this.createSpectrum();\n\t        }\n\t        this.setupModules();\n\t        this.linkModules();\n\t    }\n\t\n\t    _createClass(Voice, [{\n\t        key: 'createSpectrum',\n\t        value: function createSpectrum() {\n\t            this.javascriptNode = _AudioContext2['default'].createScriptProcessor(2048, 1, 1);\n\t            this.javascriptNode.connect(_AudioContext2['default'].destination);\n\t\n\t            this.analyser = _AudioContext2['default'].createAnalyser();\n\t            this.analyser.fftSize = 1024;\n\t        }\n\t    }, {\n\t        key: 'setupModules',\n\t        value: function setupModules() {\n\t            var _this = this;\n\t\n\t            var modConf = undefined,\n\t                m = undefined;\n\t\n\t            Object.keys(this.modulesConfig).forEach(function (mod) {\n\t                modConf = _this.modulesConfig[mod];\n\t                if (modConf.type && modConf.props) {\n\t                    m = new Modules[modConf.type](modConf.props);\n\t                    _this.modules[mod] = {\n\t                        type: modConf.type,\n\t                        instance: m\n\t                    };\n\t\n\t                    if (m.instance instanceof _SoundSource2['default']) {\n\t                        _this.soundSources.push(m);\n\t                    } else if (modConf.type === _Constants.TYPES.MASTER) {\n\t                        _this.master = m;\n\t                    }\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'linkModules',\n\t        value: function linkModules() {\n\t            var _this2 = this;\n\t\n\t            var masterOutput = undefined;\n\t\n\t            Object.keys(this.modules).forEach(function (mod) {\n\t                var currentModule = _this2.modules[mod].instance,\n\t                    currentModuleType = _this2.modules[mod].type,\n\t                    destinationModule = undefined,\n\t                    source = undefined,\n\t                    dest = undefined;\n\t\n\t                if (currentModule.link) {\n\t                    destinationModule = _this2.modules[currentModule.link];\n\t                    if (destinationModule && destinationModule.instance) {\n\t                        source = currentModule.getLineOut();\n\t                        dest = destinationModule.instance.getLineIn(currentModuleType, currentModule);\n\t                        //console.log(mod, source, currentModule.link, dest);\n\t                        if (source && dest) {\n\t                            source.connect(dest);\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t\n\t            masterOutput = this.master.lineOut();\n\t            if (this.spectrum === true && this.analyser) {\n\t                masterOutput.connect(this.analyser);\n\t                this.analyser.connect(_AudioContext2['default'].destination);\n\t            } else {\n\t                masterOutput.connect(_AudioContext2['default'].destination);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'noteOn',\n\t        value: function noteOn() {\n\t            var _this3 = this;\n\t\n\t            var m = undefined,\n\t                dest = undefined,\n\t                frequencyData = undefined;\n\t\n\t            if (this.spectrum === true && this.javascriptNode) {\n\t                frequencyData = new Uint8Array(this.analyser.frequencyBinCount);\n\t\n\t                this.javascriptNode.onaudioprocess = function () {\n\t                    _this3.analyser.getByteFrequencyData(frequencyData);\n\t                    if (_this3.onSpectrum && typeof _this3.onSpectrum === 'function') {\n\t                        _this3.onSpectrum(frequencyData);\n\t                    }\n\t                };\n\t            }\n\t\n\t            Object.keys(this.modules).forEach(function (e) {\n\t                m = _this3.modules[e].instance;\n\t\n\t                if (typeof m.setEnvelope === 'function') {\n\t                    dest = _this3.modules[m.link] ? _this3.modules[m.link].instance : null;\n\t                    m.setEnvelope(dest);\n\t                }\n\t                if (typeof m.setNote === 'function') {\n\t                    m.setNote(+_this3.note);\n\t                }\n\t            });\n\t            Object.keys(this.modules).forEach(function (e) {\n\t                m = _this3.modules[e].instance;\n\t                if (typeof m.noteOn === 'function') {\n\t                    m.noteOn();\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'noteOff',\n\t        value: function noteOff() {\n\t            var _this4 = this;\n\t\n\t            var release = 0,\n\t                adsr = this.modules.adsr.instance,\n\t                m = undefined,\n\t                dest = undefined;\n\t\n\t            release = adsr.getReleaseTime();\n\t\n\t            if (this.spectrum === true && this.javascriptNode) {\n\t                this.javascriptNode.onaudioprocess = null;\n\t            }\n\t\n\t            Object.keys(this.modules).forEach(function (e) {\n\t                m = _this4.modules[e].instance;\n\t                if (typeof m.resetEnvelope === 'function') {\n\t                    dest = _this4.modules[m.link] ? _this4.modules[m.link].instance : null;\n\t                    m.resetEnvelope(dest);\n\t                }\n\t            });\n\t            Object.keys(this.modules).forEach(function (e) {\n\t                m = _this4.modules[e].instance;\n\t                if (typeof m.noteOff === 'function') {\n\t                    m.noteOff(release);\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Voice;\n\t})();\n\t\n\texports['default'] = Voice;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 11 */\n/*!**********************************!*\\\n  !*** ./src/lib/modules/Delay.js ***!\n  \\**********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar Delay = (function (_Effect) {\n\t    _inherits(Delay, _Effect);\n\t\n\t    function Delay(props) {\n\t        _classCallCheck(this, Delay);\n\t\n\t        _get(Object.getPrototypeOf(Delay.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.wet = +props.wet || 0;\n\t        this.feedback = +props.feedback || 0;\n\t        this.cutoff = +props.cutoff || 0;\n\t        this.delayTime = +props.delayTime || 0;\n\t        this.bypass = +props.bypass || 0;\n\t\n\t        //TODO set an array of main effects??\n\t        this.setMainEffect('Delay', 'filter', {\n\t            feedback: this.feedback, //0 to 1+\n\t            delayTime: this.delayTime, //how many milliseconds should the wet signal be delayed?\n\t            wetLevel: this.wet, //0 to 1+\n\t            dryLevel: 1, //0 to 1+\n\t            cutoff: this.cutoff, //cutoff frequency of the built in lowpass-filter. 20 to 22050\n\t            bypass: this.bypass\n\t        });\n\t    }\n\t\n\t    return Delay;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = Delay;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 12 */\n/*!*************************************!*\\\n  !*** ./src/lib/modules/Envelope.js ***!\n  \\*************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _coreModule = __webpack_require__(/*! ../core/Module */ 4);\n\t\n\tvar _coreModule2 = _interopRequireDefault(_coreModule);\n\t\n\tvar Envelope = (function (_Module) {\n\t    _inherits(Envelope, _Module);\n\t\n\t    function Envelope(props) {\n\t        _classCallCheck(this, Envelope);\n\t\n\t        _get(Object.getPrototypeOf(Envelope.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.target = props.target || null;\n\t\n\t        this.attack = props.attack;\n\t        this.decay = props.decay;\n\t        this.sustain = props.sustain;\n\t        this.release = props.release;\n\t    }\n\t\n\t    _createClass(Envelope, [{\n\t        key: 'createGain',\n\t        value: function createGain() {\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'getReleaseTime',\n\t        value: function getReleaseTime() {\n\t            var now = _AudioContext2['default'].currentTime,\n\t                release = undefined;\n\t\n\t            if (this.release) {\n\t                release = now + this.release / 10.0;\n\t            } else {\n\t                release = now + 0.2;\n\t            }\n\t\n\t            return release;\n\t        }\n\t    }, {\n\t        key: 'setEnvelope',\n\t        value: function setEnvelope(dest) {\n\t            var now = _AudioContext2['default'].currentTime,\n\t                envelope = this.level % 101,\n\t                attackLevel = undefined,\n\t                sustainLevel = undefined,\n\t                attackEnd = this.attack / 20.0,\n\t                t = undefined;\n\t\n\t            if (this.target === 'gain') {\n\t                attackLevel = envelope / 100;\n\t                sustainLevel = this.sustain / 100.0;\n\t            } else {\n\t                attackLevel = envelope * 72; // Range: 0-7200: 6-octave range\n\t                sustainLevel = attackLevel * this.sustain / 100.0; // range: 0-7200\n\t            }\n\t\n\t            if (!attackEnd) {\n\t                attackEnd = 0.05; // tweak to get target decay to work properly\n\t            }\n\t\n\t            if (dest && typeof dest.getEnvelopeTarget === 'function') {\n\t                t = dest.getEnvelopeTarget(this.target);\n\t\n\t                if (t) {\n\t                    t.setValueAtTime(0, now);\n\t                    t.linearRampToValueAtTime(attackLevel, now + attackEnd);\n\t                    t.setTargetAtTime(sustainLevel, now + attackEnd, this.decay / 100.0);\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'resetEnvelope',\n\t        value: function resetEnvelope(dest) {\n\t            var now = _AudioContext2['default'].currentTime,\n\t                t = undefined;\n\t\n\t            if (dest && typeof dest.getEnvelopeTarget === 'function') {\n\t                t = dest.getEnvelopeTarget(this.target);\n\t\n\t                if (t) {\n\t                    t.cancelScheduledValues(now);\n\t                    if (this.target === 'gain') {\n\t                        t.setValueAtTime(t.value, now);\n\t                    }\n\t                    t.setTargetAtTime(0, now, this.release / 100.0);\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getLineOut',\n\t        value: function getLineOut() {\n\t            return false;\n\t        }\n\t    }]);\n\t\n\t    return Envelope;\n\t})(_coreModule2['default']);\n\t\n\texports['default'] = Envelope;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/*!***********************************!*\\\n  !*** ./src/lib/modules/Filter.js ***!\n  \\***********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar Filter = (function (_Effect) {\n\t    _inherits(Filter, _Effect);\n\t\n\t    function Filter(props) {\n\t        _classCallCheck(this, Filter);\n\t\n\t        _get(Object.getPrototypeOf(Filter.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.freq = +props.freq || 11000;\n\t        this.q = +props.q || 10;\n\t        this.bypass = +props.bypass || 0;\n\t        this.filterGain = this.level || 0;\n\t\n\t        this.setMainEffect('Filter', 'filter', {\n\t            frequency: this.freq, //20 to 22050\n\t            Q: this.q, //0.001 to 100\n\t            gain: this.filterGain, //-40 to 40\n\t            filterType: props.type || _coreConstants.CONST.FILTER_LOWPASS,\n\t            bypass: this.bypass\n\t        });\n\t    }\n\t\n\t    return Filter;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = Filter;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 14 */\n/*!***********************************!*\\\n  !*** ./src/lib/modules/Master.js ***!\n  \\***********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _coreModule = __webpack_require__(/*! ../core/Module */ 4);\n\t\n\tvar _coreModule2 = _interopRequireDefault(_coreModule);\n\t\n\tvar Master = (function (_Module) {\n\t    _inherits(Master, _Module);\n\t\n\t    function Master(props) {\n\t        _classCallCheck(this, Master);\n\t\n\t        _get(Object.getPrototypeOf(Master.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.main = _AudioContext2['default'].createGain();\n\t        this.link = null;\n\t    }\n\t\n\t    _createClass(Master, [{\n\t        key: 'getLineIn',\n\t        value: function getLineIn() {\n\t            return this.main;\n\t        }\n\t    }, {\n\t        key: 'lineOut',\n\t        value: function lineOut() {\n\t            this.main.connect(this.gain);\n\t            return this.gain;\n\t            //if (spectrum) {\n\t            //    this.javascriptNode = AudioContext.createScriptProcessor(2048, 1, 1);\n\t            //    this.javascriptNode.connect(AudioContext.destination);\n\t            //\n\t            //    this.analyser = AudioContext.createAnalyser();\n\t            //    this.analyser.fftSize = 1024;\n\t            //\n\t            //    this.gain.connect(this.analyser);\n\t            //    this.analyser.connect(AudioContext.destination);\n\t            //\n\t            //    this.javascriptNode.onaudioprocess = function () {\n\t            //        console.log('asd');\n\t            //    };\n\t            //\n\t            //} else {\n\t\n\t            //}\n\t        }\n\t    }]);\n\t\n\t    return Master;\n\t})(_coreModule2['default']);\n\t\n\texports['default'] = Master;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 15 */\n/*!**************************************!*\\\n  !*** ./src/lib/modules/Modulator.js ***!\n  \\**************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../core/Constants */ 1);\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _coreSoundSource = __webpack_require__(/*! ../core/SoundSource */ 5);\n\t\n\tvar _coreSoundSource2 = _interopRequireDefault(_coreSoundSource);\n\t\n\tvar Modulator = (function (_SoundSource) {\n\t    _inherits(Modulator, _SoundSource);\n\t\n\t    function Modulator(props) {\n\t        _classCallCheck(this, Modulator);\n\t\n\t        _get(Object.getPrototypeOf(Modulator.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.freq = +props.freq || 440;\n\t        this.target = props.target || 'frequency';\n\t\n\t        this.main = _AudioContext2['default'].createOscillator();\n\t        this.main.type = props.type || _coreConstants.CONST.WAVE_SINE;\n\t        this.main.connect(this.gain);\n\t    }\n\t\n\t    _createClass(Modulator, [{\n\t        key: 'setNote',\n\t        value: function setNote() {\n\t            var f = this.freq % 11;\n\t            this.main.frequency.value = f;\n\t        }\n\t\n\t        //TODO refactor in parent class\n\t    }, {\n\t        key: 'getLineIn',\n\t        value: function getLineIn(sourceType, source) {\n\t            if (sourceType === _coreConstants.TYPES.MODULATOR) {\n\t                return this.main[source.target];\n\t            } else {\n\t                return this.main.frequency;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Modulator;\n\t})(_coreSoundSource2['default']);\n\t\n\texports['default'] = Modulator;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 16 */\n/*!**********************************!*\\\n  !*** ./src/lib/modules/Noise.js ***!\n  \\**********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../core/Constants */ 1);\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _coreSoundSource = __webpack_require__(/*! ../core/SoundSource */ 5);\n\t\n\tvar _coreSoundSource2 = _interopRequireDefault(_coreSoundSource);\n\t\n\tvar Noise = (function (_SoundSource) {\n\t    _inherits(Noise, _SoundSource);\n\t\n\t    function Noise(props) {\n\t        _classCallCheck(this, Noise);\n\t\n\t        _get(Object.getPrototypeOf(Noise.prototype), 'constructor', this).call(this, props);\n\t        this.main = _AudioContext2['default'].createBufferSource();\n\t        this.main.connect(this.gain);\n\t\n\t        this.color = props.color || 'white';\n\t        this.setColor();\n\t    }\n\t\n\t    _createClass(Noise, [{\n\t        key: 'setColor',\n\t        value: function setColor() {\n\t            switch (this.color) {\n\t                case _coreConstants.CONST.NOISE_WHITE:\n\t                    this.main.buffer = this.white();\n\t                    break;\n\t                case _coreConstants.CONST.NOISE_PINK:\n\t                    this.main.buffer = this.pink();\n\t                    break;\n\t                case _coreConstants.CONST.NOISE_BROWN:\n\t                    this.main.buffer = this.brown();\n\t                    break;\n\t                default:\n\t                    throw new Error('Invalid Noise color: ' + this.color);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'white',\n\t        value: function white() {\n\t            var noiseBuffer = this.getNoiseBuffer(),\n\t                bufferSize = this.getBufferSize(),\n\t                output = noiseBuffer.getChannelData(0);\n\t\n\t            for (var i = 0; i < bufferSize; i++) {\n\t                output[i] = Math.random() * 2 - 1;\n\t            }\n\t\n\t            return noiseBuffer;\n\t        }\n\t    }, {\n\t        key: 'pink',\n\t        value: function pink() {\n\t            var b0 = undefined,\n\t                b1 = undefined,\n\t                b2 = undefined,\n\t                b3 = undefined,\n\t                b4 = undefined,\n\t                b5 = undefined,\n\t                b6 = undefined,\n\t                noiseBuffer = this.getNoiseBuffer(),\n\t                bufferSize = this.getBufferSize(),\n\t                output = noiseBuffer.getChannelData(0),\n\t                white = undefined;\n\t\n\t            b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\n\t            for (var i = 0; i < bufferSize; i++) {\n\t                white = Math.random() * 2 - 1;\n\t\n\t                b0 = 0.99886 * b0 + white * 0.0555179;\n\t                b1 = 0.99332 * b1 + white * 0.0750759;\n\t                b2 = 0.96900 * b2 + white * 0.1538520;\n\t                b3 = 0.86650 * b3 + white * 0.3104856;\n\t                b4 = 0.55000 * b4 + white * 0.5329522;\n\t                b5 = -0.7616 * b5 - white * 0.0168980;\n\t\n\t                output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t                output[i] *= 0.11;\n\t                b6 = white * 0.115926;\n\t            }\n\t\n\t            return noiseBuffer;\n\t        }\n\t    }, {\n\t        key: 'brown',\n\t        value: function brown() {\n\t            var noiseBuffer = this.getNoiseBuffer(),\n\t                bufferSize = this.getBufferSize(),\n\t                output = noiseBuffer.getChannelData(0),\n\t                lastOut = 0.0,\n\t                white = undefined;\n\t\n\t            for (var i = 0; i < bufferSize; i++) {\n\t                white = white = Math.random() * 2 - 1;\n\t\n\t                output[i] = (lastOut + 0.02 * white) / 1.02;\n\t                lastOut = output[i];\n\t                output[i] *= 3.5;\n\t            }\n\t\n\t            return noiseBuffer;\n\t        }\n\t    }, {\n\t        key: 'getBufferSize',\n\t        value: function getBufferSize() {\n\t            return 2 * _AudioContext2['default'].sampleRate;\n\t        }\n\t    }, {\n\t        key: 'getNoiseBuffer',\n\t        value: function getNoiseBuffer() {\n\t            var bufferSize = this.getBufferSize(),\n\t                noiseBuffer = _AudioContext2['default'].createBuffer(1, bufferSize, _AudioContext2['default'].sampleRate);\n\t            return noiseBuffer;\n\t        }\n\t    }, {\n\t        key: 'setNote',\n\t        value: function setNote() {\n\t            this.main.loop = true;\n\t        }\n\t    }, {\n\t        key: 'getLineIn',\n\t        value: function getLineIn(sourceType, source) {\n\t            if (sourceType === _coreConstants.TYPES.MODULATOR && this.main[source.target]) {\n\t                return this.main[source.target];\n\t            } else {\n\t                return this.main.detune;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Noise;\n\t})(_coreSoundSource2['default']);\n\t\n\texports['default'] = Noise;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 17 */\n/*!***************************************!*\\\n  !*** ./src/lib/modules/Oscillator.js ***!\n  \\***************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../core/Constants */ 1);\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _coreSoundSource = __webpack_require__(/*! ../core/SoundSource */ 5);\n\t\n\tvar _coreSoundSource2 = _interopRequireDefault(_coreSoundSource);\n\t\n\tvar Oscillator = (function (_SoundSource) {\n\t    _inherits(Oscillator, _SoundSource);\n\t\n\t    function Oscillator(props) {\n\t        _classCallCheck(this, Oscillator);\n\t\n\t        _get(Object.getPrototypeOf(Oscillator.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.detune = +props.detune || 0;\n\t\n\t        this.main = _AudioContext2['default'].createOscillator();\n\t        this.main.type = props.type || _coreConstants.CONST.WAVE_SINE;\n\t        this.main.connect(this.gain);\n\t\n\t        this.setDetune();\n\t    }\n\t\n\t    _createClass(Oscillator, [{\n\t        key: 'setDetune',\n\t        value: function setDetune() {\n\t            if (this.detune > 1200) {\n\t                this.detune = 1200;\n\t            } else if (this.detune < -1200) {\n\t                this.detune = -1200;\n\t            }\n\t\n\t            this.main.detune.value = this.detune;\n\t        }\n\t    }, {\n\t        key: 'setNote',\n\t        value: function setNote(note) {\n\t            this.main.frequency.value = note;\n\t        }\n\t    }, {\n\t        key: 'getLineIn',\n\t        value: function getLineIn(sourceType, source) {\n\t            if (sourceType === _coreConstants.TYPES.MODULATOR) {\n\t                return this.main[source.target];\n\t            } else {\n\t                return this.main.frequency;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Oscillator;\n\t})(_coreSoundSource2['default']);\n\t\n\texports['default'] = Oscillator;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 18 */\n/*!******************************************!*\\\n  !*** ./src/lib/modules/PingPongDelay.js ***!\n  \\******************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar PingPongDelay = (function (_Effect) {\n\t    _inherits(PingPongDelay, _Effect);\n\t\n\t    function PingPongDelay(props) {\n\t        _classCallCheck(this, PingPongDelay);\n\t\n\t        _get(Object.getPrototypeOf(PingPongDelay.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.wet = +props.wet || 0;\n\t        this.feedback = +props.feedback || 0;\n\t        this.delayTimeLeft = +props.delayTimeLeft || 0;\n\t        this.delayTimeRight = +props.delayTimeRight || 0;\n\t        this.bypass = +props.bypass || 0;\n\t\n\t        //TODO set an array of main effects??\n\t        this.setMainEffect('PingPongDelay', 'delayLeft', {\n\t            wetLevel: this.wet, //0 to 1\n\t            feedback: this.feedback, //0 to 1\n\t            delayTimeLeft: this.delayTimeRight, //1 to 10000 (milliseconds)\n\t            delayTimeRight: this.delayTimeRight //1 to 10000 (milliseconds)\n\t        });\n\t    }\n\t\n\t    return PingPongDelay;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = PingPongDelay;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 19 */\n/*!************************************!*\\\n  !*** ./src/lib/modules/Tremolo.js ***!\n  \\************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar Tremolo = (function (_Effect) {\n\t    _inherits(Tremolo, _Effect);\n\t\n\t    function Tremolo(props) {\n\t        _classCallCheck(this, Tremolo);\n\t\n\t        _get(Object.getPrototypeOf(Tremolo.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.intensity = +props.intensity || 0; //0 to 1\n\t        this.rate = +props.rate || 0.001; //0.001 to 8\n\t        this.stereoPhase = +props.stereoPhase || 0; //0 to 180\n\t        this.bypass = +props.bypass || 0;\n\t\n\t        //TODO set an array of main effects??\n\t        this.setMainEffect('Tremolo', 'output', {\n\t            intensity: this.intensity,\n\t            rate: this.rate,\n\t            stereoPhase: this.stereoPhase,\n\t            bypass: this.bypass\n\t        });\n\t    }\n\t\n\t    return Tremolo;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = Tremolo;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 20 */\n/*!***********************************!*\\\n  !*** ./src/lib/modules/WahWah.js ***!\n  \\***********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar WahWah = (function (_Effect) {\n\t    _inherits(WahWah, _Effect);\n\t\n\t    function WahWah(props) {\n\t        _classCallCheck(this, WahWah);\n\t\n\t        _get(Object.getPrototypeOf(WahWah.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.automode = +props.automode || false; //true/false\n\t        this.baseFrequency = +props.baseFrequency || 0; //0 to 1\n\t        this.excursionOctaves = +props.excursionOctaves || 1; //1 to 6\n\t        this.sweep = +props.sweep || 0; //0 to 1\n\t        this.resonance = +props.resonance || 1; //1 to 100\n\t        this.sensitivity = +props.sensitivity || 0; //-1 to 1\n\t        this.bypass = +props.bypass || 0;\n\t\n\t        //TODO set an array of main effects??\n\t        this.setMainEffect('WahWah', 'filterBp', {\n\t            automode: this.automode,\n\t            baseFrequency: this.baseFrequency,\n\t            excursionOctaves: this.excursionOctaves,\n\t            sweep: this.sweep,\n\t            resonance: this.resonance,\n\t            sensitivity: this.sensitivity,\n\t            bypass: this.bypass\n\t        });\n\t    }\n\t\n\t    return WahWah;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = WahWah;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 21 */\n/*!**************************!*\\\n  !*** ./~/tunajs/tuna.js ***!\n  \\**************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t    Copyright (c) 2012 DinahMoe AB & Oskar Eriksson\n\t\n\t    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\n\t    files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy,\n\t    modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software\n\t    is furnished to do so, subject to the following conditions:\n\t\n\t    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t\n\t    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n\t    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t*/\n\t(function(window) {\n\t    var userContext,\n\t        userInstance,\n\t        pipe = function(param, val) {\n\t            param.value = val;\n\t        },\n\t        Super = Object.create(null, {\n\t            activate: {\n\t                writable: true,\n\t                value: function(doActivate) {\n\t                    if (doActivate) {\n\t                        this.input.disconnect();\n\t                        this.input.connect(this.activateNode);\n\t                        if (this.activateCallback) {\n\t                            this.activateCallback(doActivate);\n\t                        }\n\t                    } else {\n\t                        this.input.disconnect();\n\t                        this.input.connect(this.output);\n\t                    }\n\t                }\n\t            },\n\t            bypass: {\n\t                get: function() {\n\t                    return this._bypass;\n\t                },\n\t                set: function(value) {\n\t                    if (this._lastBypassValue === value) {\n\t                        return;\n\t                    }\n\t                    this._bypass = value;\n\t                    this.activate(!value);\n\t                    this._lastBypassValue = value;\n\t                }\n\t            },\n\t            connect: {\n\t                value: function(target) {\n\t                    this.output.connect(target);\n\t                }\n\t            },\n\t            disconnect: {\n\t                value: function(target) {\n\t                    this.output.disconnect(target);\n\t                }\n\t            },\n\t            connectInOrder: {\n\t                value: function(nodeArray) {\n\t                    var i = nodeArray.length - 1;\n\t                    while (i--) {\n\t                        if (!nodeArray[i].connect) {\n\t                            return console.error(\"AudioNode.connectInOrder: TypeError: Not an AudioNode.\", nodeArray[i]);\n\t                        }\n\t                        if (nodeArray[i + 1].input) {\n\t                            nodeArray[i].connect(nodeArray[i + 1].input);\n\t                        } else {\n\t                            nodeArray[i].connect(nodeArray[i + 1]);\n\t                        }\n\t                    }\n\t                }\n\t            },\n\t            getDefaults: {\n\t                value: function() {\n\t                    var result = {};\n\t                    for (var key in this.defaults) {\n\t                        result[key] = this.defaults[key].value;\n\t                    }\n\t                    return result;\n\t                }\n\t            },\n\t            automate: {\n\t                value: function(property, value, duration, startTime) {\n\t                    var start = startTime ? ~~(startTime / 1000) : userContext.currentTime,\n\t                        dur = duration ? ~~(duration / 1000) : 0,\n\t                        _is = this.defaults[property],\n\t                        param = this[property],\n\t                        method;\n\t\n\t                    if (param) {\n\t                        if (_is.automatable) {\n\t                            if (!duration) {\n\t                                method = \"setValueAtTime\";\n\t                            } else {\n\t                                method = \"linearRampToValueAtTime\";\n\t                                param.cancelScheduledValues(start);\n\t                                param.setValueAtTime(param.value, start);\n\t                            }\n\t                            param[method](value, dur + start);\n\t                        } else {\n\t                            param = value;\n\t                        }\n\t                    } else {\n\t                        console.error(\"Invalid Property for \" + this.name);\n\t                    }\n\t                }\n\t            }\n\t        }),\n\t        FLOAT = \"float\",\n\t        BOOLEAN = \"boolean\",\n\t        STRING = \"string\",\n\t        INT = \"int\";\n\t\n\t    if (typeof module !== \"undefined\" && module.exports) {\n\t        module.exports = Tuna;\n\t    } else if (true) {\n\t        window.define(\"Tuna\", definition);\n\t    } else {\n\t        window.Tuna = Tuna;\n\t    }\n\t\n\t    function definition() {\n\t        return Tuna;\n\t    }\n\t\n\t    function Tuna(context) {\n\t        if (!(this instanceof Tuna)) {\n\t            return new Tuna(context);\n\t        }\n\t        if (!window.AudioContext) {\n\t            window.AudioContext = window.webkitAudioContext;\n\t        }\n\t        if (!context) {\n\t            console.log(\"tuna.js: Missing audio context! Creating a new context for you.\");\n\t            context = window.AudioContext && (new window.AudioContext());\n\t        }\n\t        if (!context) {\n\t            throw new Error(\"Tuna cannot initialize because this environment does not support web audio.\");\n\t        }\n\t        connectify(context);\n\t        userContext = context;\n\t        userInstance = this;\n\t    }\n\t\n\t    function connectify(context) {\n\t        if (context.__connectified__ === true) return;\n\t\n\t        var gain = context.createGain(),\n\t            proto = Object.getPrototypeOf(Object.getPrototypeOf(gain)),\n\t            oconnect = proto.connect;\n\t\n\t        proto.connect = shimConnect;\n\t        context.__connectified__ = true; // Prevent overriding connect more than once\n\t\n\t        function shimConnect() {\n\t            var node = Array.prototype.shift.apply(arguments);\n\t            node = Super.isPrototypeOf ? (Super.isPrototypeOf(node) ? node.input : node) : (node.input || node);\n\t            arguments = Array.prototype.slice.call(arguments);\n\t            arguments.unshift(node);\n\t            oconnect.apply(this, arguments);\n\t            return node;\n\t        }\n\t    }\n\t\n\t    function dbToWAVolume(db) {\n\t        return Math.max(0, Math.round(100 * Math.pow(2, db / 6)) / 100);\n\t    }\n\t\n\t    function fmod(x, y) {\n\t        // http://kevin.vanzonneveld.net\n\t        // *     example 1: fmod(5.7, 1.3);\n\t        // *     returns 1: 0.5\n\t        var tmp, tmp2, p = 0,\n\t            pY = 0,\n\t            l = 0.0,\n\t            l2 = 0.0;\n\t\n\t        tmp = x.toExponential().match(/^.\\.?(.*)e(.+)$/);\n\t        p = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n\t        tmp = y.toExponential().match(/^.\\.?(.*)e(.+)$/);\n\t        pY = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n\t\n\t        if (pY > p) {\n\t            p = pY;\n\t        }\n\t\n\t        tmp2 = (x % y);\n\t\n\t        if (p < -100 || p > 20) {\n\t            // toFixed will give an out of bound error so we fix it like this:\n\t            l = Math.round(Math.log(tmp2) / Math.log(10));\n\t            l2 = Math.pow(10, l);\n\t\n\t            return (tmp2 / l2).toFixed(l - p) * l2;\n\t        } else {\n\t            return parseFloat(tmp2.toFixed(-p));\n\t        }\n\t    }\n\t\n\t    function sign(x) {\n\t        if (x === 0) {\n\t            return 1;\n\t        } else {\n\t            return Math.abs(x) / x;\n\t        }\n\t    }\n\t\n\t    function tanh(n) {\n\t        return (Math.exp(n) - Math.exp(-n)) / (Math.exp(n) + Math.exp(-n));\n\t    }\n\t\n\t    function initValue(userVal, defaultVal) {\n\t        return userVal === undefined ? defaultVal : userVal;\n\t    }\n\t\n\t    Tuna.prototype.Bitcrusher = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;\n\t\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.processor);\n\t        this.processor.connect(this.output);\n\t\n\t        var phaser = 0,\n\t            last = 0,\n\t            input, output, step, i, length;\n\t        this.processor.onaudioprocess = function(e) {\n\t            input = e.inputBuffer.getChannelData(0),\n\t            output = e.outputBuffer.getChannelData(0),\n\t            step = Math.pow(1 / 2, this.bits);\n\t            length = input.length;\n\t            for (i = 0; i < length; i++) {\n\t                phaser += this.normfreq;\n\t                if (phaser >= 1.0) {\n\t                    phaser -= 1.0;\n\t                    last = step * Math.floor(input[i] / step + 0.5);\n\t                }\n\t                output[i] = last;\n\t            }\n\t        };\n\t\n\t        this.bits = properties.bits || this.defaults.bits.value;\n\t        this.normfreq = initValue(properties.normfreq, this.defaults.normfreq.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Bitcrusher.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Bitcrusher\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                bits: {\n\t                    value: 4,\n\t                    min: 1,\n\t                    max: 16,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                bufferSize: {\n\t                    value: 4096,\n\t                    min: 256,\n\t                    max: 16384,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                bypass: {\n\t                    value: true,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                normfreq: {\n\t                    value: 0.1,\n\t                    min: 0.0001,\n\t                    max: 1.0,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        bits: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.processor.bits;\n\t            },\n\t            set: function(value) {\n\t                this.processor.bits = value;\n\t            }\n\t        },\n\t        normfreq: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.processor.normfreq;\n\t            },\n\t            set: function(value) {\n\t                this.processor.normfreq = value;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Cabinet = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.convolver = this.newConvolver(properties.impulsePath ||\n\t            \"../impulses/impulse_guitar.wav\");\n\t        this.makeupNode = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.convolver.input);\n\t        this.convolver.output.connect(this.makeupNode);\n\t        this.makeupNode.connect(this.output);\n\t\n\t        this.makeupGain = initValue(properties.makeupGain, this.defaults\n\t            .makeupGain);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Cabinet.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Cabinet\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                makeupGain: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 20,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                bypass: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                }\n\t            }\n\t        },\n\t        makeupGain: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.makeupNode.gain;\n\t            },\n\t            set: function(value) {\n\t                this.makeupNode.gain.value = value;\n\t            }\n\t        },\n\t        newConvolver: {\n\t            value: function(impulsePath) {\n\t                return new userInstance.Convolver({\n\t                    impulse: impulsePath,\n\t                    dryLevel: 0,\n\t                    wetLevel: 1\n\t                });\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Chorus = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.attenuator = this.activateNode = userContext.createGain();\n\t        this.splitter = userContext.createChannelSplitter(2);\n\t        this.delayL = userContext.createDelay();\n\t        this.delayR = userContext.createDelay();\n\t        this.feedbackGainNodeLR = userContext.createGain();\n\t        this.feedbackGainNodeRL = userContext.createGain();\n\t        this.merger = userContext.createChannelMerger(2);\n\t        this.output = userContext.createGain();\n\t\n\t        this.lfoL = new userInstance.LFO({\n\t            target: this.delayL.delayTime,\n\t            callback: pipe\n\t        });\n\t        this.lfoR = new userInstance.LFO({\n\t            target: this.delayR.delayTime,\n\t            callback: pipe\n\t        });\n\t\n\t        this.input.connect(this.attenuator);\n\t        this.attenuator.connect(this.output);\n\t        this.attenuator.connect(this.splitter);\n\t        this.splitter.connect(this.delayL, 0);\n\t        this.splitter.connect(this.delayR, 1);\n\t        this.delayL.connect(this.feedbackGainNodeLR);\n\t        this.delayR.connect(this.feedbackGainNodeRL);\n\t        this.feedbackGainNodeLR.connect(this.delayR);\n\t        this.feedbackGainNodeRL.connect(this.delayL);\n\t        this.delayL.connect(this.merger, 0, 0);\n\t        this.delayR.connect(this.merger, 0, 1);\n\t        this.merger.connect(this.output);\n\t\n\t        this.feedback = initValue(properties.feedback, this.defaults.feedback\n\t            .value);\n\t        this.rate = initValue(properties.rate, this.defaults.rate.value);\n\t        this.delay = initValue(properties.delay, this.defaults.delay.value);\n\t        this.depth = initValue(properties.depth, this.defaults.depth.value);\n\t        this.lfoR.phase = Math.PI / 2;\n\t        this.attenuator.gain.value = 0.6934; // 1 / (10 ^ (((20 * log10(3)) / 3) / 20))\n\t        this.lfoL.activate(true);\n\t        this.lfoR.activate(true);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Chorus.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Chorus\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                feedback: {\n\t                    value: 0.4,\n\t                    min: 0,\n\t                    max: 0.95,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                delay: {\n\t                    value: 0.0045,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                depth: {\n\t                    value: 0.7,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                rate: {\n\t                    value: 1.5,\n\t                    min: 0,\n\t                    max: 8,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                bypass: {\n\t                    value: true,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                }\n\t            }\n\t        },\n\t        delay: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._delay;\n\t            },\n\t            set: function(value) {\n\t                this._delay = 0.0002 * (Math.pow(10, value) * 2);\n\t                this.lfoL.offset = this._delay;\n\t                this.lfoR.offset = this._delay;\n\t                this._depth = this._depth;\n\t            }\n\t        },\n\t        depth: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._depth;\n\t            },\n\t            set: function(value) {\n\t                this._depth = value;\n\t                this.lfoL.oscillation = this._depth * this._delay;\n\t                this.lfoR.oscillation = this._depth * this._delay;\n\t            }\n\t        },\n\t        feedback: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._feedback;\n\t            },\n\t            set: function(value) {\n\t                this._feedback = value;\n\t                this.feedbackGainNodeLR.gain.value = this._feedback;\n\t                this.feedbackGainNodeRL.gain.value = this._feedback;\n\t            }\n\t        },\n\t        rate: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._rate;\n\t            },\n\t            set: function(value) {\n\t                this._rate = value;\n\t                this.lfoL.frequency = this._rate;\n\t                this.lfoR.frequency = this._rate;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Compressor = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.compNode = this.activateNode = userContext.createDynamicsCompressor();\n\t        this.makeupNode = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.compNode.connect(this.makeupNode);\n\t        this.makeupNode.connect(this.output);\n\t\n\t        this.automakeup = initValue(properties.automakeup, this.defaults\n\t            .automakeup\n\t            .value);\n\t        this.makeupGain = properties.makeupGain || this.defaults.makeupGain\n\t            .value;\n\t        this.threshold = initValue(properties.threshold, this.defaults.threshold\n\t            .value);\n\t        this.release = properties.release || this.defaults.release.value;\n\t        this.attack = initValue(properties.attack, this.defaults.attack\n\t            .value);\n\t        this.ratio = properties.ratio || this.defaults.ratio.value;\n\t        this.knee = initValue(properties.knee, this.defaults.knee.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Compressor.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Compressor\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                threshold: {\n\t                    value: -20,\n\t                    min: -60,\n\t                    max: 0,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                release: {\n\t                    value: 250,\n\t                    min: 10,\n\t                    max: 2000,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                makeupGain: {\n\t                    value: 1,\n\t                    min: 1,\n\t                    max: 100,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                attack: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1000,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                ratio: {\n\t                    value: 4,\n\t                    min: 1,\n\t                    max: 50,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                knee: {\n\t                    value: 5,\n\t                    min: 0,\n\t                    max: 40,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                automakeup: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                bypass: {\n\t                    value: true,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                }\n\t            }\n\t        },\n\t        computeMakeup: {\n\t            value: function() {\n\t                var magicCoefficient = 4,\n\t                    // raise me if the output is too hot\n\t                    c = this.compNode;\n\t                return -(c.threshold.value - c.threshold.value /\n\t                        c.ratio.value) /\n\t                    magicCoefficient;\n\t            }\n\t        },\n\t        automakeup: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._automakeup;\n\t            },\n\t            set: function(value) {\n\t                this._automakeup = value;\n\t                if (this._automakeup) this.makeupGain = this.computeMakeup();\n\t            }\n\t        },\n\t        threshold: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.threshold;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.threshold.value = value;\n\t                if (this._automakeup) this.makeupGain = this.computeMakeup();\n\t            }\n\t        },\n\t        ratio: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.ratio;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.ratio.value = value;\n\t                if (this._automakeup) this.makeupGain = this.computeMakeup();\n\t            }\n\t        },\n\t        knee: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.knee;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.knee.value = value;\n\t                if (this._automakeup) this.makeupGain = this.computeMakeup();\n\t            }\n\t        },\n\t        attack: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.attack;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.attack.value = value / 1000;\n\t            }\n\t        },\n\t        release: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.release;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.release = value / 1000;\n\t            }\n\t        },\n\t        makeupGain: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.makeupNode.gain;\n\t            },\n\t            set: function(value) {\n\t                this.makeupNode.gain.value = dbToWAVolume(value);\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Convolver = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.convolver = userContext.createConvolver();\n\t        this.dry = userContext.createGain();\n\t        this.filterLow = userContext.createBiquadFilter();\n\t        this.filterHigh = userContext.createBiquadFilter();\n\t        this.wet = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.filterLow);\n\t        this.activateNode.connect(this.dry);\n\t        this.filterLow.connect(this.filterHigh);\n\t        this.filterHigh.connect(this.convolver);\n\t        this.convolver.connect(this.wet);\n\t        this.wet.connect(this.output);\n\t        this.dry.connect(this.output);\n\t\n\t        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel\n\t            .value);\n\t        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel\n\t            .value);\n\t        this.highCut = properties.highCut || this.defaults.highCut.value;\n\t        this.buffer = properties.impulse ||\n\t            \"../impulses/ir_rev_short.wav\";\n\t        this.lowCut = properties.lowCut || this.defaults.lowCut.value;\n\t        this.level = initValue(properties.level, this.defaults.level.value);\n\t        this.filterHigh.type = \"lowpass\";\n\t        this.filterLow.type = \"highpass\";\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Convolver.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Convolver\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                highCut: {\n\t                    value: 22050,\n\t                    min: 20,\n\t                    max: 22050,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                lowCut: {\n\t                    value: 20,\n\t                    min: 20,\n\t                    max: 22050,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                dryLevel: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                wetLevel: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                level: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        lowCut: {\n\t            get: function() {\n\t                return this.filterLow.frequency;\n\t            },\n\t            set: function(value) {\n\t                this.filterLow.frequency.value = value;\n\t            }\n\t        },\n\t        highCut: {\n\t            get: function() {\n\t                return this.filterHigh.frequency;\n\t            },\n\t            set: function(value) {\n\t                this.filterHigh.frequency.value = value;\n\t            }\n\t        },\n\t        level: {\n\t            get: function() {\n\t                return this.output.gain;\n\t            },\n\t            set: function(value) {\n\t                this.output.gain.value = value;\n\t            }\n\t        },\n\t        dryLevel: {\n\t            get: function() {\n\t                return this.dry.gain\n\t            },\n\t            set: function(value) {\n\t                this.dry.gain.value = value;\n\t            }\n\t        },\n\t        wetLevel: {\n\t            get: function() {\n\t                return this.wet.gain;\n\t            },\n\t            set: function(value) {\n\t                this.wet.gain.value = value;\n\t            }\n\t        },\n\t        buffer: {\n\t            enumerable: false,\n\t            get: function() {\n\t                return this.convolver.buffer;\n\t            },\n\t            set: function(impulse) {\n\t                var convolver = this.convolver,\n\t                    xhr = new XMLHttpRequest();\n\t                if (!impulse) {\n\t                    console.log(\"Tuna.Convolver.setBuffer: Missing impulse path!\");\n\t                    return;\n\t                }\n\t                xhr.open(\"GET\", impulse, true);\n\t                xhr.responseType = \"arraybuffer\";\n\t                xhr.onreadystatechange = function() {\n\t                    if (xhr.readyState === 4) {\n\t                        if (xhr.status < 300 && xhr.status > 199 || xhr.status === 302) {\n\t                            userContext.decodeAudioData(xhr.response, function(buffer) {\n\t                                convolver.buffer = buffer;\n\t                            }, function(e) {\n\t                                if (e) console.log(\"Tuna.Convolver.setBuffer: Error decoding data\" + e);\n\t                            });\n\t                        }\n\t                    }\n\t                };\n\t                xhr.send(null);\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Delay = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.dry = userContext.createGain();\n\t        this.wet = userContext.createGain();\n\t        this.filter = userContext.createBiquadFilter();\n\t        this.delay = userContext.createDelay();\n\t        this.feedbackNode = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.delay);\n\t        this.activateNode.connect(this.dry);\n\t        this.delay.connect(this.filter);\n\t        this.filter.connect(this.feedbackNode);\n\t        this.feedbackNode.connect(this.delay);\n\t        this.feedbackNode.connect(this.wet);\n\t        this.wet.connect(this.output);\n\t        this.dry.connect(this.output);\n\t\n\t        this.delayTime = properties.delayTime || this.defaults.delayTime.value;\n\t        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n\t        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel.value);\n\t        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel.value);\n\t        this.cutoff = properties.cutoff || this.defaults.cutoff.value;\n\t        this.filter.type = \"lowpass\";\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Delay.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Delay\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                delayTime: {\n\t                    value: 100,\n\t                    min: 20,\n\t                    max: 1000,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                feedback: {\n\t                    value: 0.45,\n\t                    min: 0,\n\t                    max: 0.9,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                cutoff: {\n\t                    value: 20000,\n\t                    min: 20,\n\t                    max: 20000,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                wetLevel: {\n\t                    value: 0.5,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                dryLevel: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        delayTime: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.delay.delayTime;\n\t            },\n\t            set: function(value) {\n\t                this.delay.delayTime.value = value / 1000;\n\t            }\n\t        },\n\t        wetLevel: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.wet.gain;\n\t            },\n\t            set: function(value) {\n\t                this.wet.gain.value = value;\n\t            }\n\t        },\n\t        dryLevel: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.dry.gain;\n\t            },\n\t            set: function(value) {\n\t                this.dry.gain.value = value;\n\t            }\n\t        },\n\t        feedback: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.feedbackNode.gain;\n\t            },\n\t            set: function(value) {\n\t                this.feedbackNode.gain.value = value;\n\t            }\n\t        },\n\t        cutoff: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.frequency;\n\t            },\n\t            set: function(value) {\n\t                this.filter.frequency.value = value;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Filter = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.filter = userContext.createBiquadFilter();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.filter);\n\t        this.filter.connect(this.output);\n\t\n\t        this.frequency = properties.frequency || this.defaults.frequency\n\t            .value;\n\t        this.Q = properties.resonance || this.defaults.Q.value;\n\t        this.filterType = initValue(properties.filterType, this.defaults\n\t            .filterType\n\t            .value);\n\t        this.gain = initValue(properties.gain, this.defaults.gain.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Filter.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Filter\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                frequency: {\n\t                    value: 800,\n\t                    min: 20,\n\t                    max: 22050,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                Q: {\n\t                    value: 1,\n\t                    min: 0.001,\n\t                    max: 100,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                gain: {\n\t                    value: 0,\n\t                    min: -40,\n\t                    max: 40,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                bypass: {\n\t                    value: true,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                filterType: {\n\t                    value: \"lowpass\",\n\t                    automatable: false,\n\t                    type: STRING\n\t                }\n\t            }\n\t        },\n\t        filterType: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.type;\n\t            },\n\t            set: function(value) {\n\t                this.filter.type = value;\n\t            }\n\t        },\n\t        Q: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.Q;\n\t            },\n\t            set: function(value) {\n\t                this.filter.Q.value = value;\n\t            }\n\t        },\n\t        gain: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.gain;\n\t            },\n\t            set: function(value) {\n\t                this.filter.gain.value = value;\n\t            }\n\t        },\n\t        frequency: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.frequency;\n\t            },\n\t            set: function(value) {\n\t                this.filter.frequency.value = value;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.MoogFilter = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.bufferSize = properties.bufferSize || this.defaults.bufferSize\n\t            .value;\n\t\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.processor = userContext.createScriptProcessor(this.bufferSize,\n\t            1,\n\t            1);\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.processor);\n\t        this.processor.connect(this.output);\n\t\n\t        var in1, in2, in3, in4, out1, out2, out3, out4;\n\t        in1 = in2 = in3 = in4 = out1 = out2 = out3 = out4 = 0.0;\n\t        var input, output, f, fb, i, length;\n\t        this.processor.onaudioprocess = function(e) {\n\t            input = e.inputBuffer.getChannelData(0),\n\t                output = e.outputBuffer.getChannelData(0),\n\t                f = this.cutoff * 1.16,\n\t                inputFactor = 0.35013 * (f * f) * (f * f);\n\t            fb = this.resonance * (1.0 - 0.15 * f * f);\n\t            length = input.length;\n\t            for (i = 0; i < length; i++) {\n\t                input[i] -= out4 * fb;\n\t                input[i] *= inputFactor;\n\t                out1 = input[i] + 0.3 * in1 + (1 - f) * out1; // Pole 1\n\t                in1 = input[i];\n\t                out2 = out1 + 0.3 * in2 + (1 - f) * out2; // Pole 2\n\t                in2 = out1;\n\t                out3 = out2 + 0.3 * in3 + (1 - f) * out3; // Pole 3\n\t                in3 = out2;\n\t                out4 = out3 + 0.3 * in4 + (1 - f) * out4; // Pole 4\n\t                in4 = out3;\n\t                output[i] = out4;\n\t            }\n\t        };\n\t\n\t        this.cutoff = initValue(properties.cutoff, this.defaults.cutoff\n\t            .value);\n\t        this.resonance = initValue(properties.resonance, this.defaults.resonance\n\t            .value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.MoogFilter.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"MoogFilter\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                bufferSize: {\n\t                    value: 4096,\n\t                    min: 256,\n\t                    max: 16384,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                bypass: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                cutoff: {\n\t                    value: 0.065,\n\t                    min: 0.0001,\n\t                    max: 1.0,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                resonance: {\n\t                    value: 3.5,\n\t                    min: 0.0,\n\t                    max: 4.0,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        cutoff: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.processor.cutoff;\n\t            },\n\t            set: function(value) {\n\t                this.processor.cutoff = value;\n\t            }\n\t        },\n\t        resonance: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.processor.resonance;\n\t            },\n\t            set: function(value) {\n\t                this.processor.resonance = value;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Overdrive = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.inputDrive = userContext.createGain();\n\t        this.waveshaper = userContext.createWaveShaper();\n\t        this.outputDrive = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.inputDrive);\n\t        this.inputDrive.connect(this.waveshaper);\n\t        this.waveshaper.connect(this.outputDrive);\n\t        this.outputDrive.connect(this.output);\n\t\n\t        this.ws_table = new Float32Array(this.k_nSamples);\n\t        this.drive = initValue(properties.drive, this.defaults.drive.value);\n\t        this.outputGain = initValue(properties.outputGain, this.defaults\n\t            .outputGain\n\t            .value);\n\t        this.curveAmount = initValue(properties.curveAmount, this.defaults\n\t            .curveAmount\n\t            .value);\n\t        this.algorithmIndex = initValue(properties.algorithmIndex, this\n\t            .defaults\n\t            .algorithmIndex.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Overdrive.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Overdrive\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                drive: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT,\n\t                    scaled: true\n\t                },\n\t                outputGain: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT,\n\t                    scaled: true\n\t                },\n\t                curveAmount: {\n\t                    value: 0.725,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                algorithmIndex: {\n\t                    value: 0,\n\t                    min: 0,\n\t                    max: 5,\n\t                    automatable: false,\n\t                    type: INT\n\t                }\n\t            }\n\t        },\n\t        k_nSamples: {\n\t            value: 8192\n\t        },\n\t        drive: {\n\t            get: function() {\n\t                return this.inputDrive.gain;\n\t            },\n\t            set: function(value) {\n\t                this._drive = value;\n\t            }\n\t        },\n\t        curveAmount: {\n\t            get: function() {\n\t                return this._curveAmount;\n\t            },\n\t            set: function(value) {\n\t                this._curveAmount = value;\n\t                if (this._algorithmIndex === undefined) {\n\t                    this._algorithmIndex = 0;\n\t                }\n\t                this.waveshaperAlgorithms[this._algorithmIndex]\n\t                    (this._curveAmount,\n\t                        this.k_nSamples, this.ws_table);\n\t                this.waveshaper.curve = this.ws_table;\n\t            }\n\t        },\n\t        outputGain: {\n\t            get: function() {\n\t                return this.outputDrive.gain;\n\t            },\n\t            set: function(value) {\n\t                this._outputGain = dbToWAVolume(value);\n\t            }\n\t        },\n\t        algorithmIndex: {\n\t            get: function() {\n\t                return this._algorithmIndex;\n\t            },\n\t            set: function(value) {\n\t                this._algorithmIndex = value;\n\t                this.curveAmount = this._curveAmount;\n\t            }\n\t        },\n\t        waveshaperAlgorithms: {\n\t            value: [\n\t                function(amount, n_samples, ws_table) {\n\t                    amount = Math.min(amount, 0.9999);\n\t                    var k = 2 * amount / (1 - amount),\n\t                        i, x;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        ws_table[i] = (1 + k) * x / (1 + k * Math.abs(x));\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) {\n\t                    var i, x, y;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        y = ((0.5 * Math.pow((x + 1.4), 2)) - 1) * y >= 0 ? 5.8 : 1.2;\n\t                        ws_table[i] = tanh(y);\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) {\n\t                    var i, x, y, a = 1 - amount;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        y = x < 0 ? -Math.pow(Math.abs(x), a + 0.04) : Math.pow(x, a);\n\t                        ws_table[i] = tanh(y * 2);\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) {\n\t                    var i, x, y, abx, a = 1 - amount > 0.99 ? 0.99 : 1 - amount;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        abx = Math.abs(x);\n\t                        if (abx < a) y = abx;\n\t                        else if (abx > a) y = a + (abx - a) / (1 + Math.pow((abx - a) / (1 - a), 2));\n\t                        else if (abx > 1) y = abx;\n\t                        ws_table[i] = sign(x) * y * (1 / ((a + 1) / 2));\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) { // fixed curve, amount doesn't do anything, the distortion is just from the drive\n\t                    var i, x;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        if (x < -0.08905) {\n\t                            ws_table[i] = (-3 / 4) * (1 - (Math.pow((1 - (Math.abs(x) - 0.032857)), 12)) + (1 / 3) * (Math.abs(x) -\n\t                                0.032847)) + 0.01;\n\t                        } else if (x >= -0.08905 && x < 0.320018) {\n\t                            ws_table[i] = (-6.153 * (x * x)) + 3.9375 * x;\n\t                        } else {\n\t                            ws_table[i] = 0.630035;\n\t                        }\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) {\n\t                    var a = 2 + Math.round(amount * 14),\n\t                        // we go from 2 to 16 bits, keep in mind for the UI\n\t                        bits = Math.round(Math.pow(2, a - 1)),\n\t                        // real number of quantization steps divided by 2\n\t                        i, x;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        ws_table[i] = Math.round(x * bits) / bits;\n\t                    }\n\t                }\n\t            ]\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Phaser = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.splitter = this.activateNode = userContext.createChannelSplitter(2);\n\t        this.filtersL = [];\n\t        this.filtersR = [];\n\t        this.feedbackGainNodeL = userContext.createGain();\n\t        this.feedbackGainNodeR = userContext.createGain();\n\t        this.merger = userContext.createChannelMerger(2);\n\t        this.filteredSignal = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t        this.lfoL = new userInstance.LFO({\n\t            target: this.filtersL,\n\t            callback: this.callback\n\t        });\n\t        this.lfoR = new userInstance.LFO({\n\t            target: this.filtersR,\n\t            callback: this.callback\n\t        });\n\t\n\t        var i = this.stage;\n\t        while (i--) {\n\t            this.filtersL[i] = userContext.createBiquadFilter();\n\t            this.filtersR[i] = userContext.createBiquadFilter();\n\t            this.filtersL[i].type = \"allpass\";\n\t            this.filtersR[i].type = \"allpass\";\n\t        }\n\t        this.input.connect(this.splitter);\n\t        this.input.connect(this.output);\n\t        this.splitter.connect(this.filtersL[0], 0, 0);\n\t        this.splitter.connect(this.filtersR[0], 1, 0);\n\t        this.connectInOrder(this.filtersL);\n\t        this.connectInOrder(this.filtersR);\n\t        this.filtersL[this.stage - 1].connect(this.feedbackGainNodeL);\n\t        this.filtersL[this.stage - 1].connect(this.merger, 0, 0);\n\t        this.filtersR[this.stage - 1].connect(this.feedbackGainNodeR);\n\t        this.filtersR[this.stage - 1].connect(this.merger, 0, 1);\n\t        this.feedbackGainNodeL.connect(this.filtersL[0]);\n\t        this.feedbackGainNodeR.connect(this.filtersR[0]);\n\t        this.merger.connect(this.output);\n\t\n\t        this.rate = initValue(properties.rate, this.defaults.rate.value);\n\t        this.baseModulationFrequency = properties.baseModulationFrequency || this.defaults.baseModulationFrequency.value;\n\t        this.depth = initValue(properties.depth, this.defaults.depth.value);\n\t        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n\t        this.stereoPhase = initValue(properties.stereoPhase, this.defaults.stereoPhase.value);\n\t\n\t        this.lfoL.activate(true);\n\t        this.lfoR.activate(true);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Phaser.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Phaser\"\n\t        },\n\t        stage: {\n\t            value: 4\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                rate: {\n\t                    value: 0.1,\n\t                    min: 0,\n\t                    max: 8,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                depth: {\n\t                    value: 0.6,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                feedback: {\n\t                    value: 0.7,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                stereoPhase: {\n\t                    value: 40,\n\t                    min: 0,\n\t                    max: 180,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                baseModulationFrequency: {\n\t                    value: 700,\n\t                    min: 500,\n\t                    max: 1500,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        callback: {\n\t            value: function(filters, value) {\n\t                for (var stage = 0; stage < 4; stage++) {\n\t                    filters[stage].frequency.value = value;\n\t                }\n\t            }\n\t        },\n\t        depth: {\n\t            get: function() {\n\t                return this._depth;\n\t            },\n\t            set: function(value) {\n\t                this._depth = value;\n\t                this.lfoL.oscillation = this._baseModulationFrequency * this._depth;\n\t                this.lfoR.oscillation = this._baseModulationFrequency * this._depth;\n\t            }\n\t        },\n\t        rate: {\n\t            get: function() {\n\t                return this._rate;\n\t            },\n\t            set: function(value) {\n\t                this._rate = value;\n\t                this.lfoL.frequency = this._rate;\n\t                this.lfoR.frequency = this._rate;\n\t            }\n\t        },\n\t        baseModulationFrequency: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._baseModulationFrequency;\n\t            },\n\t            set: function(value) {\n\t                this._baseModulationFrequency = value;\n\t                this.lfoL.offset = this._baseModulationFrequency;\n\t                this.lfoR.offset = this._baseModulationFrequency;\n\t                this._depth = this._depth;\n\t            }\n\t        },\n\t        feedback: {\n\t            get: function() {\n\t                return this._feedback;\n\t            },\n\t            set: function(value) {\n\t                this._feedback = value;\n\t                this.feedbackGainNodeL.gain.value = this._feedback;\n\t                this.feedbackGainNodeR.gain.value = this._feedback;\n\t            }\n\t        },\n\t        stereoPhase: {\n\t            get: function() {\n\t                return this._stereoPhase;\n\t            },\n\t            set: function(value) {\n\t                this._stereoPhase = value;\n\t                var newPhase = this.lfoL._phase + this._stereoPhase *\n\t                    Math.PI /\n\t                    180;\n\t                newPhase = fmod(newPhase, 2 * Math.PI);\n\t                this.lfoR._phase = newPhase;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.PingPongDelay = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.wetLevel = userContext.createGain();\n\t        this.stereoToMonoMix = userContext.createGain();\n\t        this.feedbackLevel = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t        this.delayLeft = userContext.createDelay();\n\t        this.delayRight = userContext.createDelay();\n\t\n\t        this.activateNode = userContext.createGain();\n\t        this.splitter = userContext.createChannelSplitter(2);\n\t        this.merger = userContext.createChannelMerger(2);\n\t\n\t        this.activateNode.connect(this.splitter);\n\t        this.splitter.connect(this.stereoToMonoMix, 0, 0);\n\t        this.splitter.connect(this.stereoToMonoMix, 1, 0);\n\t        this.stereoToMonoMix.gain.value = .5;\n\t        this.stereoToMonoMix.connect(this.wetLevel);\n\t        this.wetLevel.connect(this.delayLeft);\n\t        this.feedbackLevel.connect(this.delayLeft);\n\t        this.delayLeft.connect(this.delayRight);\n\t        this.delayRight.connect(this.feedbackLevel);\n\t        this.delayLeft.connect(this.merger, 0, 0);\n\t        this.delayRight.connect(this.merger, 0, 1);\n\t        this.merger.connect(this.output);\n\t        this.activateNode.connect(this.output);\n\t\n\t        this.delayTimeLeft = properties.delayTimeLeft !== undefined ? properties.delayTimeLeft : this.defaults.delayTimeLeft.value;\n\t        this.delayTimeRight = properties.delayTimeRight !== undefined ? properties.delayTimeRight : this.defaults.delayTimeRight.value;\n\t        this.feedbackLevel.gain.value = properties.feedback !== undefined ? properties.feedback : this.defaults.feedback.value;\n\t        this.wetLevel.gain.value = properties.wetLevel !== undefined ? properties.wetLevel : this.defaults.wetLevel.value;\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.PingPongDelay.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"PingPongDelay\"\n\t        },\n\t        delayTimeLeft: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._delayTimeLeft;\n\t            },\n\t            set: function(value) {\n\t                this._delayTimeLeft = value;\n\t                this.delayLeft.delayTime.value = value / 1000;\n\t            }\n\t        },\n\t        delayTimeRight: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._delayTimeRight;\n\t            },\n\t            set: function(value) {\n\t                this._delayTimeRight = value;\n\t                this.delayRight.delayTime.value = value / 1000;\n\t            }\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                delayTimeLeft: {\n\t                    value: 200,\n\t                    min: 1,\n\t                    max: 10000,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                delayTimeRight: {\n\t                    value: 400,\n\t                    min: 1,\n\t                    max: 10000,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                feedback: {\n\t                    value: 0.3,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                wetLevel: {\n\t                    value: 0.5,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Tremolo = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.splitter = this.activateNode = userContext.createChannelSplitter(\n\t                2),\n\t            this.amplitudeL = userContext.createGain(), this.amplitudeR =\n\t            userContext.createGain(), this.merger = userContext.createChannelMerger(\n\t                2), this.output = userContext.createGain();\n\t        this.lfoL = new userInstance.LFO({\n\t            target: this.amplitudeL.gain,\n\t            callback: pipe\n\t        });\n\t        this.lfoR = new userInstance.LFO({\n\t            target: this.amplitudeR.gain,\n\t            callback: pipe\n\t        });\n\t\n\t        this.input.connect(this.splitter);\n\t        this.splitter.connect(this.amplitudeL, 0);\n\t        this.splitter.connect(this.amplitudeR, 1);\n\t        this.amplitudeL.connect(this.merger, 0, 0);\n\t        this.amplitudeR.connect(this.merger, 0, 1);\n\t        this.merger.connect(this.output);\n\t\n\t        this.rate = properties.rate || this.defaults.rate.value;\n\t        this.intensity = initValue(properties.intensity, this.defaults.intensity\n\t            .value);\n\t        this.stereoPhase = initValue(properties.stereoPhase, this.defaults\n\t            .stereoPhase\n\t            .value);\n\t\n\t        this.lfoL.offset = 1 - (this.intensity / 2);\n\t        this.lfoR.offset = 1 - (this.intensity / 2);\n\t        this.lfoL.phase = this.stereoPhase * Math.PI / 180;\n\t\n\t        this.lfoL.activate(true);\n\t        this.lfoR.activate(true);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Tremolo.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Tremolo\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                intensity: {\n\t                    value: 0.3,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                stereoPhase: {\n\t                    value: 0,\n\t                    min: 0,\n\t                    max: 180,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                rate: {\n\t                    value: 5,\n\t                    min: 0.1,\n\t                    max: 11,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        intensity: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._intensity;\n\t            },\n\t            set: function(value) {\n\t                this._intensity = value;\n\t                this.lfoL.offset = 1 - this._intensity / 2;\n\t                this.lfoR.offset = 1 - this._intensity / 2;\n\t                this.lfoL.oscillation = this._intensity;\n\t                this.lfoR.oscillation = this._intensity;\n\t            }\n\t        },\n\t        rate: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._rate;\n\t            },\n\t            set: function(value) {\n\t                this._rate = value;\n\t                this.lfoL.frequency = this._rate;\n\t                this.lfoR.frequency = this._rate;\n\t            }\n\t        },\n\t        stereoPhase: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._rate;\n\t            },\n\t            set: function(value) {\n\t                this._stereoPhase = value;\n\t                var newPhase = this.lfoL._phase + this._stereoPhase *\n\t                    Math.PI /\n\t                    180;\n\t                newPhase = fmod(newPhase, 2 * Math.PI);\n\t                this.lfoR.phase = newPhase;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.WahWah = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.envelopeFollower = new userInstance.EnvelopeFollower({\n\t            target: this,\n\t            callback: function(context, value) {\n\t                context.sweep = value;\n\t            }\n\t        });\n\t        this.filterBp = userContext.createBiquadFilter();\n\t        this.filterPeaking = userContext.createBiquadFilter();\n\t        this.output = userContext.createGain();\n\t\n\t        //Connect AudioNodes\n\t        this.activateNode.connect(this.filterBp);\n\t        this.filterBp.connect(this.filterPeaking);\n\t        this.filterPeaking.connect(this.output);\n\t\n\t        //Set Properties\n\t        this.init();\n\t        this.automode = initValue(properties.enableAutoMode, this.defaults\n\t            .automode\n\t            .value);\n\t        this.resonance = properties.resonance || this.defaults.resonance\n\t            .value;\n\t        this.sensitivity = initValue(properties.sensitivity, this.defaults\n\t            .sensitivity\n\t            .value);\n\t        this.baseFrequency = initValue(properties.baseFrequency, this.defaults\n\t            .baseFrequency\n\t            .value);\n\t        this.excursionOctaves = properties.excursionOctaves || this.defaults\n\t            .excursionOctaves\n\t            .value;\n\t        this.sweep = initValue(properties.sweep, this.defaults.sweep.value);\n\t\n\t        this.activateNode.gain.value = 2;\n\t        this.envelopeFollower.activate(true);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.WahWah.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"WahWah\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                automode: {\n\t                    value: true,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                baseFrequency: {\n\t                    value: 0.5,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                excursionOctaves: {\n\t                    value: 2,\n\t                    min: 1,\n\t                    max: 6,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                sweep: {\n\t                    value: 0.2,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                resonance: {\n\t                    value: 10,\n\t                    min: 1,\n\t                    max: 100,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                sensitivity: {\n\t                    value: 0.5,\n\t                    min: -1,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        activateCallback: {\n\t            value: function(value) {\n\t                this.automode = value;\n\t            }\n\t        },\n\t        automode: {\n\t            get: function() {\n\t                return this._automode;\n\t            },\n\t            set: function(value) {\n\t                this._automode = value;\n\t                if (value) {\n\t                    this.activateNode.connect(this.envelopeFollower.input);\n\t                    this.envelopeFollower.activate(true);\n\t                } else {\n\t                    this.envelopeFollower.activate(false);\n\t                    this.activateNode.disconnect();\n\t                    this.activateNode.connect(this.filterBp);\n\t                }\n\t            }\n\t        },\n\t        filterFreqTimeout: {\n\t            value: 0\n\t        },\n\t        setFilterFreq: {\n\t            value: function() {\n\t                try {\n\t                    this.filterBp.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n\t                    this.filterPeaking.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n\t                } catch (e) {\n\t                    clearTimeout(this.filterFreqTimeout);\n\t                    //put on the next cycle to let all init properties be set\n\t                    this.filterFreqTimeout = setTimeout(function() {\n\t                        this.setFilterFreq();\n\t                    }.bind(this), 0);\n\t                }\n\t            }\n\t        },\n\t        sweep: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._sweep.value;\n\t            },\n\t            set: function(value) {\n\t                this._sweep = Math.pow(value > 1 ? 1 : value <\n\t                    0 ? 0 :\n\t                    value,\n\t                    this._sensitivity);\n\t                this.setFilterFreq();\n\t            }\n\t        },\n\t        baseFrequency: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._baseFrequency;\n\t            },\n\t            set: function(value) {\n\t                this._baseFrequency = 50 * Math.pow(10, value *\n\t                    2);\n\t                this._excursionFrequency = Math.min(userContext\n\t                    .sampleRate /\n\t                    2,\n\t                    this.baseFrequency * Math.pow(2, this._excursionOctaves)\n\t                );\n\t                this.setFilterFreq();\n\t            }\n\t        },\n\t        excursionOctaves: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._excursionOctaves;\n\t            },\n\t            set: function(value) {\n\t                this._excursionOctaves = value;\n\t                this._excursionFrequency = Math.min(userContext\n\t                    .sampleRate /\n\t                    2,\n\t                    this.baseFrequency * Math.pow(2, this._excursionOctaves)\n\t                );\n\t                this.setFilterFreq();\n\t            }\n\t        },\n\t        sensitivity: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._sensitivity;\n\t            },\n\t            set: function(value) {\n\t                this._sensitivity = Math.pow(10, value);\n\t            }\n\t        },\n\t        resonance: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._resonance;\n\t            },\n\t            set: function(value) {\n\t                this._resonance = value;\n\t                this.filterPeaking.Q = this._resonance;\n\t            }\n\t        },\n\t        init: {\n\t            value: function() {\n\t                this.output.gain.value = 1;\n\t                this.filterPeaking.type = \"peaking\";\n\t                this.filterBp.type = \"bandpass\";\n\t                this.filterPeaking.frequency.value = 100;\n\t                this.filterPeaking.gain.value = 20;\n\t                this.filterPeaking.Q.value = 5;\n\t                this.filterBp.frequency.value = 100;\n\t                this.filterBp.Q.value = 1;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.EnvelopeFollower = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.jsNode = this.output = userContext.createScriptProcessor(\n\t            this.buffersize,\n\t            1, 1);\n\t\n\t        this.input.connect(this.output);\n\t\n\t        this.attackTime = initValue(properties.attackTime, this.defaults\n\t            .attackTime\n\t            .value);\n\t        this.releaseTime = initValue(properties.releaseTime, this.defaults\n\t            .releaseTime\n\t            .value);\n\t        this._envelope = 0;\n\t        this.target = properties.target || {};\n\t        this.callback = properties.callback || function() {};\n\t    };\n\t    Tuna.prototype.EnvelopeFollower.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"EnvelopeFollower\"\n\t        },\n\t        defaults: {\n\t            value: {\n\t                attackTime: {\n\t                    value: 0.003,\n\t                    min: 0,\n\t                    max: 0.5,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                releaseTime: {\n\t                    value: 0.5,\n\t                    min: 0,\n\t                    max: 0.5,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        buffersize: {\n\t            value: 256\n\t        },\n\t        envelope: {\n\t            value: 0\n\t        },\n\t        sampleRate: {\n\t            value: 44100\n\t        },\n\t        attackTime: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._attackTime;\n\t            },\n\t            set: function(value) {\n\t                this._attackTime = value;\n\t                this._attackC = Math.exp(-1 / this._attackTime *\n\t                    this.sampleRate /\n\t                    this.buffersize);\n\t            }\n\t        },\n\t        releaseTime: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._releaseTime;\n\t            },\n\t            set: function(value) {\n\t                this._releaseTime = value;\n\t                this._releaseC = Math.exp(-1 / this._releaseTime *\n\t                    this.sampleRate /\n\t                    this.buffersize);\n\t            }\n\t        },\n\t        callback: {\n\t            get: function() {\n\t                return this._callback;\n\t            },\n\t            set: function(value) {\n\t                if (typeof value === \"function\") {\n\t                    this._callback = value;\n\t                } else {\n\t                    console.error(\"tuna.js: \" + this.name +\n\t                        \": Callback must be a function!\");\n\t                }\n\t            }\n\t        },\n\t        target: {\n\t            get: function() {\n\t                return this._target;\n\t            },\n\t            set: function(value) {\n\t                this._target = value;\n\t            }\n\t        },\n\t        activate: {\n\t            value: function(doActivate) {\n\t                this.activated = doActivate;\n\t                if (doActivate) {\n\t                    this.jsNode.connect(userContext.destination);\n\t                    this.jsNode.onaudioprocess = this.returnCompute(\n\t                        this);\n\t                } else {\n\t                    this.jsNode.disconnect();\n\t                    this.jsNode.onaudioprocess = null;\n\t                }\n\t            }\n\t        },\n\t        returnCompute: {\n\t            value: function(instance) {\n\t                return function(event) {\n\t                    instance.compute(event);\n\t                };\n\t            }\n\t        },\n\t        compute: {\n\t            value: function(event) {\n\t                var count = event.inputBuffer.getChannelData(0)\n\t                    .length,\n\t                    channels = event.inputBuffer.numberOfChannels,\n\t                    current, chan, rms, i;\n\t                chan = rms = i = 0;\n\t                if (channels > 1) { //need to mixdown\n\t                    for (i = 0; i < count; ++i) {\n\t                        for (; chan < channels; ++chan) {\n\t                            current = event.inputBuffer.getChannelData(chan)[i];\n\t                            rms += (current * current) / channels;\n\t                        }\n\t                    }\n\t                } else {\n\t                    for (i = 0; i < count; ++i) {\n\t                        current = event.inputBuffer.getChannelData(0)[i];\n\t                        rms += (current * current);\n\t                    }\n\t                }\n\t                rms = Math.sqrt(rms);\n\t\n\t                if (this._envelope < rms) {\n\t                    this._envelope *= this._attackC;\n\t                    this._envelope += (1 - this._attackC) * rms;\n\t                } else {\n\t                    this._envelope *= this._releaseC;\n\t                    this._envelope += (1 - this._releaseC) *\n\t                        rms;\n\t                }\n\t                this._callback(this._target, this._envelope);\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.LFO = function(properties) {\n\t        //Instantiate AudioNode\n\t        this.output = userContext.createScriptProcessor(256, 1, 1);\n\t        this.activateNode = userContext.destination;\n\t\n\t        //Set Properties\n\t        this.frequency = initValue(properties.frequency, this.defaults.frequency\n\t            .value);\n\t        this.offset = initValue(properties.offset, this.defaults.offset.value);\n\t        this.oscillation = initValue(properties.oscillation, this.defaults\n\t            .oscillation\n\t            .value);\n\t        this.phase = initValue(properties.phase, this.defaults.phase.value);\n\t        this.target = properties.target || {};\n\t        this.output.onaudioprocess = this.callback(properties.callback ||\n\t            function() {});\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.LFO.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"LFO\"\n\t        },\n\t        bufferSize: {\n\t            value: 256\n\t        },\n\t        sampleRate: {\n\t            value: 44100\n\t        },\n\t        defaults: {\n\t            value: {\n\t                frequency: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 20,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                offset: {\n\t                    value: 0.85,\n\t                    min: 0,\n\t                    max: 22049,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                oscillation: {\n\t                    value: 0.3,\n\t                    min: -22050,\n\t                    max: 22050,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                phase: {\n\t                    value: 0,\n\t                    min: 0,\n\t                    max: 2 * Math.PI,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        frequency: {\n\t            get: function() {\n\t                return this._frequency;\n\t            },\n\t            set: function(value) {\n\t                this._frequency = value;\n\t                this._phaseInc = 2 * Math.PI * this._frequency *\n\t                    this.bufferSize /\n\t                    this.sampleRate;\n\t            }\n\t        },\n\t        offset: {\n\t            get: function() {\n\t                return this._offset;\n\t            },\n\t            set: function(value) {\n\t                this._offset = value;\n\t            }\n\t        },\n\t        oscillation: {\n\t            get: function() {\n\t                return this._oscillation;\n\t            },\n\t            set: function(value) {\n\t                this._oscillation = value;\n\t            }\n\t        },\n\t        phase: {\n\t            get: function() {\n\t                return this._phase;\n\t            },\n\t            set: function(value) {\n\t                this._phase = value;\n\t            }\n\t        },\n\t        target: {\n\t            get: function() {\n\t                return this._target;\n\t            },\n\t            set: function(value) {\n\t                this._target = value;\n\t            }\n\t        },\n\t        activate: {\n\t            value: function(doActivate) {\n\t                if (!doActivate) {\n\t                    this.output.disconnect(userContext.destination);\n\t                } else {\n\t                    this.output.connect(userContext.destination);\n\t                }\n\t            }\n\t        },\n\t        callback: {\n\t            value: function(callback) {\n\t                var that = this;\n\t                return function() {\n\t                    that._phase += that._phaseInc;\n\t                    if (that._phase > 2 * Math.PI) {\n\t                        that._phase = 0;\n\t                    }\n\t                    callback(that._target, that._offset +\n\t                        that._oscillation *\n\t                        Math.sin(that._phase));\n\t                };\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.toString = Tuna.prototype.toString = function() {\n\t        return \"Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js\";\n\t    };\n\t})(this);\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** web-synth.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 278636dfcc1fc13dced2\n **/","import Synth from './WebSynth'\n\nconst win = window || {};\n\nwin.WebSynth = Synth;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","export const TYPES = {\n    MASTER: 'Master',\n    OSCILLATOR: 'Oscillator',\n    MODULATOR: 'Modulator',\n    FILTER: 'Filter',\n    NOISE: 'Noise',\n    REVERB: 'Reverb',\n    CHORUS: 'Chorus',\n    DELAY: 'Delay',\n    ENVELOPE: 'Envelope'\n};\n\nexport const CONST = {\n    MASTER: 'master',\n    ADSR: 'adsr',\n\n    NOISE_WHITE: 'white',\n    NOISE_PINK:  'pink',\n    NOISE_BROWN: 'brown',\n\n    WAVE_SINE:   'sine',\n    WAVE_SQUARE: 'square',\n    WAVE_SAWTOOTH: 'sawtooth',\n    WAVE_TRIANLGE: 'triangle',\n    WAVE_CUSTOM: 'custom',\n\n    FILTER_LOWPASS: 'lowpass',\n    FILTER_HIGHPASS: 'highpass',\n    FILTER_BANDPASS: 'bandpass',\n    FILTER_LOWSHELF: 'lowshelf',\n    FILTER_HIGHSHELF: 'highshelf',\n    FILTER_PEAKING: 'peaking',\n    FILTER_NOTCH: 'notch',\n    FILTER_ALLPASS: 'allpass'\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/core/Constants.js\n **/","let AudioCtx = window.AudioContext || window.webkitAudioContext,\n    ctx = new AudioCtx(),\n    deprecatedFn = {\n        createGainNode: 'createGain',\n        createDelayNode: 'createDelay'\n    };\n\nfor (let f in deprecatedFn) {\n    if (typeof ctx[f] === 'function') {\n        ctx[deprecatedFn[f]] = ctx[f];\n    }\n}\n\nexport default ctx;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/AudioContext.js\n **/","import { TYPES } from '../core/Constants'\nimport Module from '../core/Module'\nimport EffectManager from './EffectManager'\n\nclass Effect extends Module {\n\n    constructor (props) {\n        super(props);\n        this.main = null;\n        this.mainEffect = null;\n    }\n\n    setMainEffect (type, mainEffect, props) {\n        this.main = new EffectManager[type](props);\n        this.mainEffect = this.main[mainEffect];\n    }\n\n    createGain () {\n        return false;\n    }\n\n    getLineIn (sourceType, source) {\n        if (sourceType === TYPES.MODULATOR) {\n            return this.mainEffect[source.target];\n        } else {\n            return this.main.input;\n        }\n    }\n\n    getLineOut () {\n        return this.main.output;\n    }\n\n    getEnvelopeTarget (target) {\n        let ret = null;\n\n        if (target === 'gain') {\n            ret = this.main.output.gain;\n        } else if (this.main && this.mainEffect && this.mainEffect[target]) {\n            ret = this.main.filter[target]\n        }\n\n        return ret;\n    }\n\n}\n\nexport default Effect;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/core/Effect.js\n **/","import AudioContext from '../AudioContext'\n\nclass Module {\n\n    constructor (props) {\n        //TODO introduce this security line in all modules....\n        //let properties = props || {};\n        this.gain = null;\n        this.main = null;\n        this.link = props.link || null;\n        this.level = +props.level;\n\n        this.createGain(this.level);\n    }\n\n    createGain (level) {\n        let l = (level >= 0) ?  level % 101 : 100;\n        //TODO create two gians...one for envelope and one as output to se finale level!!\n        //TODO now if you put an envelope on gain your module level prop is ignored because envelope insist on same gain....\n        this.gain = AudioContext.createGain();\n        this.gain.gain.value = l / 100;\n    }\n\n    disconnect () {\n        this.gain.disconnect();\n    }\n\n    getLineIn () {\n        return this.main;\n    }\n\n    getLineOut () {\n        return this.gain;\n    }\n\n    getEnvelopeTarget (target) {\n        let ret = null;\n\n        if (this.main && this.main[target]) {\n            ret = this.main[target];\n        } else if (target === 'gain' && this.gain) {\n            ret = this.gain.gain;\n        }\n\n        return ret;\n    }\n}\n\nexport default Module;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/core/Module.js\n **/","import Module from '../core/Module'\n\nclass SoundSource extends Module {\n\n    constructor (props) {\n        super(props);\n    }\n\n    noteOn () {\n        this.main.start(0);\n    }\n\n    noteOff (release) {\n        this.main.stop(release);\n    }\n}\n\nexport default SoundSource;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/core/SoundSource.js\n **/","export {default as Master} from './Master'\nexport {default as Oscillator} from './Oscillator'\nexport {default as Modulator} from './Modulator'\nexport {default as Noise} from './Noise'\nexport {default as Envelope} from './Envelope'\n//EFFECTS\nexport {default as Filter} from './Filter'\nexport {default as Delay} from './Delay'\nexport {default as PingPongDelay} from './PingPongDelay'\nexport {default as WahWah} from './WahWah'\nexport {default as Tremolo} from './Tremolo'\n//Filter --> DONE\n//Delay --> DONE\n//Ping Pong Delay --> DONE\n//WahWah --> DONE\n//Tremolo --> DONE\n\n//Overdrive\n//Cabinet\n//Convolver (Reverb)\n//Compressor\n//Phaser\n//Chorus\n//Bitcrusher\n//Moog Filter\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/index.js\n **/","import * as Modules from './lib/modules'\nimport { CONST } from './lib/core/Constants'\nimport Synth from './lib/Synth'\n\nclass WebSynth {\n    constructor (props) {\n        let properties = props || {},\n            synth = new Synth(properties),\n            methods = Object.keys(Modules),\n            fx;\n\n        this.VARS = CONST;\n\n        //Synth Module Creators\n        for (let type of methods) {\n            fx = type.toLowerCase();\n            this[fx] = (label, props) => {\n                synth.module(type, label, props);\n                return this;\n            }\n        }\n\n        this.play = (note) => synth.play(note);\n        this.stop = (note) => synth.stop(note);\n    }\n}\n\nexport default WebSynth;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/WebSynth.js\n **/","import { CONST } from './core/Constants'\nimport Voice from './core/Voice'\n\nclass Synth {\n\n    constructor (props) {\n        let properties = props || {};\n        this.modulesConfig = {};\n        this.voices = {};\n        this.spectrum = properties.spectrum || false;\n        this.updateSpectrum = properties.updateSpectrum || null;\n\n        this.module('Master', CONST.MASTER, {\n            level: 100\n        });\n\n        this.module('Envelope', CONST.ADSR, {\n            link:    CONST.MASTER,\n            target:  'gain',\n            level:   100,\n            attack:  null,\n            decay:   0.1,\n            sustain: 100,\n            release: 5\n        });\n\n    }\n\n    module (type, label, props) {\n        if (!type || type.constructor !== String) {\n            throw new Error('Synth Module :: missing type');\n        }\n\n        if (!label || label.constructor !== String) {\n            throw new Error('Synth Module :: missing label');\n        }\n\n        if (!props || props.constructor !== Object) {\n            throw new Error('Synth Module :: missing properties');\n        }\n\n        if (!this.modulesConfig[label]) {\n            this.addModule(type, label, props);\n        }\n    }\n\n    addModule (type, label, props) {\n        this.modulesConfig[label] = {\n            type,\n            props\n        };\n    }\n\n    play (note) {\n        if (!this.voices[note]) {\n            //TODO study on spectrum centralization....create on synth and pass to voices....\n            this.voices[note] = new Voice(note, this.modulesConfig, this.spectrum, this.updateSpectrum);\n            this.voices[note].noteOn();\n        }\n    }\n\n    stop (note) {\n        if (this.voices[note]) {\n            this.voices[note].noteOff();\n            this.voices[note] = undefined;\n        }\n    }\n}\n\nexport default Synth;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/Synth.js\n **/","import AudioContext from '../AudioContext'\nimport Tuna from 'tunajs'\n\nlet manager = new Tuna(AudioContext);\n\nexport default manager;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/core/EffectManager.js\n **/","import AudioContext from '../AudioContext'\nimport * as Modules from '../modules'\nimport SoundSource from './SoundSource'\nimport { TYPES } from './Constants'\n\nclass Voice {\n\n    constructor (note, modulesConfig, spectrum, updateSpectrum) {\n        this.note = note;\n        this.modulesConfig = modulesConfig;\n        this.modules = {};\n        this.soundSources = [];\n        this.master = null;\n        this.spectrum = spectrum || false;\n        this.onSpectrum = updateSpectrum || null;\n\n        if (this.spectrum) {\n            this.createSpectrum();\n        }\n        this.setupModules();\n        this.linkModules();\n    }\n\n    createSpectrum () {\n        this.javascriptNode = AudioContext.createScriptProcessor(2048, 1, 1);\n        this.javascriptNode.connect(AudioContext.destination);\n\n        this.analyser = AudioContext.createAnalyser();\n        this.analyser.fftSize = 1024;\n    }\n\n    setupModules () {\n        let modConf,\n            m;\n\n        Object.keys(this.modulesConfig).forEach((mod) => {\n            modConf = this.modulesConfig[mod];\n            if (modConf.type && modConf.props) {\n                m = new Modules[modConf.type](modConf.props);\n                this.modules[mod] = {\n                    type:     modConf.type,\n                    instance: m\n                };\n\n                if (m.instance instanceof SoundSource) {\n                    this.soundSources.push(m);\n                } else if (modConf.type === TYPES.MASTER) {\n                    this.master = m;\n                }\n            }\n        });\n    }\n\n    linkModules () {\n        let masterOutput;\n\n        Object.keys(this.modules).forEach((mod) => {\n            let currentModule = this.modules[mod].instance,\n                currentModuleType = this.modules[mod].type,\n                destinationModule,\n                source,\n                dest;\n\n            if (currentModule.link) {\n                destinationModule = this.modules[currentModule.link];\n                if (destinationModule && destinationModule.instance) {\n                    source = currentModule.getLineOut();\n                    dest = destinationModule.instance.getLineIn(currentModuleType, currentModule);\n                    //console.log(mod, source, currentModule.link, dest);\n                    if (source && dest) {\n                        source.connect(dest);\n                    }\n                }\n            }\n        });\n\n        masterOutput = this.master.lineOut();\n        if (this.spectrum === true && this.analyser) {\n            masterOutput.connect(this.analyser);\n            this.analyser.connect(AudioContext.destination);\n        } else {\n            masterOutput.connect(AudioContext.destination);\n        }\n    }\n\n    noteOn () {\n        let m,\n            dest,\n            frequencyData;\n\n        if (this.spectrum === true && this.javascriptNode) {\n            frequencyData =  new Uint8Array(this.analyser.frequencyBinCount);\n\n            this.javascriptNode.onaudioprocess =  () => {\n                this.analyser.getByteFrequencyData(frequencyData);\n                if (this.onSpectrum && typeof this.onSpectrum === 'function') {\n                    this.onSpectrum(frequencyData);\n                }\n            };\n        }\n\n        Object.keys(this.modules).forEach((e) => {\n            m = this.modules[e].instance;\n\n            if (typeof m.setEnvelope === 'function') {\n                dest = (this.modules[m.link]) ? this.modules[m.link].instance : null;\n                m.setEnvelope(dest);\n            }\n            if (typeof m.setNote === 'function') {\n                m.setNote(+this.note);\n            }\n        });\n        Object.keys(this.modules).forEach((e) => {\n            m = this.modules[e].instance;\n            if (typeof m.noteOn === 'function') {\n                m.noteOn();\n            }\n        });\n    }\n\n    noteOff () {\n        let release = 0,\n            adsr = this.modules.adsr.instance,\n            m,\n            dest;\n\n        release = adsr.getReleaseTime();\n\n        if (this.spectrum === true && this.javascriptNode) {\n            this.javascriptNode.onaudioprocess = null;\n        }\n\n        Object.keys(this.modules).forEach((e) => {\n            m = this.modules[e].instance;\n            if (typeof m.resetEnvelope === 'function') {\n                dest = (this.modules[m.link]) ? this.modules[m.link].instance : null;\n                m.resetEnvelope(dest);\n            }\n        });\n        Object.keys(this.modules).forEach((e) => {\n            m = this.modules[e].instance;\n            if (typeof m.noteOff === 'function') {\n                m.noteOff(release);\n            }\n        });\n    }\n\n}\n\nexport default Voice;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/core/Voice.js\n **/","import { CONST } from '../core/Constants'\nimport Effect from '../core/Effect'\n\nclass Delay extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        this.wet = +props.wet || 0;\n        this.feedback = +props.feedback || 0;\n        this.cutoff = +props.cutoff || 0;\n        this.delayTime = +props.delayTime || 0;\n        this.bypass = +props.bypass || 0;\n\n        //TODO set an array of main effects??\n        this.setMainEffect('Delay', 'filter', {\n            feedback: this.feedback,    //0 to 1+\n            delayTime: this.delayTime,    //how many milliseconds should the wet signal be delayed?\n            wetLevel: this.wet,    //0 to 1+\n            dryLevel: 1,       //0 to 1+\n            cutoff: this.cutoff,      //cutoff frequency of the built in lowpass-filter. 20 to 22050\n            bypass: this.bypass\n        });\n    }\n}\n\nexport default Delay;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Delay.js\n **/","import AudioContext from '../AudioContext'\nimport Module from '../core/Module'\n\nclass Envelope extends Module {\n\n    constructor (props) {\n        super(props);\n\n        this.target = props.target || null;\n\n        this.attack = props.attack;\n        this.decay = props.decay;\n        this.sustain = props.sustain;\n        this.release = props.release;\n    }\n\n    createGain () {\n        return false;\n    }\n\n    getReleaseTime () {\n        let now = AudioContext.currentTime,\n            release;\n\n        if (this.release) {\n            release = now + (this.release / 10.0);\n        } else {\n            release = now + 0.2;\n        }\n\n        return release;\n    }\n\n    setEnvelope (dest) {\n        let now = AudioContext.currentTime,\n            envelope = this.level % 101,\n            attackLevel,\n            sustainLevel,\n            attackEnd = (this.attack / 20.0),\n            t;\n\n        if (this.target === 'gain') {\n            attackLevel = envelope / 100;\n            sustainLevel = this.sustain / 100.0;\n        } else {\n            attackLevel = envelope * 72;  // Range: 0-7200: 6-octave range\n            sustainLevel = attackLevel * this.sustain / 100.0; // range: 0-7200\n        }\n\n        if (!attackEnd) {\n            attackEnd = 0.05; // tweak to get target decay to work properly\n        }\n\n        if (dest && typeof dest.getEnvelopeTarget === 'function') {\n            t = dest.getEnvelopeTarget(this.target);\n\n            if (t) {\n                t.setValueAtTime(0, now);\n                t.linearRampToValueAtTime(attackLevel, now + attackEnd);\n                t.setTargetAtTime(sustainLevel, now + attackEnd, (this.decay / 100.0));\n            }\n        }\n\n    }\n\n    resetEnvelope (dest) {\n        let now = AudioContext.currentTime,\n            t;\n\n        if (dest && typeof dest.getEnvelopeTarget === 'function') {\n            t = dest.getEnvelopeTarget(this.target);\n\n            if (t) {\n                t.cancelScheduledValues(now);\n                if (this.target === 'gain') {\n                    t.setValueAtTime(t.value, now);\n                }\n                t.setTargetAtTime(0, now, (this.release / 100.0));\n            }\n        }\n    }\n\n    getLineOut () {\n        return false;\n    }\n}\n\nexport default Envelope;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Envelope.js\n **/","import { CONST } from '../core/Constants'\nimport Effect from '../core/Effect'\n\nclass Filter extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        this.freq = +props.freq || 11000;\n        this.q = +props.q || 10;\n        this.bypass = +props.bypass || 0;\n        this.filterGain = this.level || 0;\n\n        this.setMainEffect('Filter', 'filter', {\n            frequency: this.freq, //20 to 22050\n            Q: this.q, //0.001 to 100\n            gain: this.filterGain, //-40 to 40\n            filterType: props.type || CONST.FILTER_LOWPASS,\n            bypass: this.bypass\n        });\n    }\n}\n\nexport default Filter;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Filter.js\n **/","import AudioContext from '../AudioContext'\nimport Module from '../core/Module'\n\nclass Master extends Module {\n\n    constructor (props) {\n        super(props);\n\n        this.main = AudioContext.createGain();\n        this.link = null;\n    }\n\n    getLineIn () {\n        return this.main;\n    }\n\n    lineOut () {\n        this.main.connect(this.gain);\n        return this.gain;\n        //if (spectrum) {\n        //    this.javascriptNode = AudioContext.createScriptProcessor(2048, 1, 1);\n        //    this.javascriptNode.connect(AudioContext.destination);\n        //\n        //    this.analyser = AudioContext.createAnalyser();\n        //    this.analyser.fftSize = 1024;\n        //\n        //    this.gain.connect(this.analyser);\n        //    this.analyser.connect(AudioContext.destination);\n        //\n        //    this.javascriptNode.onaudioprocess = function () {\n        //        console.log('asd');\n        //    };\n        //\n        //} else {\n\n        //}\n    }\n}\n\nexport default Master;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Master.js\n **/","import { CONST, TYPES } from '../core/Constants'\nimport AudioContext from '../AudioContext'\nimport SoundSource from '../core/SoundSource'\n\nclass Modulator extends SoundSource {\n\n    constructor (props) {\n        super(props);\n\n        this.freq = +props.freq || 440;\n        this.target = props.target || 'frequency';\n\n        this.main = AudioContext.createOscillator();\n        this.main.type = props.type || CONST.WAVE_SINE;\n        this.main.connect(this.gain);\n    }\n\n    setNote () {\n        let f =  this.freq % 11;\n        this.main.frequency.value = f;\n    }\n\n    //TODO refactor in parent class\n    getLineIn (sourceType, source) {\n        if (sourceType === TYPES.MODULATOR) {\n            return this.main[source.target];\n        } else {\n            return this.main.frequency;\n        }\n    }\n}\n\nexport default Modulator;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Modulator.js\n **/","import { CONST, TYPES } from '../core/Constants'\nimport AudioContext from '../AudioContext'\nimport SoundSource from '../core/SoundSource'\n\nclass Noise extends SoundSource {\n\n    constructor (props) {\n        super(props);\n        this.main = AudioContext.createBufferSource();\n        this.main.connect(this.gain);\n\n        this.color = props.color || 'white';\n        this.setColor();\n    }\n\n    setColor () {\n        switch (this.color) {\n            case CONST.NOISE_WHITE :\n                this.main.buffer = this.white();\n                break;\n            case CONST.NOISE_PINK :\n                this.main.buffer = this.pink();\n                break;\n            case CONST.NOISE_BROWN :\n                this.main.buffer = this.brown();\n                break;\n            default :\n                throw new Error('Invalid Noise color: ' + this.color);\n        }\n    }\n\n    white () {\n        let noiseBuffer = this.getNoiseBuffer(),\n            bufferSize = this.getBufferSize(),\n            output = noiseBuffer.getChannelData(0);\n\n        for (let i = 0; i < bufferSize; i++) {\n            output[i] = Math.random() * 2 - 1;\n        }\n\n        return noiseBuffer;\n    }\n\n    pink () {\n        let b0, b1, b2, b3, b4, b5, b6,\n            noiseBuffer = this.getNoiseBuffer(),\n            bufferSize = this.getBufferSize(),\n            output = noiseBuffer.getChannelData(0),\n            white;\n\n        b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\n        for (let i = 0; i < bufferSize; i++) {\n            white = Math.random() * 2 - 1;\n\n            b0 = 0.99886 * b0 + white * 0.0555179;\n            b1 = 0.99332 * b1 + white * 0.0750759;\n            b2 = 0.96900 * b2 + white * 0.1538520;\n            b3 = 0.86650 * b3 + white * 0.3104856;\n            b4 = 0.55000 * b4 + white * 0.5329522;\n            b5 = -0.7616 * b5 - white * 0.0168980;\n\n            output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n            output[i] *= 0.11;\n            b6 = white * 0.115926;\n        }\n\n        return noiseBuffer;\n    }\n\n    brown () {\n        let noiseBuffer = this.getNoiseBuffer(),\n            bufferSize = this.getBufferSize(),\n            output = noiseBuffer.getChannelData(0),\n            lastOut = 0.0,\n            white;\n\n        for (let i = 0; i < bufferSize; i++) {\n            white = white = Math.random() * 2 - 1;\n\n            output[i] = (lastOut + (0.02 * white)) / 1.02;\n            lastOut = output[i];\n            output[i] *= 3.5;\n        }\n\n        return noiseBuffer;\n    }\n\n    getBufferSize () {\n        return 2 * AudioContext.sampleRate;\n    }\n\n    getNoiseBuffer () {\n        let bufferSize = this.getBufferSize(),\n            noiseBuffer = AudioContext.createBuffer(1, bufferSize, AudioContext.sampleRate);\n        return noiseBuffer;\n    }\n\n    setNote () {\n        this.main.loop = true;\n    }\n\n    getLineIn (sourceType, source) {\n        if (sourceType === TYPES.MODULATOR && this.main[source.target]) {\n            return this.main[source.target];\n        } else {\n            return this.main.detune;\n        }\n    }\n}\n\nexport default Noise;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Noise.js\n **/","import { CONST, TYPES } from '../core/Constants'\nimport AudioContext from '../AudioContext'\nimport SoundSource from '../core/SoundSource'\n\nclass Oscillator extends SoundSource {\n\n    constructor (props) {\n        super(props);\n\n        this.detune = +props.detune || 0;\n\n        this.main = AudioContext.createOscillator();\n        this.main.type = props.type || CONST.WAVE_SINE;\n        this.main.connect(this.gain);\n\n        this.setDetune();\n    }\n\n    setDetune () {\n        if (this.detune > 1200) {\n            this.detune = 1200;\n        } else if (this.detune < -1200) {\n            this.detune = -1200;\n        }\n\n        this.main.detune.value = this.detune;\n    }\n\n    setNote (note) {\n        this.main.frequency.value = note;\n    }\n\n    getLineIn (sourceType, source) {\n        if (sourceType === TYPES.MODULATOR) {\n            return this.main[source.target];\n        } else {\n            return this.main.frequency;\n        }\n    }\n}\n\nexport default Oscillator;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Oscillator.js\n **/","import { CONST } from '../core/Constants'\nimport Effect from '../core/Effect'\n\nclass PingPongDelay extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        this.wet = +props.wet || 0;\n        this.feedback = +props.feedback || 0;\n        this.delayTimeLeft = +props.delayTimeLeft || 0;\n        this.delayTimeRight = +props.delayTimeRight || 0;\n        this.bypass = +props.bypass || 0;\n\n        //TODO set an array of main effects??\n        this.setMainEffect('PingPongDelay', 'delayLeft', {\n            wetLevel: this.wet, //0 to 1\n            feedback: this.feedback, //0 to 1\n            delayTimeLeft: this.delayTimeRight, //1 to 10000 (milliseconds)\n            delayTimeRight: this.delayTimeRight //1 to 10000 (milliseconds)\n        });\n    }\n}\n\nexport default PingPongDelay;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/PingPongDelay.js\n **/","import { CONST } from '../core/Constants'\nimport Effect from '../core/Effect'\n\nclass Tremolo extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        this.intensity = +props.intensity || 0;    //0 to 1\n        this.rate = +props.rate || 0.001;         //0.001 to 8\n        this.stereoPhase = +props.stereoPhase || 0;    //0 to 180\n        this.bypass = +props.bypass || 0;\n\n        //TODO set an array of main effects??\n        this.setMainEffect('Tremolo', 'output', {\n            intensity: this.intensity,\n            rate: this.rate,\n            stereoPhase: this.stereoPhase,\n            bypass: this.bypass\n        });\n    }\n}\n\nexport default Tremolo;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Tremolo.js\n **/","import { CONST } from '../core/Constants'\nimport Effect from '../core/Effect'\n\nclass WahWah extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        this.automode = +props.automode || false;      //true/false\n        this.baseFrequency = +props.baseFrequency || 0;            //0 to 1\n        this.excursionOctaves = +props.excursionOctaves || 1;           //1 to 6\n        this.sweep = +props.sweep || 0;                          //0 to 1\n        this.resonance = +props.resonance || 1;                //1 to 100\n        this.sensitivity = +props.sensitivity || 0;              //-1 to 1\n        this.bypass = +props.bypass || 0;\n\n        //TODO set an array of main effects??\n        this.setMainEffect('WahWah', 'filterBp', {\n            automode:         this.automode,\n            baseFrequency:    this.baseFrequency,\n            excursionOctaves: this.excursionOctaves,\n            sweep:            this.sweep,\n            resonance:        this.resonance,\n            sensitivity:      this.sensitivity,\n            bypass:           this.bypass\n        });\n    }\n}\n\nexport default WahWah;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/WahWah.js\n **/","/*\n    Copyright (c) 2012 DinahMoe AB & Oskar Eriksson\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy,\n    modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software\n    is furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function(window) {\n    var userContext,\n        userInstance,\n        pipe = function(param, val) {\n            param.value = val;\n        },\n        Super = Object.create(null, {\n            activate: {\n                writable: true,\n                value: function(doActivate) {\n                    if (doActivate) {\n                        this.input.disconnect();\n                        this.input.connect(this.activateNode);\n                        if (this.activateCallback) {\n                            this.activateCallback(doActivate);\n                        }\n                    } else {\n                        this.input.disconnect();\n                        this.input.connect(this.output);\n                    }\n                }\n            },\n            bypass: {\n                get: function() {\n                    return this._bypass;\n                },\n                set: function(value) {\n                    if (this._lastBypassValue === value) {\n                        return;\n                    }\n                    this._bypass = value;\n                    this.activate(!value);\n                    this._lastBypassValue = value;\n                }\n            },\n            connect: {\n                value: function(target) {\n                    this.output.connect(target);\n                }\n            },\n            disconnect: {\n                value: function(target) {\n                    this.output.disconnect(target);\n                }\n            },\n            connectInOrder: {\n                value: function(nodeArray) {\n                    var i = nodeArray.length - 1;\n                    while (i--) {\n                        if (!nodeArray[i].connect) {\n                            return console.error(\"AudioNode.connectInOrder: TypeError: Not an AudioNode.\", nodeArray[i]);\n                        }\n                        if (nodeArray[i + 1].input) {\n                            nodeArray[i].connect(nodeArray[i + 1].input);\n                        } else {\n                            nodeArray[i].connect(nodeArray[i + 1]);\n                        }\n                    }\n                }\n            },\n            getDefaults: {\n                value: function() {\n                    var result = {};\n                    for (var key in this.defaults) {\n                        result[key] = this.defaults[key].value;\n                    }\n                    return result;\n                }\n            },\n            automate: {\n                value: function(property, value, duration, startTime) {\n                    var start = startTime ? ~~(startTime / 1000) : userContext.currentTime,\n                        dur = duration ? ~~(duration / 1000) : 0,\n                        _is = this.defaults[property],\n                        param = this[property],\n                        method;\n\n                    if (param) {\n                        if (_is.automatable) {\n                            if (!duration) {\n                                method = \"setValueAtTime\";\n                            } else {\n                                method = \"linearRampToValueAtTime\";\n                                param.cancelScheduledValues(start);\n                                param.setValueAtTime(param.value, start);\n                            }\n                            param[method](value, dur + start);\n                        } else {\n                            param = value;\n                        }\n                    } else {\n                        console.error(\"Invalid Property for \" + this.name);\n                    }\n                }\n            }\n        }),\n        FLOAT = \"float\",\n        BOOLEAN = \"boolean\",\n        STRING = \"string\",\n        INT = \"int\";\n\n    if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = Tuna;\n    } else if (typeof define === \"function\") {\n        window.define(\"Tuna\", definition);\n    } else {\n        window.Tuna = Tuna;\n    }\n\n    function definition() {\n        return Tuna;\n    }\n\n    function Tuna(context) {\n        if (!(this instanceof Tuna)) {\n            return new Tuna(context);\n        }\n        if (!window.AudioContext) {\n            window.AudioContext = window.webkitAudioContext;\n        }\n        if (!context) {\n            console.log(\"tuna.js: Missing audio context! Creating a new context for you.\");\n            context = window.AudioContext && (new window.AudioContext());\n        }\n        if (!context) {\n            throw new Error(\"Tuna cannot initialize because this environment does not support web audio.\");\n        }\n        connectify(context);\n        userContext = context;\n        userInstance = this;\n    }\n\n    function connectify(context) {\n        if (context.__connectified__ === true) return;\n\n        var gain = context.createGain(),\n            proto = Object.getPrototypeOf(Object.getPrototypeOf(gain)),\n            oconnect = proto.connect;\n\n        proto.connect = shimConnect;\n        context.__connectified__ = true; // Prevent overriding connect more than once\n\n        function shimConnect() {\n            var node = Array.prototype.shift.apply(arguments);\n            node = Super.isPrototypeOf ? (Super.isPrototypeOf(node) ? node.input : node) : (node.input || node);\n            arguments = Array.prototype.slice.call(arguments);\n            arguments.unshift(node);\n            oconnect.apply(this, arguments);\n            return node;\n        }\n    }\n\n    function dbToWAVolume(db) {\n        return Math.max(0, Math.round(100 * Math.pow(2, db / 6)) / 100);\n    }\n\n    function fmod(x, y) {\n        // http://kevin.vanzonneveld.net\n        // *     example 1: fmod(5.7, 1.3);\n        // *     returns 1: 0.5\n        var tmp, tmp2, p = 0,\n            pY = 0,\n            l = 0.0,\n            l2 = 0.0;\n\n        tmp = x.toExponential().match(/^.\\.?(.*)e(.+)$/);\n        p = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n        tmp = y.toExponential().match(/^.\\.?(.*)e(.+)$/);\n        pY = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n\n        if (pY > p) {\n            p = pY;\n        }\n\n        tmp2 = (x % y);\n\n        if (p < -100 || p > 20) {\n            // toFixed will give an out of bound error so we fix it like this:\n            l = Math.round(Math.log(tmp2) / Math.log(10));\n            l2 = Math.pow(10, l);\n\n            return (tmp2 / l2).toFixed(l - p) * l2;\n        } else {\n            return parseFloat(tmp2.toFixed(-p));\n        }\n    }\n\n    function sign(x) {\n        if (x === 0) {\n            return 1;\n        } else {\n            return Math.abs(x) / x;\n        }\n    }\n\n    function tanh(n) {\n        return (Math.exp(n) - Math.exp(-n)) / (Math.exp(n) + Math.exp(-n));\n    }\n\n    function initValue(userVal, defaultVal) {\n        return userVal === undefined ? defaultVal : userVal;\n    }\n\n    Tuna.prototype.Bitcrusher = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;\n\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.processor);\n        this.processor.connect(this.output);\n\n        var phaser = 0,\n            last = 0,\n            input, output, step, i, length;\n        this.processor.onaudioprocess = function(e) {\n            input = e.inputBuffer.getChannelData(0),\n            output = e.outputBuffer.getChannelData(0),\n            step = Math.pow(1 / 2, this.bits);\n            length = input.length;\n            for (i = 0; i < length; i++) {\n                phaser += this.normfreq;\n                if (phaser >= 1.0) {\n                    phaser -= 1.0;\n                    last = step * Math.floor(input[i] / step + 0.5);\n                }\n                output[i] = last;\n            }\n        };\n\n        this.bits = properties.bits || this.defaults.bits.value;\n        this.normfreq = initValue(properties.normfreq, this.defaults.normfreq.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Bitcrusher.prototype = Object.create(Super, {\n        name: {\n            value: \"Bitcrusher\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                bits: {\n                    value: 4,\n                    min: 1,\n                    max: 16,\n                    automatable: false,\n                    type: INT\n                },\n                bufferSize: {\n                    value: 4096,\n                    min: 256,\n                    max: 16384,\n                    automatable: false,\n                    type: INT\n                },\n                bypass: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                normfreq: {\n                    value: 0.1,\n                    min: 0.0001,\n                    max: 1.0,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        bits: {\n            enumerable: true,\n            get: function() {\n                return this.processor.bits;\n            },\n            set: function(value) {\n                this.processor.bits = value;\n            }\n        },\n        normfreq: {\n            enumerable: true,\n            get: function() {\n                return this.processor.normfreq;\n            },\n            set: function(value) {\n                this.processor.normfreq = value;\n            }\n        }\n    });\n\n    Tuna.prototype.Cabinet = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.convolver = this.newConvolver(properties.impulsePath ||\n            \"../impulses/impulse_guitar.wav\");\n        this.makeupNode = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.convolver.input);\n        this.convolver.output.connect(this.makeupNode);\n        this.makeupNode.connect(this.output);\n\n        this.makeupGain = initValue(properties.makeupGain, this.defaults\n            .makeupGain);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Cabinet.prototype = Object.create(Super, {\n        name: {\n            value: \"Cabinet\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                makeupGain: {\n                    value: 1,\n                    min: 0,\n                    max: 20,\n                    automatable: true,\n                    type: FLOAT\n                },\n                bypass: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                }\n            }\n        },\n        makeupGain: {\n            enumerable: true,\n            get: function() {\n                return this.makeupNode.gain;\n            },\n            set: function(value) {\n                this.makeupNode.gain.value = value;\n            }\n        },\n        newConvolver: {\n            value: function(impulsePath) {\n                return new userInstance.Convolver({\n                    impulse: impulsePath,\n                    dryLevel: 0,\n                    wetLevel: 1\n                });\n            }\n        }\n    });\n\n    Tuna.prototype.Chorus = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.attenuator = this.activateNode = userContext.createGain();\n        this.splitter = userContext.createChannelSplitter(2);\n        this.delayL = userContext.createDelay();\n        this.delayR = userContext.createDelay();\n        this.feedbackGainNodeLR = userContext.createGain();\n        this.feedbackGainNodeRL = userContext.createGain();\n        this.merger = userContext.createChannelMerger(2);\n        this.output = userContext.createGain();\n\n        this.lfoL = new userInstance.LFO({\n            target: this.delayL.delayTime,\n            callback: pipe\n        });\n        this.lfoR = new userInstance.LFO({\n            target: this.delayR.delayTime,\n            callback: pipe\n        });\n\n        this.input.connect(this.attenuator);\n        this.attenuator.connect(this.output);\n        this.attenuator.connect(this.splitter);\n        this.splitter.connect(this.delayL, 0);\n        this.splitter.connect(this.delayR, 1);\n        this.delayL.connect(this.feedbackGainNodeLR);\n        this.delayR.connect(this.feedbackGainNodeRL);\n        this.feedbackGainNodeLR.connect(this.delayR);\n        this.feedbackGainNodeRL.connect(this.delayL);\n        this.delayL.connect(this.merger, 0, 0);\n        this.delayR.connect(this.merger, 0, 1);\n        this.merger.connect(this.output);\n\n        this.feedback = initValue(properties.feedback, this.defaults.feedback\n            .value);\n        this.rate = initValue(properties.rate, this.defaults.rate.value);\n        this.delay = initValue(properties.delay, this.defaults.delay.value);\n        this.depth = initValue(properties.depth, this.defaults.depth.value);\n        this.lfoR.phase = Math.PI / 2;\n        this.attenuator.gain.value = 0.6934; // 1 / (10 ^ (((20 * log10(3)) / 3) / 20))\n        this.lfoL.activate(true);\n        this.lfoR.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Chorus.prototype = Object.create(Super, {\n        name: {\n            value: \"Chorus\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                feedback: {\n                    value: 0.4,\n                    min: 0,\n                    max: 0.95,\n                    automatable: false,\n                    type: FLOAT\n                },\n                delay: {\n                    value: 0.0045,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                depth: {\n                    value: 0.7,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                rate: {\n                    value: 1.5,\n                    min: 0,\n                    max: 8,\n                    automatable: false,\n                    type: FLOAT\n                },\n                bypass: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                }\n            }\n        },\n        delay: {\n            enumerable: true,\n            get: function() {\n                return this._delay;\n            },\n            set: function(value) {\n                this._delay = 0.0002 * (Math.pow(10, value) * 2);\n                this.lfoL.offset = this._delay;\n                this.lfoR.offset = this._delay;\n                this._depth = this._depth;\n            }\n        },\n        depth: {\n            enumerable: true,\n            get: function() {\n                return this._depth;\n            },\n            set: function(value) {\n                this._depth = value;\n                this.lfoL.oscillation = this._depth * this._delay;\n                this.lfoR.oscillation = this._depth * this._delay;\n            }\n        },\n        feedback: {\n            enumerable: true,\n            get: function() {\n                return this._feedback;\n            },\n            set: function(value) {\n                this._feedback = value;\n                this.feedbackGainNodeLR.gain.value = this._feedback;\n                this.feedbackGainNodeRL.gain.value = this._feedback;\n            }\n        },\n        rate: {\n            enumerable: true,\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._rate = value;\n                this.lfoL.frequency = this._rate;\n                this.lfoR.frequency = this._rate;\n            }\n        }\n    });\n\n    Tuna.prototype.Compressor = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.compNode = this.activateNode = userContext.createDynamicsCompressor();\n        this.makeupNode = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.compNode.connect(this.makeupNode);\n        this.makeupNode.connect(this.output);\n\n        this.automakeup = initValue(properties.automakeup, this.defaults\n            .automakeup\n            .value);\n        this.makeupGain = properties.makeupGain || this.defaults.makeupGain\n            .value;\n        this.threshold = initValue(properties.threshold, this.defaults.threshold\n            .value);\n        this.release = properties.release || this.defaults.release.value;\n        this.attack = initValue(properties.attack, this.defaults.attack\n            .value);\n        this.ratio = properties.ratio || this.defaults.ratio.value;\n        this.knee = initValue(properties.knee, this.defaults.knee.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Compressor.prototype = Object.create(Super, {\n        name: {\n            value: \"Compressor\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                threshold: {\n                    value: -20,\n                    min: -60,\n                    max: 0,\n                    automatable: true,\n                    type: FLOAT\n                },\n                release: {\n                    value: 250,\n                    min: 10,\n                    max: 2000,\n                    automatable: true,\n                    type: FLOAT\n                },\n                makeupGain: {\n                    value: 1,\n                    min: 1,\n                    max: 100,\n                    automatable: true,\n                    type: FLOAT\n                },\n                attack: {\n                    value: 1,\n                    min: 0,\n                    max: 1000,\n                    automatable: true,\n                    type: FLOAT\n                },\n                ratio: {\n                    value: 4,\n                    min: 1,\n                    max: 50,\n                    automatable: true,\n                    type: FLOAT\n                },\n                knee: {\n                    value: 5,\n                    min: 0,\n                    max: 40,\n                    automatable: true,\n                    type: FLOAT\n                },\n                automakeup: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                bypass: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                }\n            }\n        },\n        computeMakeup: {\n            value: function() {\n                var magicCoefficient = 4,\n                    // raise me if the output is too hot\n                    c = this.compNode;\n                return -(c.threshold.value - c.threshold.value /\n                        c.ratio.value) /\n                    magicCoefficient;\n            }\n        },\n        automakeup: {\n            enumerable: true,\n            get: function() {\n                return this._automakeup;\n            },\n            set: function(value) {\n                this._automakeup = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        threshold: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.threshold;\n            },\n            set: function(value) {\n                this.compNode.threshold.value = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        ratio: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.ratio;\n            },\n            set: function(value) {\n                this.compNode.ratio.value = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        knee: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.knee;\n            },\n            set: function(value) {\n                this.compNode.knee.value = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        attack: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.attack;\n            },\n            set: function(value) {\n                this.compNode.attack.value = value / 1000;\n            }\n        },\n        release: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.release;\n            },\n            set: function(value) {\n                this.compNode.release = value / 1000;\n            }\n        },\n        makeupGain: {\n            enumerable: true,\n            get: function() {\n                return this.makeupNode.gain;\n            },\n            set: function(value) {\n                this.makeupNode.gain.value = dbToWAVolume(value);\n            }\n        }\n    });\n\n    Tuna.prototype.Convolver = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.convolver = userContext.createConvolver();\n        this.dry = userContext.createGain();\n        this.filterLow = userContext.createBiquadFilter();\n        this.filterHigh = userContext.createBiquadFilter();\n        this.wet = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.filterLow);\n        this.activateNode.connect(this.dry);\n        this.filterLow.connect(this.filterHigh);\n        this.filterHigh.connect(this.convolver);\n        this.convolver.connect(this.wet);\n        this.wet.connect(this.output);\n        this.dry.connect(this.output);\n\n        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel\n            .value);\n        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel\n            .value);\n        this.highCut = properties.highCut || this.defaults.highCut.value;\n        this.buffer = properties.impulse ||\n            \"../impulses/ir_rev_short.wav\";\n        this.lowCut = properties.lowCut || this.defaults.lowCut.value;\n        this.level = initValue(properties.level, this.defaults.level.value);\n        this.filterHigh.type = \"lowpass\";\n        this.filterLow.type = \"highpass\";\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Convolver.prototype = Object.create(Super, {\n        name: {\n            value: \"Convolver\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                highCut: {\n                    value: 22050,\n                    min: 20,\n                    max: 22050,\n                    automatable: true,\n                    type: FLOAT\n                },\n                lowCut: {\n                    value: 20,\n                    min: 20,\n                    max: 22050,\n                    automatable: true,\n                    type: FLOAT\n                },\n                dryLevel: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                },\n                wetLevel: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                },\n                level: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                }\n            }\n        },\n        lowCut: {\n            get: function() {\n                return this.filterLow.frequency;\n            },\n            set: function(value) {\n                this.filterLow.frequency.value = value;\n            }\n        },\n        highCut: {\n            get: function() {\n                return this.filterHigh.frequency;\n            },\n            set: function(value) {\n                this.filterHigh.frequency.value = value;\n            }\n        },\n        level: {\n            get: function() {\n                return this.output.gain;\n            },\n            set: function(value) {\n                this.output.gain.value = value;\n            }\n        },\n        dryLevel: {\n            get: function() {\n                return this.dry.gain\n            },\n            set: function(value) {\n                this.dry.gain.value = value;\n            }\n        },\n        wetLevel: {\n            get: function() {\n                return this.wet.gain;\n            },\n            set: function(value) {\n                this.wet.gain.value = value;\n            }\n        },\n        buffer: {\n            enumerable: false,\n            get: function() {\n                return this.convolver.buffer;\n            },\n            set: function(impulse) {\n                var convolver = this.convolver,\n                    xhr = new XMLHttpRequest();\n                if (!impulse) {\n                    console.log(\"Tuna.Convolver.setBuffer: Missing impulse path!\");\n                    return;\n                }\n                xhr.open(\"GET\", impulse, true);\n                xhr.responseType = \"arraybuffer\";\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.status < 300 && xhr.status > 199 || xhr.status === 302) {\n                            userContext.decodeAudioData(xhr.response, function(buffer) {\n                                convolver.buffer = buffer;\n                            }, function(e) {\n                                if (e) console.log(\"Tuna.Convolver.setBuffer: Error decoding data\" + e);\n                            });\n                        }\n                    }\n                };\n                xhr.send(null);\n            }\n        }\n    });\n\n    Tuna.prototype.Delay = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.dry = userContext.createGain();\n        this.wet = userContext.createGain();\n        this.filter = userContext.createBiquadFilter();\n        this.delay = userContext.createDelay();\n        this.feedbackNode = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.delay);\n        this.activateNode.connect(this.dry);\n        this.delay.connect(this.filter);\n        this.filter.connect(this.feedbackNode);\n        this.feedbackNode.connect(this.delay);\n        this.feedbackNode.connect(this.wet);\n        this.wet.connect(this.output);\n        this.dry.connect(this.output);\n\n        this.delayTime = properties.delayTime || this.defaults.delayTime.value;\n        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel.value);\n        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel.value);\n        this.cutoff = properties.cutoff || this.defaults.cutoff.value;\n        this.filter.type = \"lowpass\";\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Delay.prototype = Object.create(Super, {\n        name: {\n            value: \"Delay\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                delayTime: {\n                    value: 100,\n                    min: 20,\n                    max: 1000,\n                    automatable: false,\n                    type: FLOAT\n                },\n                feedback: {\n                    value: 0.45,\n                    min: 0,\n                    max: 0.9,\n                    automatable: true,\n                    type: FLOAT\n                },\n                cutoff: {\n                    value: 20000,\n                    min: 20,\n                    max: 20000,\n                    automatable: true,\n                    type: FLOAT\n                },\n                wetLevel: {\n                    value: 0.5,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                },\n                dryLevel: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                }\n            }\n        },\n        delayTime: {\n            enumerable: true,\n            get: function() {\n                return this.delay.delayTime;\n            },\n            set: function(value) {\n                this.delay.delayTime.value = value / 1000;\n            }\n        },\n        wetLevel: {\n            enumerable: true,\n            get: function() {\n                return this.wet.gain;\n            },\n            set: function(value) {\n                this.wet.gain.value = value;\n            }\n        },\n        dryLevel: {\n            enumerable: true,\n            get: function() {\n                return this.dry.gain;\n            },\n            set: function(value) {\n                this.dry.gain.value = value;\n            }\n        },\n        feedback: {\n            enumerable: true,\n            get: function() {\n                return this.feedbackNode.gain;\n            },\n            set: function(value) {\n                this.feedbackNode.gain.value = value;\n            }\n        },\n        cutoff: {\n            enumerable: true,\n            get: function() {\n                return this.filter.frequency;\n            },\n            set: function(value) {\n                this.filter.frequency.value = value;\n            }\n        }\n    });\n\n    Tuna.prototype.Filter = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.filter = userContext.createBiquadFilter();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.filter);\n        this.filter.connect(this.output);\n\n        this.frequency = properties.frequency || this.defaults.frequency\n            .value;\n        this.Q = properties.resonance || this.defaults.Q.value;\n        this.filterType = initValue(properties.filterType, this.defaults\n            .filterType\n            .value);\n        this.gain = initValue(properties.gain, this.defaults.gain.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Filter.prototype = Object.create(Super, {\n        name: {\n            value: \"Filter\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                frequency: {\n                    value: 800,\n                    min: 20,\n                    max: 22050,\n                    automatable: true,\n                    type: FLOAT\n                },\n                Q: {\n                    value: 1,\n                    min: 0.001,\n                    max: 100,\n                    automatable: true,\n                    type: FLOAT\n                },\n                gain: {\n                    value: 0,\n                    min: -40,\n                    max: 40,\n                    automatable: true,\n                    type: FLOAT\n                },\n                bypass: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                filterType: {\n                    value: \"lowpass\",\n                    automatable: false,\n                    type: STRING\n                }\n            }\n        },\n        filterType: {\n            enumerable: true,\n            get: function() {\n                return this.filter.type;\n            },\n            set: function(value) {\n                this.filter.type = value;\n            }\n        },\n        Q: {\n            enumerable: true,\n            get: function() {\n                return this.filter.Q;\n            },\n            set: function(value) {\n                this.filter.Q.value = value;\n            }\n        },\n        gain: {\n            enumerable: true,\n            get: function() {\n                return this.filter.gain;\n            },\n            set: function(value) {\n                this.filter.gain.value = value;\n            }\n        },\n        frequency: {\n            enumerable: true,\n            get: function() {\n                return this.filter.frequency;\n            },\n            set: function(value) {\n                this.filter.frequency.value = value;\n            }\n        }\n    });\n\n    Tuna.prototype.MoogFilter = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.bufferSize = properties.bufferSize || this.defaults.bufferSize\n            .value;\n\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.processor = userContext.createScriptProcessor(this.bufferSize,\n            1,\n            1);\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.processor);\n        this.processor.connect(this.output);\n\n        var in1, in2, in3, in4, out1, out2, out3, out4;\n        in1 = in2 = in3 = in4 = out1 = out2 = out3 = out4 = 0.0;\n        var input, output, f, fb, i, length;\n        this.processor.onaudioprocess = function(e) {\n            input = e.inputBuffer.getChannelData(0),\n                output = e.outputBuffer.getChannelData(0),\n                f = this.cutoff * 1.16,\n                inputFactor = 0.35013 * (f * f) * (f * f);\n            fb = this.resonance * (1.0 - 0.15 * f * f);\n            length = input.length;\n            for (i = 0; i < length; i++) {\n                input[i] -= out4 * fb;\n                input[i] *= inputFactor;\n                out1 = input[i] + 0.3 * in1 + (1 - f) * out1; // Pole 1\n                in1 = input[i];\n                out2 = out1 + 0.3 * in2 + (1 - f) * out2; // Pole 2\n                in2 = out1;\n                out3 = out2 + 0.3 * in3 + (1 - f) * out3; // Pole 3\n                in3 = out2;\n                out4 = out3 + 0.3 * in4 + (1 - f) * out4; // Pole 4\n                in4 = out3;\n                output[i] = out4;\n            }\n        };\n\n        this.cutoff = initValue(properties.cutoff, this.defaults.cutoff\n            .value);\n        this.resonance = initValue(properties.resonance, this.defaults.resonance\n            .value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.MoogFilter.prototype = Object.create(Super, {\n        name: {\n            value: \"MoogFilter\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                bufferSize: {\n                    value: 4096,\n                    min: 256,\n                    max: 16384,\n                    automatable: false,\n                    type: INT\n                },\n                bypass: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                cutoff: {\n                    value: 0.065,\n                    min: 0.0001,\n                    max: 1.0,\n                    automatable: false,\n                    type: FLOAT\n                },\n                resonance: {\n                    value: 3.5,\n                    min: 0.0,\n                    max: 4.0,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        cutoff: {\n            enumerable: true,\n            get: function() {\n                return this.processor.cutoff;\n            },\n            set: function(value) {\n                this.processor.cutoff = value;\n            }\n        },\n        resonance: {\n            enumerable: true,\n            get: function() {\n                return this.processor.resonance;\n            },\n            set: function(value) {\n                this.processor.resonance = value;\n            }\n        }\n    });\n\n    Tuna.prototype.Overdrive = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.inputDrive = userContext.createGain();\n        this.waveshaper = userContext.createWaveShaper();\n        this.outputDrive = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.inputDrive);\n        this.inputDrive.connect(this.waveshaper);\n        this.waveshaper.connect(this.outputDrive);\n        this.outputDrive.connect(this.output);\n\n        this.ws_table = new Float32Array(this.k_nSamples);\n        this.drive = initValue(properties.drive, this.defaults.drive.value);\n        this.outputGain = initValue(properties.outputGain, this.defaults\n            .outputGain\n            .value);\n        this.curveAmount = initValue(properties.curveAmount, this.defaults\n            .curveAmount\n            .value);\n        this.algorithmIndex = initValue(properties.algorithmIndex, this\n            .defaults\n            .algorithmIndex.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Overdrive.prototype = Object.create(Super, {\n        name: {\n            value: \"Overdrive\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                drive: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT,\n                    scaled: true\n                },\n                outputGain: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT,\n                    scaled: true\n                },\n                curveAmount: {\n                    value: 0.725,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                algorithmIndex: {\n                    value: 0,\n                    min: 0,\n                    max: 5,\n                    automatable: false,\n                    type: INT\n                }\n            }\n        },\n        k_nSamples: {\n            value: 8192\n        },\n        drive: {\n            get: function() {\n                return this.inputDrive.gain;\n            },\n            set: function(value) {\n                this._drive = value;\n            }\n        },\n        curveAmount: {\n            get: function() {\n                return this._curveAmount;\n            },\n            set: function(value) {\n                this._curveAmount = value;\n                if (this._algorithmIndex === undefined) {\n                    this._algorithmIndex = 0;\n                }\n                this.waveshaperAlgorithms[this._algorithmIndex]\n                    (this._curveAmount,\n                        this.k_nSamples, this.ws_table);\n                this.waveshaper.curve = this.ws_table;\n            }\n        },\n        outputGain: {\n            get: function() {\n                return this.outputDrive.gain;\n            },\n            set: function(value) {\n                this._outputGain = dbToWAVolume(value);\n            }\n        },\n        algorithmIndex: {\n            get: function() {\n                return this._algorithmIndex;\n            },\n            set: function(value) {\n                this._algorithmIndex = value;\n                this.curveAmount = this._curveAmount;\n            }\n        },\n        waveshaperAlgorithms: {\n            value: [\n                function(amount, n_samples, ws_table) {\n                    amount = Math.min(amount, 0.9999);\n                    var k = 2 * amount / (1 - amount),\n                        i, x;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        ws_table[i] = (1 + k) * x / (1 + k * Math.abs(x));\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var i, x, y;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        y = ((0.5 * Math.pow((x + 1.4), 2)) - 1) * y >= 0 ? 5.8 : 1.2;\n                        ws_table[i] = tanh(y);\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var i, x, y, a = 1 - amount;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        y = x < 0 ? -Math.pow(Math.abs(x), a + 0.04) : Math.pow(x, a);\n                        ws_table[i] = tanh(y * 2);\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var i, x, y, abx, a = 1 - amount > 0.99 ? 0.99 : 1 - amount;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        abx = Math.abs(x);\n                        if (abx < a) y = abx;\n                        else if (abx > a) y = a + (abx - a) / (1 + Math.pow((abx - a) / (1 - a), 2));\n                        else if (abx > 1) y = abx;\n                        ws_table[i] = sign(x) * y * (1 / ((a + 1) / 2));\n                    }\n                },\n                function(amount, n_samples, ws_table) { // fixed curve, amount doesn't do anything, the distortion is just from the drive\n                    var i, x;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        if (x < -0.08905) {\n                            ws_table[i] = (-3 / 4) * (1 - (Math.pow((1 - (Math.abs(x) - 0.032857)), 12)) + (1 / 3) * (Math.abs(x) -\n                                0.032847)) + 0.01;\n                        } else if (x >= -0.08905 && x < 0.320018) {\n                            ws_table[i] = (-6.153 * (x * x)) + 3.9375 * x;\n                        } else {\n                            ws_table[i] = 0.630035;\n                        }\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var a = 2 + Math.round(amount * 14),\n                        // we go from 2 to 16 bits, keep in mind for the UI\n                        bits = Math.round(Math.pow(2, a - 1)),\n                        // real number of quantization steps divided by 2\n                        i, x;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        ws_table[i] = Math.round(x * bits) / bits;\n                    }\n                }\n            ]\n        }\n    });\n\n    Tuna.prototype.Phaser = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.splitter = this.activateNode = userContext.createChannelSplitter(2);\n        this.filtersL = [];\n        this.filtersR = [];\n        this.feedbackGainNodeL = userContext.createGain();\n        this.feedbackGainNodeR = userContext.createGain();\n        this.merger = userContext.createChannelMerger(2);\n        this.filteredSignal = userContext.createGain();\n        this.output = userContext.createGain();\n        this.lfoL = new userInstance.LFO({\n            target: this.filtersL,\n            callback: this.callback\n        });\n        this.lfoR = new userInstance.LFO({\n            target: this.filtersR,\n            callback: this.callback\n        });\n\n        var i = this.stage;\n        while (i--) {\n            this.filtersL[i] = userContext.createBiquadFilter();\n            this.filtersR[i] = userContext.createBiquadFilter();\n            this.filtersL[i].type = \"allpass\";\n            this.filtersR[i].type = \"allpass\";\n        }\n        this.input.connect(this.splitter);\n        this.input.connect(this.output);\n        this.splitter.connect(this.filtersL[0], 0, 0);\n        this.splitter.connect(this.filtersR[0], 1, 0);\n        this.connectInOrder(this.filtersL);\n        this.connectInOrder(this.filtersR);\n        this.filtersL[this.stage - 1].connect(this.feedbackGainNodeL);\n        this.filtersL[this.stage - 1].connect(this.merger, 0, 0);\n        this.filtersR[this.stage - 1].connect(this.feedbackGainNodeR);\n        this.filtersR[this.stage - 1].connect(this.merger, 0, 1);\n        this.feedbackGainNodeL.connect(this.filtersL[0]);\n        this.feedbackGainNodeR.connect(this.filtersR[0]);\n        this.merger.connect(this.output);\n\n        this.rate = initValue(properties.rate, this.defaults.rate.value);\n        this.baseModulationFrequency = properties.baseModulationFrequency || this.defaults.baseModulationFrequency.value;\n        this.depth = initValue(properties.depth, this.defaults.depth.value);\n        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n        this.stereoPhase = initValue(properties.stereoPhase, this.defaults.stereoPhase.value);\n\n        this.lfoL.activate(true);\n        this.lfoR.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Phaser.prototype = Object.create(Super, {\n        name: {\n            value: \"Phaser\"\n        },\n        stage: {\n            value: 4\n        },\n        defaults: {\n            writable: true,\n            value: {\n                rate: {\n                    value: 0.1,\n                    min: 0,\n                    max: 8,\n                    automatable: false,\n                    type: FLOAT\n                },\n                depth: {\n                    value: 0.6,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                feedback: {\n                    value: 0.7,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                stereoPhase: {\n                    value: 40,\n                    min: 0,\n                    max: 180,\n                    automatable: false,\n                    type: FLOAT\n                },\n                baseModulationFrequency: {\n                    value: 700,\n                    min: 500,\n                    max: 1500,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        callback: {\n            value: function(filters, value) {\n                for (var stage = 0; stage < 4; stage++) {\n                    filters[stage].frequency.value = value;\n                }\n            }\n        },\n        depth: {\n            get: function() {\n                return this._depth;\n            },\n            set: function(value) {\n                this._depth = value;\n                this.lfoL.oscillation = this._baseModulationFrequency * this._depth;\n                this.lfoR.oscillation = this._baseModulationFrequency * this._depth;\n            }\n        },\n        rate: {\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._rate = value;\n                this.lfoL.frequency = this._rate;\n                this.lfoR.frequency = this._rate;\n            }\n        },\n        baseModulationFrequency: {\n            enumerable: true,\n            get: function() {\n                return this._baseModulationFrequency;\n            },\n            set: function(value) {\n                this._baseModulationFrequency = value;\n                this.lfoL.offset = this._baseModulationFrequency;\n                this.lfoR.offset = this._baseModulationFrequency;\n                this._depth = this._depth;\n            }\n        },\n        feedback: {\n            get: function() {\n                return this._feedback;\n            },\n            set: function(value) {\n                this._feedback = value;\n                this.feedbackGainNodeL.gain.value = this._feedback;\n                this.feedbackGainNodeR.gain.value = this._feedback;\n            }\n        },\n        stereoPhase: {\n            get: function() {\n                return this._stereoPhase;\n            },\n            set: function(value) {\n                this._stereoPhase = value;\n                var newPhase = this.lfoL._phase + this._stereoPhase *\n                    Math.PI /\n                    180;\n                newPhase = fmod(newPhase, 2 * Math.PI);\n                this.lfoR._phase = newPhase;\n            }\n        }\n    });\n\n    Tuna.prototype.PingPongDelay = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.wetLevel = userContext.createGain();\n        this.stereoToMonoMix = userContext.createGain();\n        this.feedbackLevel = userContext.createGain();\n        this.output = userContext.createGain();\n        this.delayLeft = userContext.createDelay();\n        this.delayRight = userContext.createDelay();\n\n        this.activateNode = userContext.createGain();\n        this.splitter = userContext.createChannelSplitter(2);\n        this.merger = userContext.createChannelMerger(2);\n\n        this.activateNode.connect(this.splitter);\n        this.splitter.connect(this.stereoToMonoMix, 0, 0);\n        this.splitter.connect(this.stereoToMonoMix, 1, 0);\n        this.stereoToMonoMix.gain.value = .5;\n        this.stereoToMonoMix.connect(this.wetLevel);\n        this.wetLevel.connect(this.delayLeft);\n        this.feedbackLevel.connect(this.delayLeft);\n        this.delayLeft.connect(this.delayRight);\n        this.delayRight.connect(this.feedbackLevel);\n        this.delayLeft.connect(this.merger, 0, 0);\n        this.delayRight.connect(this.merger, 0, 1);\n        this.merger.connect(this.output);\n        this.activateNode.connect(this.output);\n\n        this.delayTimeLeft = properties.delayTimeLeft !== undefined ? properties.delayTimeLeft : this.defaults.delayTimeLeft.value;\n        this.delayTimeRight = properties.delayTimeRight !== undefined ? properties.delayTimeRight : this.defaults.delayTimeRight.value;\n        this.feedbackLevel.gain.value = properties.feedback !== undefined ? properties.feedback : this.defaults.feedback.value;\n        this.wetLevel.gain.value = properties.wetLevel !== undefined ? properties.wetLevel : this.defaults.wetLevel.value;\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.PingPongDelay.prototype = Object.create(Super, {\n        name: {\n            value: \"PingPongDelay\"\n        },\n        delayTimeLeft: {\n            enumerable: true,\n            get: function() {\n                return this._delayTimeLeft;\n            },\n            set: function(value) {\n                this._delayTimeLeft = value;\n                this.delayLeft.delayTime.value = value / 1000;\n            }\n        },\n        delayTimeRight: {\n            enumerable: true,\n            get: function() {\n                return this._delayTimeRight;\n            },\n            set: function(value) {\n                this._delayTimeRight = value;\n                this.delayRight.delayTime.value = value / 1000;\n            }\n        },\n        defaults: {\n            writable: true,\n            value: {\n                delayTimeLeft: {\n                    value: 200,\n                    min: 1,\n                    max: 10000,\n                    automatable: false,\n                    type: INT\n                },\n                delayTimeRight: {\n                    value: 400,\n                    min: 1,\n                    max: 10000,\n                    automatable: false,\n                    type: INT\n                },\n                feedback: {\n                    value: 0.3,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                wetLevel: {\n                    value: 0.5,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        }\n    });\n\n    Tuna.prototype.Tremolo = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.splitter = this.activateNode = userContext.createChannelSplitter(\n                2),\n            this.amplitudeL = userContext.createGain(), this.amplitudeR =\n            userContext.createGain(), this.merger = userContext.createChannelMerger(\n                2), this.output = userContext.createGain();\n        this.lfoL = new userInstance.LFO({\n            target: this.amplitudeL.gain,\n            callback: pipe\n        });\n        this.lfoR = new userInstance.LFO({\n            target: this.amplitudeR.gain,\n            callback: pipe\n        });\n\n        this.input.connect(this.splitter);\n        this.splitter.connect(this.amplitudeL, 0);\n        this.splitter.connect(this.amplitudeR, 1);\n        this.amplitudeL.connect(this.merger, 0, 0);\n        this.amplitudeR.connect(this.merger, 0, 1);\n        this.merger.connect(this.output);\n\n        this.rate = properties.rate || this.defaults.rate.value;\n        this.intensity = initValue(properties.intensity, this.defaults.intensity\n            .value);\n        this.stereoPhase = initValue(properties.stereoPhase, this.defaults\n            .stereoPhase\n            .value);\n\n        this.lfoL.offset = 1 - (this.intensity / 2);\n        this.lfoR.offset = 1 - (this.intensity / 2);\n        this.lfoL.phase = this.stereoPhase * Math.PI / 180;\n\n        this.lfoL.activate(true);\n        this.lfoR.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Tremolo.prototype = Object.create(Super, {\n        name: {\n            value: \"Tremolo\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                intensity: {\n                    value: 0.3,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                stereoPhase: {\n                    value: 0,\n                    min: 0,\n                    max: 180,\n                    automatable: false,\n                    type: FLOAT\n                },\n                rate: {\n                    value: 5,\n                    min: 0.1,\n                    max: 11,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        intensity: {\n            enumerable: true,\n            get: function() {\n                return this._intensity;\n            },\n            set: function(value) {\n                this._intensity = value;\n                this.lfoL.offset = 1 - this._intensity / 2;\n                this.lfoR.offset = 1 - this._intensity / 2;\n                this.lfoL.oscillation = this._intensity;\n                this.lfoR.oscillation = this._intensity;\n            }\n        },\n        rate: {\n            enumerable: true,\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._rate = value;\n                this.lfoL.frequency = this._rate;\n                this.lfoR.frequency = this._rate;\n            }\n        },\n        stereoPhase: {\n            enumerable: true,\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._stereoPhase = value;\n                var newPhase = this.lfoL._phase + this._stereoPhase *\n                    Math.PI /\n                    180;\n                newPhase = fmod(newPhase, 2 * Math.PI);\n                this.lfoR.phase = newPhase;\n            }\n        }\n    });\n\n    Tuna.prototype.WahWah = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.envelopeFollower = new userInstance.EnvelopeFollower({\n            target: this,\n            callback: function(context, value) {\n                context.sweep = value;\n            }\n        });\n        this.filterBp = userContext.createBiquadFilter();\n        this.filterPeaking = userContext.createBiquadFilter();\n        this.output = userContext.createGain();\n\n        //Connect AudioNodes\n        this.activateNode.connect(this.filterBp);\n        this.filterBp.connect(this.filterPeaking);\n        this.filterPeaking.connect(this.output);\n\n        //Set Properties\n        this.init();\n        this.automode = initValue(properties.enableAutoMode, this.defaults\n            .automode\n            .value);\n        this.resonance = properties.resonance || this.defaults.resonance\n            .value;\n        this.sensitivity = initValue(properties.sensitivity, this.defaults\n            .sensitivity\n            .value);\n        this.baseFrequency = initValue(properties.baseFrequency, this.defaults\n            .baseFrequency\n            .value);\n        this.excursionOctaves = properties.excursionOctaves || this.defaults\n            .excursionOctaves\n            .value;\n        this.sweep = initValue(properties.sweep, this.defaults.sweep.value);\n\n        this.activateNode.gain.value = 2;\n        this.envelopeFollower.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.WahWah.prototype = Object.create(Super, {\n        name: {\n            value: \"WahWah\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                automode: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                baseFrequency: {\n                    value: 0.5,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                excursionOctaves: {\n                    value: 2,\n                    min: 1,\n                    max: 6,\n                    automatable: false,\n                    type: FLOAT\n                },\n                sweep: {\n                    value: 0.2,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                resonance: {\n                    value: 10,\n                    min: 1,\n                    max: 100,\n                    automatable: false,\n                    type: FLOAT\n                },\n                sensitivity: {\n                    value: 0.5,\n                    min: -1,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        activateCallback: {\n            value: function(value) {\n                this.automode = value;\n            }\n        },\n        automode: {\n            get: function() {\n                return this._automode;\n            },\n            set: function(value) {\n                this._automode = value;\n                if (value) {\n                    this.activateNode.connect(this.envelopeFollower.input);\n                    this.envelopeFollower.activate(true);\n                } else {\n                    this.envelopeFollower.activate(false);\n                    this.activateNode.disconnect();\n                    this.activateNode.connect(this.filterBp);\n                }\n            }\n        },\n        filterFreqTimeout: {\n            value: 0\n        },\n        setFilterFreq: {\n            value: function() {\n                try {\n                    this.filterBp.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n                    this.filterPeaking.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n                } catch (e) {\n                    clearTimeout(this.filterFreqTimeout);\n                    //put on the next cycle to let all init properties be set\n                    this.filterFreqTimeout = setTimeout(function() {\n                        this.setFilterFreq();\n                    }.bind(this), 0);\n                }\n            }\n        },\n        sweep: {\n            enumerable: true,\n            get: function() {\n                return this._sweep.value;\n            },\n            set: function(value) {\n                this._sweep = Math.pow(value > 1 ? 1 : value <\n                    0 ? 0 :\n                    value,\n                    this._sensitivity);\n                this.setFilterFreq();\n            }\n        },\n        baseFrequency: {\n            enumerable: true,\n            get: function() {\n                return this._baseFrequency;\n            },\n            set: function(value) {\n                this._baseFrequency = 50 * Math.pow(10, value *\n                    2);\n                this._excursionFrequency = Math.min(userContext\n                    .sampleRate /\n                    2,\n                    this.baseFrequency * Math.pow(2, this._excursionOctaves)\n                );\n                this.setFilterFreq();\n            }\n        },\n        excursionOctaves: {\n            enumerable: true,\n            get: function() {\n                return this._excursionOctaves;\n            },\n            set: function(value) {\n                this._excursionOctaves = value;\n                this._excursionFrequency = Math.min(userContext\n                    .sampleRate /\n                    2,\n                    this.baseFrequency * Math.pow(2, this._excursionOctaves)\n                );\n                this.setFilterFreq();\n            }\n        },\n        sensitivity: {\n            enumerable: true,\n            get: function() {\n                return this._sensitivity;\n            },\n            set: function(value) {\n                this._sensitivity = Math.pow(10, value);\n            }\n        },\n        resonance: {\n            enumerable: true,\n            get: function() {\n                return this._resonance;\n            },\n            set: function(value) {\n                this._resonance = value;\n                this.filterPeaking.Q = this._resonance;\n            }\n        },\n        init: {\n            value: function() {\n                this.output.gain.value = 1;\n                this.filterPeaking.type = \"peaking\";\n                this.filterBp.type = \"bandpass\";\n                this.filterPeaking.frequency.value = 100;\n                this.filterPeaking.gain.value = 20;\n                this.filterPeaking.Q.value = 5;\n                this.filterBp.frequency.value = 100;\n                this.filterBp.Q.value = 1;\n            }\n        }\n    });\n\n    Tuna.prototype.EnvelopeFollower = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.jsNode = this.output = userContext.createScriptProcessor(\n            this.buffersize,\n            1, 1);\n\n        this.input.connect(this.output);\n\n        this.attackTime = initValue(properties.attackTime, this.defaults\n            .attackTime\n            .value);\n        this.releaseTime = initValue(properties.releaseTime, this.defaults\n            .releaseTime\n            .value);\n        this._envelope = 0;\n        this.target = properties.target || {};\n        this.callback = properties.callback || function() {};\n    };\n    Tuna.prototype.EnvelopeFollower.prototype = Object.create(Super, {\n        name: {\n            value: \"EnvelopeFollower\"\n        },\n        defaults: {\n            value: {\n                attackTime: {\n                    value: 0.003,\n                    min: 0,\n                    max: 0.5,\n                    automatable: false,\n                    type: FLOAT\n                },\n                releaseTime: {\n                    value: 0.5,\n                    min: 0,\n                    max: 0.5,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        buffersize: {\n            value: 256\n        },\n        envelope: {\n            value: 0\n        },\n        sampleRate: {\n            value: 44100\n        },\n        attackTime: {\n            enumerable: true,\n            get: function() {\n                return this._attackTime;\n            },\n            set: function(value) {\n                this._attackTime = value;\n                this._attackC = Math.exp(-1 / this._attackTime *\n                    this.sampleRate /\n                    this.buffersize);\n            }\n        },\n        releaseTime: {\n            enumerable: true,\n            get: function() {\n                return this._releaseTime;\n            },\n            set: function(value) {\n                this._releaseTime = value;\n                this._releaseC = Math.exp(-1 / this._releaseTime *\n                    this.sampleRate /\n                    this.buffersize);\n            }\n        },\n        callback: {\n            get: function() {\n                return this._callback;\n            },\n            set: function(value) {\n                if (typeof value === \"function\") {\n                    this._callback = value;\n                } else {\n                    console.error(\"tuna.js: \" + this.name +\n                        \": Callback must be a function!\");\n                }\n            }\n        },\n        target: {\n            get: function() {\n                return this._target;\n            },\n            set: function(value) {\n                this._target = value;\n            }\n        },\n        activate: {\n            value: function(doActivate) {\n                this.activated = doActivate;\n                if (doActivate) {\n                    this.jsNode.connect(userContext.destination);\n                    this.jsNode.onaudioprocess = this.returnCompute(\n                        this);\n                } else {\n                    this.jsNode.disconnect();\n                    this.jsNode.onaudioprocess = null;\n                }\n            }\n        },\n        returnCompute: {\n            value: function(instance) {\n                return function(event) {\n                    instance.compute(event);\n                };\n            }\n        },\n        compute: {\n            value: function(event) {\n                var count = event.inputBuffer.getChannelData(0)\n                    .length,\n                    channels = event.inputBuffer.numberOfChannels,\n                    current, chan, rms, i;\n                chan = rms = i = 0;\n                if (channels > 1) { //need to mixdown\n                    for (i = 0; i < count; ++i) {\n                        for (; chan < channels; ++chan) {\n                            current = event.inputBuffer.getChannelData(chan)[i];\n                            rms += (current * current) / channels;\n                        }\n                    }\n                } else {\n                    for (i = 0; i < count; ++i) {\n                        current = event.inputBuffer.getChannelData(0)[i];\n                        rms += (current * current);\n                    }\n                }\n                rms = Math.sqrt(rms);\n\n                if (this._envelope < rms) {\n                    this._envelope *= this._attackC;\n                    this._envelope += (1 - this._attackC) * rms;\n                } else {\n                    this._envelope *= this._releaseC;\n                    this._envelope += (1 - this._releaseC) *\n                        rms;\n                }\n                this._callback(this._target, this._envelope);\n            }\n        }\n    });\n\n    Tuna.prototype.LFO = function(properties) {\n        //Instantiate AudioNode\n        this.output = userContext.createScriptProcessor(256, 1, 1);\n        this.activateNode = userContext.destination;\n\n        //Set Properties\n        this.frequency = initValue(properties.frequency, this.defaults.frequency\n            .value);\n        this.offset = initValue(properties.offset, this.defaults.offset.value);\n        this.oscillation = initValue(properties.oscillation, this.defaults\n            .oscillation\n            .value);\n        this.phase = initValue(properties.phase, this.defaults.phase.value);\n        this.target = properties.target || {};\n        this.output.onaudioprocess = this.callback(properties.callback ||\n            function() {});\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.LFO.prototype = Object.create(Super, {\n        name: {\n            value: \"LFO\"\n        },\n        bufferSize: {\n            value: 256\n        },\n        sampleRate: {\n            value: 44100\n        },\n        defaults: {\n            value: {\n                frequency: {\n                    value: 1,\n                    min: 0,\n                    max: 20,\n                    automatable: false,\n                    type: FLOAT\n                },\n                offset: {\n                    value: 0.85,\n                    min: 0,\n                    max: 22049,\n                    automatable: false,\n                    type: FLOAT\n                },\n                oscillation: {\n                    value: 0.3,\n                    min: -22050,\n                    max: 22050,\n                    automatable: false,\n                    type: FLOAT\n                },\n                phase: {\n                    value: 0,\n                    min: 0,\n                    max: 2 * Math.PI,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        frequency: {\n            get: function() {\n                return this._frequency;\n            },\n            set: function(value) {\n                this._frequency = value;\n                this._phaseInc = 2 * Math.PI * this._frequency *\n                    this.bufferSize /\n                    this.sampleRate;\n            }\n        },\n        offset: {\n            get: function() {\n                return this._offset;\n            },\n            set: function(value) {\n                this._offset = value;\n            }\n        },\n        oscillation: {\n            get: function() {\n                return this._oscillation;\n            },\n            set: function(value) {\n                this._oscillation = value;\n            }\n        },\n        phase: {\n            get: function() {\n                return this._phase;\n            },\n            set: function(value) {\n                this._phase = value;\n            }\n        },\n        target: {\n            get: function() {\n                return this._target;\n            },\n            set: function(value) {\n                this._target = value;\n            }\n        },\n        activate: {\n            value: function(doActivate) {\n                if (!doActivate) {\n                    this.output.disconnect(userContext.destination);\n                } else {\n                    this.output.connect(userContext.destination);\n                }\n            }\n        },\n        callback: {\n            value: function(callback) {\n                var that = this;\n                return function() {\n                    that._phase += that._phaseInc;\n                    if (that._phase > 2 * Math.PI) {\n                        that._phase = 0;\n                    }\n                    callback(that._target, that._offset +\n                        that._oscillation *\n                        Math.sin(that._phase));\n                };\n            }\n        }\n    });\n\n    Tuna.toString = Tuna.prototype.toString = function() {\n        return \"Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js\";\n    };\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/tunajs/tuna.js\n ** module id = 21\n ** module chunks = 0\n **/"],"sourceRoot":""}
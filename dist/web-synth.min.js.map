{"version":3,"sources":["webpack:///web-synth.min.js","webpack:///webpack/bootstrap 9e4457b65504384d48b1","webpack:///./src/index.js","webpack:///./src/lib/core/Constants.js","webpack:///./src/lib/AudioContext.js","webpack:///./src/lib/core/Effect.js","webpack:///./src/lib/core/Module.js","webpack:///./src/lib/core/SoundSource.js","webpack:///./src/lib/modules/index.js","webpack:///./src/WebSynth.js","webpack:///./src/lib/Synth.js","webpack:///./src/lib/core/EffectManager.js","webpack:///./src/lib/core/Voice.js","webpack:///./src/lib/modules/Effects/Bitcrusher.js","webpack:///./src/lib/modules/Effects/Cabinet.js","webpack:///./src/lib/modules/Effects/Delay.js","webpack:///./src/lib/modules/Effects/Filter.js","webpack:///./src/lib/modules/Effects/MoogFilter.js","webpack:///./src/lib/modules/Effects/Overdrive.js","webpack:///./src/lib/modules/Effects/PingPongDelay.js","webpack:///./src/lib/modules/Effects/Tremolo.js","webpack:///./src/lib/modules/Effects/WahWah.js","webpack:///./src/lib/modules/Envelope.js","webpack:///./src/lib/modules/Master.js","webpack:///./src/lib/modules/Pan.js","webpack:///./src/lib/modules/SoundSources/Modulator.js","webpack:///./src/lib/modules/SoundSources/Noise.js","webpack:///./src/lib/modules/SoundSources/Oscillator.js","webpack:///./~/tunajs/tuna.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_WebSynth","_WebSynth2","win","window","WebSynth","Object","defineProperty","value","TYPES","MASTER","OSCILLATOR","MODULATOR","FILTER","NOISE","REVERB","CHORUS","DELAY","ENVELOPE","CONST","ADSR","NOISE_WHITE","NOISE_PINK","NOISE_BROWN","WAVE_SINE","WAVE_SQUARE","WAVE_SAWTOOTH","WAVE_TRIANLGE","WAVE_CUSTOM","FILTER_LOWPASS","FILTER_HIGHPASS","FILTER_BANDPASS","FILTER_LOWSHELF","FILTER_HIGHSHELF","FILTER_PEAKING","FILTER_NOTCH","FILTER_ALLPASS","AudioCtx","AudioContext","webkitAudioContext","ctx","deprecatedFn","createGainNode","createDelayNode","f","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","getter","get","parent","getPrototypeOf","_coreConstants","_coreModule","_coreModule2","_EffectManager","_EffectManager2","Effect","_Module","this","main","mainEffect","type","sourceType","source","input","output","ret","gain","filter","_AudioContext","_AudioContext2","Module","properties","envelope","link","level","createGain","l","connect","disconnect","SoundSource","defaultLineInProperty","start","release","stop","_interopRequire","_Master","Master","_Envelope","Envelope","_Pan","Pan","_SoundSourcesOscillator","Oscillator","_SoundSourcesModulator","Modulator","_SoundSourcesNoise","Noise","_EffectsFilter","Filter","_EffectsDelay","Delay","_EffectsPingPongDelay","PingPongDelay","_EffectsWahWah","WahWah","_EffectsTremolo","Tremolo","_EffectsOverdrive","Overdrive","_EffectsCabinet","Cabinet","_EffectsBitcrusher","Bitcrusher","_EffectsMoogFilter","MoogFilter","_interopRequireWildcard","newObj","hasOwnProperty","_libModules","Modules","_libCoreConstants","_libSynth","_libSynth2","_this","synth","methods","keys","fx","VARS","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","toLowerCase","label","_iterator","Symbol","iterator","next","done","err","play","note","_coreVoice","_coreVoice2","Synth","modulesConfig","voices","spectrum","updateSpectrum","resetSpectrum","analyser","javascriptNode","createSpectrum","attack","decay","sustain","SMOOTHING","FFT_SIZE","createScriptProcessor","destination","createAnalyser","smoothingTimeConstant","fftSize","minDecibels","maxDecibels","String","Error","addModule","frequencyData","noteOn","Uint8Array","frequencyBinCount","onaudioprocess","getByteFrequencyData","noteOff","_tunajs","_tunajs2","manager","_modules","_SoundSource","_SoundSource2","_Constants","Voice","soundSources","master","setupModules","linkModules","modConf","forEach","mod","push","_this2","currentModule","currentModuleType","destinationModule","dest","getLineOut","getLineIn","lineOut","_this3","e","setEnvelope","setNote","_this4","adsr","getReleaseTime","resetEnvelope","_coreEffect","_coreEffect2","_Effect","bits","normfreq","bufferSize","setMainEffect","makeupGain","impulsePath","bypass","wet","feedback","cutoff","delayTime","wetLevel","dryLevel","freq","q","filterGain","frequency","Q","filterType","resonance","outputGain","drive","curveAmount","algorithmIndex","delayTimeLeft","delayTimeRight","intensity","rate","stereoPhase","automode","baseFrequency","excursionOctaves","sweep","sensitivity","now","currentTime","attackLevel","sustainLevel","attackEnd","t","getEnvelopeTarget","setValueAtTime","linearRampToValueAtTime","setTargetAtTime","cancelScheduledValues","createStereoPanner","pan","_coreSoundSource","_coreSoundSource2","createOscillator","createBufferSource","color","setColor","buffer","white","pink","brown","noiseBuffer","getNoiseBuffer","getBufferSize","getChannelData","Math","random","b0","b1","b2","b3","b4","b5","b6","lastOut","sampleRate","createBuffer","loop","detune","setDetune","definition","Tuna","context","console","log","connectify","userContext","userInstance","shimConnect","node","Array","shift","apply","arguments","Super","isPrototypeOf","slice","unshift","oconnect","__connectified__","proto","dbToWAVolume","db","max","round","pow","fmod","x","y","tmp","tmp2","pY","l2","toExponential","match","parseInt","toFixed","parseFloat","sign","abs","tanh","n","exp","initValue","userVal","defaultVal","pipe","param","val","activate","doActivate","activateNode","activateCallback","_bypass","set","_lastBypassValue","connectInOrder","nodeArray","error","getDefaults","result","defaults","automate","duration","startTime","method","dur","_is","automatable","name","FLOAT","BOOLEAN","STRING","INT","define","processor","step","phaser","last","inputBuffer","outputBuffer","floor","min","convolver","newConvolver","makeupNode","Convolver","impulse","Chorus","attenuator","splitter","createChannelSplitter","delayL","createDelay","delayR","feedbackGainNodeLR","feedbackGainNodeRL","merger","createChannelMerger","lfoL","LFO","callback","lfoR","delay","depth","phase","PI","_delay","offset","_depth","oscillation","_feedback","_rate","Compressor","compNode","createDynamicsCompressor","automakeup","threshold","ratio","knee","computeMakeup","magicCoefficient","_automakeup","createConvolver","dry","filterLow","createBiquadFilter","filterHigh","highCut","lowCut","xhr","XMLHttpRequest","open","responseType","onreadystatechange","readyState","status","decodeAudioData","response","send","feedbackNode","in1","in2","in3","in4","out1","out2","out3","out4","fb","inputFactor","inputDrive","waveshaper","createWaveShaper","outputDrive","ws_table","Float32Array","k_nSamples","scaled","_drive","_curveAmount","_algorithmIndex","waveshaperAlgorithms","curve","_outputGain","amount","n_samples","k","a","abx","Phaser","filtersL","filtersR","feedbackGainNodeL","feedbackGainNodeR","filteredSignal","stage","baseModulationFrequency","filters","_baseModulationFrequency","_stereoPhase","newPhase","_phase","stereoToMonoMix","feedbackLevel","delayLeft","delayRight","_delayTimeLeft","_delayTimeRight","amplitudeL","amplitudeR","_intensity","envelopeFollower","EnvelopeFollower","filterBp","filterPeaking","init","enableAutoMode","_automode","filterFreqTimeout","setFilterFreq","_baseFrequency","_excursionFrequency","_sweep","clearTimeout","setTimeout","bind","_sensitivity","_excursionOctaves","_resonance","jsNode","buffersize","attackTime","releaseTime","_envelope","_attackTime","_attackC","_releaseTime","_releaseC","_callback","_target","activated","returnCompute","event","compute","current","chan","rms","count","channels","numberOfChannels","sqrt","_frequency","_phaseInc","_offset","_oscillation","that","sin","toString"],"mappings":"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","file":"web-synth.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _WebSynth = __webpack_require__(/*! ./WebSynth */ 7);\n\t\n\tvar _WebSynth2 = _interopRequireDefault(_WebSynth);\n\t\n\tvar win = window || {};\n\t\n\t//TODO manage module.exports....etc...\n\t\n\twin.WebSynth = _WebSynth2['default'];\n\n/***/ },\n/* 1 */\n/*!***********************************!*\\\n  !*** ./src/lib/core/Constants.js ***!\n  \\***********************************/\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\tvar TYPES = {\n\t    MASTER: 'Master',\n\t    OSCILLATOR: 'Oscillator',\n\t    MODULATOR: 'Modulator',\n\t    FILTER: 'Filter',\n\t    NOISE: 'Noise',\n\t    REVERB: 'Reverb',\n\t    CHORUS: 'Chorus',\n\t    DELAY: 'Delay',\n\t    ENVELOPE: 'Envelope'\n\t};\n\t\n\texports.TYPES = TYPES;\n\tvar CONST = {\n\t    MASTER: 'master',\n\t    ADSR: 'adsr',\n\t\n\t    NOISE_WHITE: 'white',\n\t    NOISE_PINK: 'pink',\n\t    NOISE_BROWN: 'brown',\n\t\n\t    WAVE_SINE: 'sine',\n\t    WAVE_SQUARE: 'square',\n\t    WAVE_SAWTOOTH: 'sawtooth',\n\t    WAVE_TRIANLGE: 'triangle',\n\t    WAVE_CUSTOM: 'custom',\n\t\n\t    FILTER_LOWPASS: 'lowpass',\n\t    FILTER_HIGHPASS: 'highpass',\n\t    FILTER_BANDPASS: 'bandpass',\n\t    FILTER_LOWSHELF: 'lowshelf',\n\t    FILTER_HIGHSHELF: 'highshelf',\n\t    FILTER_PEAKING: 'peaking',\n\t    FILTER_NOTCH: 'notch',\n\t    FILTER_ALLPASS: 'allpass'\n\t};\n\texports.CONST = CONST;\n\n/***/ },\n/* 2 */\n/*!*********************************!*\\\n  !*** ./src/lib/AudioContext.js ***!\n  \\*********************************/\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\tvar AudioCtx = window.AudioContext || window.webkitAudioContext,\n\t    ctx = new AudioCtx(),\n\t    deprecatedFn = {\n\t    createGainNode: 'createGain',\n\t    createDelayNode: 'createDelay'\n\t};\n\t\n\tfor (var f in deprecatedFn) {\n\t    if (typeof ctx[f] === 'function') {\n\t        ctx[deprecatedFn[f]] = ctx[f];\n\t    }\n\t}\n\t\n\texports['default'] = ctx;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/*!********************************!*\\\n  !*** ./src/lib/core/Effect.js ***!\n  \\********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../core/Constants */ 1);\n\t\n\tvar _coreModule = __webpack_require__(/*! ../core/Module */ 4);\n\t\n\tvar _coreModule2 = _interopRequireDefault(_coreModule);\n\t\n\tvar _EffectManager = __webpack_require__(/*! ./EffectManager */ 9);\n\t\n\tvar _EffectManager2 = _interopRequireDefault(_EffectManager);\n\t\n\tvar Effect = (function (_Module) {\n\t    _inherits(Effect, _Module);\n\t\n\t    function Effect(props) {\n\t        _classCallCheck(this, Effect);\n\t\n\t        _get(Object.getPrototypeOf(Effect.prototype), 'constructor', this).call(this, props);\n\t        this.main = null;\n\t        this.mainEffect = null;\n\t    }\n\t\n\t    _createClass(Effect, [{\n\t        key: 'setMainEffect',\n\t        value: function setMainEffect(type, mainEffect, props) {\n\t            //TODO set an array of main effects??\n\t            this.main = new _EffectManager2['default'][type](props);\n\t            this.mainEffect = this.main[mainEffect];\n\t        }\n\t    }, {\n\t        key: 'createGain',\n\t        value: function createGain() {\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'getLineIn',\n\t        value: function getLineIn(sourceType, source) {\n\t            if (sourceType === _coreConstants.TYPES.MODULATOR) {\n\t                return this.mainEffect[source.target];\n\t            } else {\n\t                return this.main.input;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getLineOut',\n\t        value: function getLineOut() {\n\t            return this.main.output;\n\t        }\n\t    }, {\n\t        key: 'getEnvelopeTarget',\n\t        value: function getEnvelopeTarget(target) {\n\t            var ret = null;\n\t\n\t            if (target === 'gain') {\n\t                ret = this.main.output.gain;\n\t            } else if (this.main && this.mainEffect && this.mainEffect[target]) {\n\t                ret = this.main.filter[target];\n\t            }\n\t\n\t            return ret;\n\t        }\n\t    }]);\n\t\n\t    return Effect;\n\t})(_coreModule2['default']);\n\t\n\texports['default'] = Effect;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/*!********************************!*\\\n  !*** ./src/lib/core/Module.js ***!\n  \\********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar Module = (function () {\n\t    function Module(props) {\n\t        _classCallCheck(this, Module);\n\t\n\t        var properties = props || {};\n\t        this.gain = null;\n\t        this.envelope = null;\n\t        this.main = null;\n\t        this.link = properties.link || null;\n\t        this.level = +properties.level;\n\t\n\t        this.createGain(this.level);\n\t    }\n\t\n\t    _createClass(Module, [{\n\t        key: 'createGain',\n\t        value: function createGain(level) {\n\t            var l = level >= 0 ? level % 101 : 100;\n\t            this.gain = _AudioContext2['default'].createGain();\n\t            this.envelope = _AudioContext2['default'].createGain();\n\t            this.gain.gain.value = l / 100;\n\t            this.envelope.gain.value = 1;\n\t\n\t            this.envelope.connect(this.gain);\n\t        }\n\t    }, {\n\t        key: 'disconnect',\n\t        value: function disconnect() {\n\t            this.gain.disconnect();\n\t        }\n\t    }, {\n\t        key: 'getLineIn',\n\t        value: function getLineIn() {\n\t            return this.main;\n\t        }\n\t    }, {\n\t        key: 'getLineOut',\n\t        value: function getLineOut() {\n\t            return this.gain;\n\t        }\n\t    }, {\n\t        key: 'getEnvelopeTarget',\n\t        value: function getEnvelopeTarget(target) {\n\t            var ret = null;\n\t\n\t            if (this.main && this.main[target]) {\n\t                ret = this.main[target];\n\t            } else if (target === 'gain' && this.gain) {\n\t                ret = this.envelope.gain;\n\t            }\n\t\n\t            return ret;\n\t        }\n\t    }]);\n\t\n\t    return Module;\n\t})();\n\t\n\texports['default'] = Module;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 5 */\n/*!*************************************!*\\\n  !*** ./src/lib/core/SoundSource.js ***!\n  \\*************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../core/Constants */ 1);\n\t\n\tvar _coreModule = __webpack_require__(/*! ../core/Module */ 4);\n\t\n\tvar _coreModule2 = _interopRequireDefault(_coreModule);\n\t\n\tvar SoundSource = (function (_Module) {\n\t    _inherits(SoundSource, _Module);\n\t\n\t    function SoundSource(props) {\n\t        _classCallCheck(this, SoundSource);\n\t\n\t        _get(Object.getPrototypeOf(SoundSource.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.defaultLineInProperty = 'frequency';\n\t    }\n\t\n\t    _createClass(SoundSource, [{\n\t        key: 'noteOn',\n\t        value: function noteOn() {\n\t            this.main.start(0);\n\t        }\n\t    }, {\n\t        key: 'noteOff',\n\t        value: function noteOff(release) {\n\t            this.main.stop(release);\n\t        }\n\t    }, {\n\t        key: 'getLineIn',\n\t        value: function getLineIn(sourceType, source) {\n\t            if (sourceType === _coreConstants.TYPES.MODULATOR) {\n\t                return this.main[source.target];\n\t            } else {\n\t                return this.main[this.defaultLineInProperty];\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return SoundSource;\n\t})(_coreModule2['default']);\n\t\n\texports['default'] = SoundSource;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/*!**********************************!*\\\n  !*** ./src/lib/modules/index.js ***!\n  \\**********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequire(obj) { return obj && obj.__esModule ? obj['default'] : obj; }\n\t\n\tvar _Master = __webpack_require__(/*! ./Master */ 21);\n\t\n\texports.Master = _interopRequire(_Master);\n\t\n\tvar _Envelope = __webpack_require__(/*! ./Envelope */ 20);\n\t\n\texports.Envelope = _interopRequire(_Envelope);\n\t\n\tvar _Pan = __webpack_require__(/*! ./Pan */ 22);\n\t\n\texports.Pan = _interopRequire(_Pan);\n\t\n\t//SOUNDSOURCES\n\t\n\tvar _SoundSourcesOscillator = __webpack_require__(/*! ./SoundSources/Oscillator */ 25);\n\t\n\texports.Oscillator = _interopRequire(_SoundSourcesOscillator);\n\t\n\tvar _SoundSourcesModulator = __webpack_require__(/*! ./SoundSources/Modulator */ 23);\n\t\n\texports.Modulator = _interopRequire(_SoundSourcesModulator);\n\t\n\tvar _SoundSourcesNoise = __webpack_require__(/*! ./SoundSources/Noise */ 24);\n\t\n\texports.Noise = _interopRequire(_SoundSourcesNoise);\n\t\n\t//TODO implement\n\t//Sampler\n\t\n\t//EFFECTS\n\t\n\tvar _EffectsFilter = __webpack_require__(/*! ./Effects/Filter */ 14);\n\t\n\texports.Filter = _interopRequire(_EffectsFilter);\n\t\n\tvar _EffectsDelay = __webpack_require__(/*! ./Effects/Delay */ 13);\n\t\n\texports.Delay = _interopRequire(_EffectsDelay);\n\t\n\tvar _EffectsPingPongDelay = __webpack_require__(/*! ./Effects/PingPongDelay */ 17);\n\t\n\texports.PingPongDelay = _interopRequire(_EffectsPingPongDelay);\n\t\n\tvar _EffectsWahWah = __webpack_require__(/*! ./Effects/WahWah */ 19);\n\t\n\texports.WahWah = _interopRequire(_EffectsWahWah);\n\t\n\tvar _EffectsTremolo = __webpack_require__(/*! ./Effects/Tremolo */ 18);\n\t\n\texports.Tremolo = _interopRequire(_EffectsTremolo);\n\t\n\tvar _EffectsOverdrive = __webpack_require__(/*! ./Effects/Overdrive */ 16);\n\t\n\texports.Overdrive = _interopRequire(_EffectsOverdrive);\n\t\n\tvar _EffectsCabinet = __webpack_require__(/*! ./Effects/Cabinet */ 12);\n\t\n\texports.Cabinet = _interopRequire(_EffectsCabinet);\n\t\n\tvar _EffectsBitcrusher = __webpack_require__(/*! ./Effects/Bitcrusher */ 11);\n\t\n\texports.Bitcrusher = _interopRequire(_EffectsBitcrusher);\n\t\n\tvar _EffectsMoogFilter = __webpack_require__(/*! ./Effects/MoogFilter */ 15);\n\t\n\texports.MoogFilter = _interopRequire(_EffectsMoogFilter);\n\t\n\t//TODO implement\n\t//Convolver\n\t//Compressor\n\t//Phaser\n\t//Chorus\n\n/***/ },\n/* 7 */\n/*!*************************!*\\\n  !*** ./src/WebSynth.js ***!\n  \\*************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _libModules = __webpack_require__(/*! ./lib/modules */ 6);\n\t\n\tvar Modules = _interopRequireWildcard(_libModules);\n\t\n\tvar _libCoreConstants = __webpack_require__(/*! ./lib/core/Constants */ 1);\n\t\n\tvar _libSynth = __webpack_require__(/*! ./lib/Synth */ 8);\n\t\n\tvar _libSynth2 = _interopRequireDefault(_libSynth);\n\t\n\tvar WebSynth = function WebSynth(props) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, WebSynth);\n\t\n\t    var properties = props || {},\n\t        synth = new _libSynth2['default'](properties),\n\t        methods = Object.keys(Modules),\n\t        fx = undefined;\n\t\n\t    this.VARS = _libCoreConstants.CONST;\n\t\n\t    //Synth Module Creators\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        var _loop = function () {\n\t            var type = _step.value;\n\t\n\t            fx = type.toLowerCase();\n\t            _this[fx] = function (label, props) {\n\t                synth.module(type, label, props);\n\t                return _this;\n\t            };\n\t        };\n\t\n\t        for (var _iterator = methods[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            _loop();\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator['return']) {\n\t                _iterator['return']();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t\n\t    this.play = function (note) {\n\t        return synth.play(note);\n\t    };\n\t    this.stop = function (note) {\n\t        return synth.stop(note);\n\t    };\n\t};\n\t\n\texports['default'] = WebSynth;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/*!**************************!*\\\n  !*** ./src/lib/Synth.js ***!\n  \\**************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ./core/Constants */ 1);\n\t\n\tvar _AudioContext = __webpack_require__(/*! ./AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _coreVoice = __webpack_require__(/*! ./core/Voice */ 10);\n\t\n\tvar _coreVoice2 = _interopRequireDefault(_coreVoice);\n\t\n\tvar Synth = (function () {\n\t    function Synth(props) {\n\t        _classCallCheck(this, Synth);\n\t\n\t        var properties = props || {};\n\t        this.modulesConfig = {};\n\t        this.voices = {};\n\t        this.spectrum = properties.spectrum || false;\n\t        this.updateSpectrum = properties.updateSpectrum || null;\n\t        this.resetSpectrum = properties.resetSpectrum || null;\n\t\n\t        this.analyser = null;\n\t        this.javascriptNode = null;\n\t\n\t        if (this.spectrum === true) {\n\t            this.createSpectrum();\n\t        }\n\t\n\t        this.module('Master', _coreConstants.CONST.MASTER, {\n\t            level: 100\n\t        });\n\t\n\t        this.module('Envelope', _coreConstants.CONST.ADSR, {\n\t            link: _coreConstants.CONST.MASTER,\n\t            target: 'gain',\n\t            level: 100,\n\t            attack: null,\n\t            decay: 0.1,\n\t            sustain: 100,\n\t            release: 5\n\t        });\n\t    }\n\t\n\t    _createClass(Synth, [{\n\t        key: 'createSpectrum',\n\t        value: function createSpectrum() {\n\t            var SMOOTHING = 0.8,\n\t                FFT_SIZE = 2048;\n\t\n\t            this.javascriptNode = _AudioContext2['default'].createScriptProcessor(2048, 1, 1);\n\t            this.javascriptNode.connect(_AudioContext2['default'].destination);\n\t\n\t            this.analyser = _AudioContext2['default'].createAnalyser();\n\t            this.analyser.smoothingTimeConstant = SMOOTHING;\n\t            this.analyser.fftSize = FFT_SIZE;\n\t            this.analyser.minDecibels = -140;\n\t            this.analyser.maxDecibels = 0;\n\t\n\t            this.analyser.connect(_AudioContext2['default'].destination);\n\t        }\n\t    }, {\n\t        key: 'module',\n\t        value: function module(type, label, props) {\n\t            if (!type || type.constructor !== String) {\n\t                throw new Error('Synth Module :: missing type');\n\t            }\n\t\n\t            if (!label || label.constructor !== String) {\n\t                throw new Error('Synth Module :: missing label');\n\t            }\n\t\n\t            if (!props || props.constructor !== Object) {\n\t                throw new Error('Synth Module :: missing properties');\n\t            }\n\t\n\t            if (!this.modulesConfig[label]) {\n\t                this.addModule(type, label, props);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'addModule',\n\t        value: function addModule(type, label, props) {\n\t            this.modulesConfig[label] = {\n\t                type: type,\n\t                props: props\n\t            };\n\t        }\n\t    }, {\n\t        key: 'play',\n\t        value: function play(note) {\n\t            var _this = this;\n\t\n\t            var frequencyData = undefined;\n\t\n\t            if (!this.voices[note]) {\n\t                this.voices[note] = new _coreVoice2['default'](note, this.modulesConfig, this.analyser);\n\t                this.voices[note].noteOn();\n\t            }\n\t            if (this.spectrum === true && this.javascriptNode) {\n\t                frequencyData = new Uint8Array(this.analyser.frequencyBinCount);\n\t\n\t                this.javascriptNode.onaudioprocess = function () {\n\t                    _this.analyser.getByteFrequencyData(frequencyData);\n\t                    if (_this.updateSpectrum && typeof _this.updateSpectrum === 'function') {\n\t                        _this.updateSpectrum(frequencyData);\n\t                    }\n\t                };\n\t            }\n\t        }\n\t    }, {\n\t        key: 'stop',\n\t        value: function stop(note) {\n\t            if (this.voices[note]) {\n\t                this.voices[note].noteOff();\n\t                this.voices[note] = undefined;\n\t                delete this.voices[note];\n\t            }\n\t            if (Object.keys(this.voices).length === 0 && this.spectrum === true && this.javascriptNode) {\n\t                this.javascriptNode.onaudioprocess = null;\n\t                if (this.resetSpectrum && typeof this.resetSpectrum === 'function') {\n\t                    this.resetSpectrum();\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Synth;\n\t})();\n\t\n\texports['default'] = Synth;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 9 */\n/*!***************************************!*\\\n  !*** ./src/lib/core/EffectManager.js ***!\n  \\***************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _tunajs = __webpack_require__(/*! tunajs */ 26);\n\t\n\tvar _tunajs2 = _interopRequireDefault(_tunajs);\n\t\n\tvar manager = new _tunajs2['default'](_AudioContext2['default']);\n\t\n\texports['default'] = manager;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/*!*******************************!*\\\n  !*** ./src/lib/core/Voice.js ***!\n  \\*******************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _modules = __webpack_require__(/*! ../modules */ 6);\n\t\n\tvar Modules = _interopRequireWildcard(_modules);\n\t\n\tvar _SoundSource = __webpack_require__(/*! ./SoundSource */ 5);\n\t\n\tvar _SoundSource2 = _interopRequireDefault(_SoundSource);\n\t\n\tvar _Constants = __webpack_require__(/*! ./Constants */ 1);\n\t\n\tvar Voice = (function () {\n\t    function Voice(note, modulesConfig, analyser) {\n\t        _classCallCheck(this, Voice);\n\t\n\t        this.note = note;\n\t        this.modulesConfig = modulesConfig;\n\t        this.modules = {};\n\t        this.soundSources = [];\n\t        this.master = null;\n\t        this.analyser = analyser || null;\n\t\n\t        this.setupModules();\n\t        this.linkModules();\n\t    }\n\t\n\t    _createClass(Voice, [{\n\t        key: 'setupModules',\n\t        value: function setupModules() {\n\t            var _this = this;\n\t\n\t            var modConf = undefined,\n\t                m = undefined;\n\t\n\t            Object.keys(this.modulesConfig).forEach(function (mod) {\n\t                modConf = _this.modulesConfig[mod];\n\t                if (modConf.type && modConf.props) {\n\t                    m = new Modules[modConf.type](modConf.props);\n\t                    _this.modules[mod] = {\n\t                        type: modConf.type,\n\t                        instance: m\n\t                    };\n\t\n\t                    if (m.instance instanceof _SoundSource2['default']) {\n\t                        _this.soundSources.push(m);\n\t                    } else if (modConf.type === _Constants.TYPES.MASTER) {\n\t                        _this.master = m;\n\t                    }\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'linkModules',\n\t        value: function linkModules() {\n\t            var _this2 = this;\n\t\n\t            Object.keys(this.modules).forEach(function (mod) {\n\t                var currentModule = _this2.modules[mod].instance,\n\t                    currentModuleType = _this2.modules[mod].type,\n\t                    destinationModule = undefined,\n\t                    source = undefined,\n\t                    dest = undefined;\n\t\n\t                if (currentModule.link) {\n\t                    destinationModule = _this2.modules[currentModule.link];\n\t                    if (destinationModule && destinationModule.instance) {\n\t                        source = currentModule.getLineOut();\n\t                        dest = destinationModule.instance.getLineIn(currentModuleType, currentModule);\n\t                        //console.log(mod, source, currentModule.link, dest);\n\t                        if (source && dest) {\n\t                            source.connect(dest);\n\t                        }\n\t                    }\n\t                }\n\t            });\n\t\n\t            this.master.lineOut(this.analyser);\n\t        }\n\t    }, {\n\t        key: 'noteOn',\n\t        value: function noteOn() {\n\t            var _this3 = this;\n\t\n\t            var m = undefined,\n\t                dest = undefined;\n\t\n\t            Object.keys(this.modules).forEach(function (e) {\n\t                m = _this3.modules[e].instance;\n\t\n\t                if (typeof m.setEnvelope === 'function') {\n\t                    dest = _this3.modules[m.link] ? _this3.modules[m.link].instance : null;\n\t                    m.setEnvelope(dest);\n\t                }\n\t                if (typeof m.setNote === 'function') {\n\t                    m.setNote(+_this3.note);\n\t                }\n\t            });\n\t            Object.keys(this.modules).forEach(function (e) {\n\t                m = _this3.modules[e].instance;\n\t                if (typeof m.noteOn === 'function') {\n\t                    m.noteOn();\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'noteOff',\n\t        value: function noteOff() {\n\t            var _this4 = this;\n\t\n\t            var release = 0,\n\t                adsr = this.modules.adsr.instance,\n\t                m = undefined,\n\t                dest = undefined;\n\t\n\t            release = adsr.getReleaseTime();\n\t\n\t            Object.keys(this.modules).forEach(function (e) {\n\t                m = _this4.modules[e].instance;\n\t                if (typeof m.resetEnvelope === 'function') {\n\t                    dest = _this4.modules[m.link] ? _this4.modules[m.link].instance : null;\n\t                    m.resetEnvelope(dest);\n\t                }\n\t            });\n\t            Object.keys(this.modules).forEach(function (e) {\n\t                m = _this4.modules[e].instance;\n\t                if (typeof m.noteOff === 'function') {\n\t                    m.noteOff(release);\n\t                }\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Voice;\n\t})();\n\t\n\texports['default'] = Voice;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 11 */\n/*!***********************************************!*\\\n  !*** ./src/lib/modules/Effects/Bitcrusher.js ***!\n  \\***********************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar Bitcrusher = (function (_Effect) {\n\t    _inherits(Bitcrusher, _Effect);\n\t\n\t    function Bitcrusher(props) {\n\t        _classCallCheck(this, Bitcrusher);\n\t\n\t        _get(Object.getPrototypeOf(Bitcrusher.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t\n\t        this.bits = +properties.bits || 4; //1 to 16\n\t        this.normfreq = +properties.normfreq || 0.1; //0 to 1\n\t        this.bufferSize = +properties.bufferSize || 4096; //256 to 16384\n\t\n\t        this.setMainEffect('Bitcrusher', 'output', {\n\t            bits: this.bits,\n\t            normfreq: this.normfreq,\n\t            bufferSize: this.bufferSize\n\t        });\n\t    }\n\t\n\t    return Bitcrusher;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = Bitcrusher;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 12 */\n/*!********************************************!*\\\n  !*** ./src/lib/modules/Effects/Cabinet.js ***!\n  \\********************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar Cabinet = (function (_Effect) {\n\t    _inherits(Cabinet, _Effect);\n\t\n\t    function Cabinet(props) {\n\t        _classCallCheck(this, Cabinet);\n\t\n\t        _get(Object.getPrototypeOf(Cabinet.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t        this.makeupGain = +properties.makeupGain || 1; //0 to 20\n\t        this.impulsePath = properties.impulsePath || ''; //path to your speaker impulse\n\t        this.bypass = +properties.bypass || 0;\n\t\n\t        this.setMainEffect('Cabinet', 'output', {\n\t            makeupGain: this.makeupGain,\n\t            impulsePath: this.impulsePath,\n\t            bypass: this.bypass\n\t        });\n\t    }\n\t\n\t    return Cabinet;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = Cabinet;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/*!******************************************!*\\\n  !*** ./src/lib/modules/Effects/Delay.js ***!\n  \\******************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar Delay = (function (_Effect) {\n\t    _inherits(Delay, _Effect);\n\t\n\t    function Delay(props) {\n\t        _classCallCheck(this, Delay);\n\t\n\t        _get(Object.getPrototypeOf(Delay.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t\n\t        this.wet = +properties.wet || 0;\n\t        this.feedback = +properties.feedback || 0;\n\t        this.cutoff = +properties.cutoff || 0;\n\t        this.delayTime = +properties.delayTime || 0;\n\t        this.bypass = +properties.bypass || 0;\n\t\n\t        this.setMainEffect('Delay', 'filter', {\n\t            feedback: this.feedback, //0 to 1+\n\t            delayTime: this.delayTime, //how many milliseconds should the wet signal be delayed?\n\t            wetLevel: this.wet, //0 to 1+\n\t            dryLevel: 1, //0 to 1+\n\t            cutoff: this.cutoff, //cutoff frequency of the built in lowpass-filter. 20 to 22050\n\t            bypass: this.bypass\n\t        });\n\t    }\n\t\n\t    return Delay;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = Delay;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 14 */\n/*!*******************************************!*\\\n  !*** ./src/lib/modules/Effects/Filter.js ***!\n  \\*******************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar Filter = (function (_Effect) {\n\t    _inherits(Filter, _Effect);\n\t\n\t    function Filter(props) {\n\t        _classCallCheck(this, Filter);\n\t\n\t        _get(Object.getPrototypeOf(Filter.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t\n\t        this.freq = +properties.freq || 11000;\n\t        this.q = +properties.q || 10;\n\t        this.bypass = +properties.bypass || 0;\n\t        this.filterGain = this.level || 0;\n\t\n\t        this.setMainEffect('Filter', 'filter', {\n\t            frequency: this.freq, //20 to 22050\n\t            Q: this.q, //0.001 to 100\n\t            gain: this.filterGain, //-40 to 40\n\t            filterType: properties.type || _coreConstants.CONST.FILTER_LOWPASS,\n\t            bypass: this.bypass\n\t        });\n\t    }\n\t\n\t    return Filter;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = Filter;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 15 */\n/*!***********************************************!*\\\n  !*** ./src/lib/modules/Effects/MoogFilter.js ***!\n  \\***********************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar MoogFilter = (function (_Effect) {\n\t    _inherits(MoogFilter, _Effect);\n\t\n\t    function MoogFilter(props) {\n\t        _classCallCheck(this, MoogFilter);\n\t\n\t        _get(Object.getPrototypeOf(MoogFilter.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t\n\t        this.cutoff = +properties.cutoff || 0.065; //0 to 1\n\t        this.resonance = +properties.resonance || 3.5; //0 to 4\n\t        this.bufferSize = +properties.bufferSize || 4096; //256 to 16384\n\t\n\t        this.setMainEffect('MoogFilter', 'output', {\n\t            cutoff: this.cutoff,\n\t            resonance: this.resonance,\n\t            bufferSize: this.bufferSize\n\t        });\n\t    }\n\t\n\t    return MoogFilter;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = MoogFilter;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 16 */\n/*!**********************************************!*\\\n  !*** ./src/lib/modules/Effects/Overdrive.js ***!\n  \\**********************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar Overdrive = (function (_Effect) {\n\t    _inherits(Overdrive, _Effect);\n\t\n\t    function Overdrive(props) {\n\t        _classCallCheck(this, Overdrive);\n\t\n\t        _get(Object.getPrototypeOf(Overdrive.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t        this.outputGain = +properties.outputGain || 0.5; //0 to 1+\n\t        this.drive = +properties.drive || 0.7; //0 to 1\n\t        this.curveAmount = +properties.curveAmount || 1; //0 to 1\n\t        this.algorithmIndex = +properties.algorithmIndex || 0; //0 to 5, selects one of our drive algorithms\n\t        this.bypass = +properties.bypass || 0;\n\t\n\t        this.setMainEffect('Overdrive', 'output', {\n\t            outputGain: this.outputGain,\n\t            drive: this.drive,\n\t            curveAmount: this.curveAmount,\n\t            algorithmIndex: this.algorithmIndex,\n\t            bypass: this.bypass\n\t        });\n\t    }\n\t\n\t    return Overdrive;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = Overdrive;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 17 */\n/*!**************************************************!*\\\n  !*** ./src/lib/modules/Effects/PingPongDelay.js ***!\n  \\**************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar PingPongDelay = (function (_Effect) {\n\t    _inherits(PingPongDelay, _Effect);\n\t\n\t    function PingPongDelay(props) {\n\t        _classCallCheck(this, PingPongDelay);\n\t\n\t        _get(Object.getPrototypeOf(PingPongDelay.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t\n\t        this.wet = +properties.wet || 0;\n\t        this.feedback = +properties.feedback || 0;\n\t        this.delayTimeLeft = +properties.delayTimeLeft || 0;\n\t        this.delayTimeRight = +properties.delayTimeRight || 0;\n\t        this.bypass = +properties.bypass || 0;\n\t\n\t        this.setMainEffect('PingPongDelay', 'delayLeft', {\n\t            wetLevel: this.wet, //0 to 1\n\t            feedback: this.feedback, //0 to 1\n\t            delayTimeLeft: this.delayTimeRight, //1 to 10000 (milliseconds)\n\t            delayTimeRight: this.delayTimeRight //1 to 10000 (milliseconds)\n\t        });\n\t    }\n\t\n\t    return PingPongDelay;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = PingPongDelay;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 18 */\n/*!********************************************!*\\\n  !*** ./src/lib/modules/Effects/Tremolo.js ***!\n  \\********************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar Tremolo = (function (_Effect) {\n\t    _inherits(Tremolo, _Effect);\n\t\n\t    function Tremolo(props) {\n\t        _classCallCheck(this, Tremolo);\n\t\n\t        _get(Object.getPrototypeOf(Tremolo.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t\n\t        this.intensity = +properties.intensity || 0; //0 to 1\n\t        this.rate = +properties.rate || 0.001; //0.001 to 8\n\t        this.stereoPhase = +properties.stereoPhase || 0; //0 to 180\n\t        this.bypass = +properties.bypass || 0;\n\t\n\t        this.setMainEffect('Tremolo', 'output', {\n\t            intensity: this.intensity,\n\t            rate: this.rate,\n\t            stereoPhase: this.stereoPhase,\n\t            bypass: this.bypass\n\t        });\n\t    }\n\t\n\t    return Tremolo;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = Tremolo;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 19 */\n/*!*******************************************!*\\\n  !*** ./src/lib/modules/Effects/WahWah.js ***!\n  \\*******************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../../core/Constants */ 1);\n\t\n\tvar _coreEffect = __webpack_require__(/*! ../../core/Effect */ 3);\n\t\n\tvar _coreEffect2 = _interopRequireDefault(_coreEffect);\n\t\n\tvar WahWah = (function (_Effect) {\n\t    _inherits(WahWah, _Effect);\n\t\n\t    function WahWah(props) {\n\t        _classCallCheck(this, WahWah);\n\t\n\t        _get(Object.getPrototypeOf(WahWah.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t\n\t        this.automode = +properties.automode || false; //true/false\n\t        this.baseFrequency = +properties.baseFrequency || 0; //0 to 1\n\t        this.excursionOctaves = +properties.excursionOctaves || 1; //1 to 6\n\t        this.sweep = +properties.sweep || 0; //0 to 1\n\t        this.resonance = +properties.resonance || 1; //1 to 100\n\t        this.sensitivity = +properties.sensitivity || 0; //-1 to 1\n\t        this.bypass = +properties.bypass || 0;\n\t\n\t        this.setMainEffect('WahWah', 'filterBp', {\n\t            automode: this.automode,\n\t            baseFrequency: this.baseFrequency,\n\t            excursionOctaves: this.excursionOctaves,\n\t            sweep: this.sweep,\n\t            resonance: this.resonance,\n\t            sensitivity: this.sensitivity,\n\t            bypass: this.bypass\n\t        });\n\t    }\n\t\n\t    return WahWah;\n\t})(_coreEffect2['default']);\n\t\n\texports['default'] = WahWah;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 20 */\n/*!*************************************!*\\\n  !*** ./src/lib/modules/Envelope.js ***!\n  \\*************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _coreModule = __webpack_require__(/*! ../core/Module */ 4);\n\t\n\tvar _coreModule2 = _interopRequireDefault(_coreModule);\n\t\n\tvar Envelope = (function (_Module) {\n\t    _inherits(Envelope, _Module);\n\t\n\t    function Envelope(props) {\n\t        _classCallCheck(this, Envelope);\n\t\n\t        _get(Object.getPrototypeOf(Envelope.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t\n\t        this.target = properties.target || null;\n\t        this.attack = properties.attack;\n\t        this.decay = properties.decay;\n\t        this.sustain = properties.sustain;\n\t        this.release = properties.release;\n\t    }\n\t\n\t    _createClass(Envelope, [{\n\t        key: 'createGain',\n\t        value: function createGain() {\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'getReleaseTime',\n\t        value: function getReleaseTime() {\n\t            var now = _AudioContext2['default'].currentTime,\n\t                release = undefined;\n\t\n\t            if (this.release) {\n\t                release = now + this.release / 10.0;\n\t            } else {\n\t                release = now + 0.2;\n\t            }\n\t\n\t            return release;\n\t        }\n\t    }, {\n\t        key: 'setEnvelope',\n\t        value: function setEnvelope(dest) {\n\t            var now = _AudioContext2['default'].currentTime,\n\t                envelope = this.level % 101,\n\t                attackLevel = undefined,\n\t                sustainLevel = undefined,\n\t                attackEnd = this.attack / 20.0,\n\t                t = undefined;\n\t\n\t            if (this.target === 'gain') {\n\t                attackLevel = envelope / 100;\n\t                sustainLevel = this.sustain / 100.0;\n\t            } else {\n\t                attackLevel = envelope * 72; // Range: 0-7200: 6-octave range\n\t                sustainLevel = attackLevel * this.sustain / 100.0; // range: 0-7200\n\t            }\n\t\n\t            if (!attackEnd) {\n\t                attackEnd = 0.05; // tweak to get target decay to work properly\n\t            }\n\t\n\t            if (dest && typeof dest.getEnvelopeTarget === 'function') {\n\t                t = dest.getEnvelopeTarget(this.target);\n\t\n\t                if (t) {\n\t                    t.setValueAtTime(0, now);\n\t                    t.linearRampToValueAtTime(attackLevel, now + attackEnd);\n\t                    t.setTargetAtTime(sustainLevel, now + attackEnd, this.decay / 100.0);\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'resetEnvelope',\n\t        value: function resetEnvelope(dest) {\n\t            var now = _AudioContext2['default'].currentTime,\n\t                t = undefined;\n\t\n\t            if (dest && typeof dest.getEnvelopeTarget === 'function') {\n\t                t = dest.getEnvelopeTarget(this.target);\n\t\n\t                if (t) {\n\t                    t.cancelScheduledValues(now);\n\t                    if (this.target === 'gain') {\n\t                        t.setValueAtTime(t.value, now);\n\t                    }\n\t                    t.setTargetAtTime(0, now, this.release / 100.0);\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getLineOut',\n\t        value: function getLineOut() {\n\t            return false;\n\t        }\n\t    }]);\n\t\n\t    return Envelope;\n\t})(_coreModule2['default']);\n\t\n\texports['default'] = Envelope;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 21 */\n/*!***********************************!*\\\n  !*** ./src/lib/modules/Master.js ***!\n  \\***********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _coreModule = __webpack_require__(/*! ../core/Module */ 4);\n\t\n\tvar _coreModule2 = _interopRequireDefault(_coreModule);\n\t\n\tvar Master = (function (_Module) {\n\t    _inherits(Master, _Module);\n\t\n\t    function Master(props) {\n\t        _classCallCheck(this, Master);\n\t\n\t        _get(Object.getPrototypeOf(Master.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.main = _AudioContext2['default'].createGain();\n\t        this.link = null;\n\t    }\n\t\n\t    _createClass(Master, [{\n\t        key: 'getLineIn',\n\t        value: function getLineIn() {\n\t            return this.main;\n\t        }\n\t    }, {\n\t        key: 'lineOut',\n\t        value: function lineOut(analyser) {\n\t            this.main.connect(this.envelope);\n\t            if (analyser) {\n\t                this.gain.connect(analyser);\n\t            } else {\n\t                this.gain.connect(_AudioContext2['default'].destination);\n\t            }\n\t            //if (spectrum) {\n\t            //    this.javascriptNode = AudioContext.createScriptProcessor(2048, 1, 1);\n\t            //    this.javascriptNode.connect(AudioContext.destination);\n\t            //\n\t            //    this.analyser = AudioContext.createAnalyser();\n\t            //    this.analyser.fftSize = 1024;\n\t            //\n\t            //    this.gain.connect(this.analyser);\n\t            //    this.analyser.connect(AudioContext.destination);\n\t            //\n\t            //    this.javascriptNode.onaudioprocess = function () {\n\t            //        console.log('asd');\n\t            //    };\n\t            //\n\t            //} else {\n\t\n\t            //}\n\t        }\n\t    }]);\n\t\n\t    return Master;\n\t})(_coreModule2['default']);\n\t\n\texports['default'] = Master;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 22 */\n/*!********************************!*\\\n  !*** ./src/lib/modules/Pan.js ***!\n  \\********************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _coreModule = __webpack_require__(/*! ../core/Module */ 4);\n\t\n\tvar _coreModule2 = _interopRequireDefault(_coreModule);\n\t\n\tvar Pan = (function (_Module) {\n\t    _inherits(Pan, _Module);\n\t\n\t    function Pan(props) {\n\t        _classCallCheck(this, Pan);\n\t\n\t        _get(Object.getPrototypeOf(Pan.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t\n\t        this.main = _AudioContext2['default'].createStereoPanner();\n\t        this.main.pan.value = +properties.value || 0;\n\t        this.main.connect(this.envelope);\n\t    }\n\t\n\t    return Pan;\n\t})(_coreModule2['default']);\n\t\n\texports['default'] = Pan;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 23 */\n/*!***************************************************!*\\\n  !*** ./src/lib/modules/SoundSources/Modulator.js ***!\n  \\***************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../../core/Constants */ 1);\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _coreSoundSource = __webpack_require__(/*! ../../core/SoundSource */ 5);\n\t\n\tvar _coreSoundSource2 = _interopRequireDefault(_coreSoundSource);\n\t\n\tvar Modulator = (function (_SoundSource) {\n\t    _inherits(Modulator, _SoundSource);\n\t\n\t    function Modulator(props) {\n\t        _classCallCheck(this, Modulator);\n\t\n\t        _get(Object.getPrototypeOf(Modulator.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t\n\t        this.freq = +properties.freq || 440;\n\t        this.target = properties.target || 'frequency';\n\t\n\t        this.main = _AudioContext2['default'].createOscillator();\n\t        this.main.type = properties.type || _coreConstants.CONST.WAVE_SINE;\n\t        this.main.connect(this.envelope);\n\t    }\n\t\n\t    _createClass(Modulator, [{\n\t        key: 'setNote',\n\t        value: function setNote() {\n\t            var f = this.freq % 11;\n\t            this.main.frequency.value = f;\n\t        }\n\t    }]);\n\t\n\t    return Modulator;\n\t})(_coreSoundSource2['default']);\n\t\n\texports['default'] = Modulator;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 24 */\n/*!***********************************************!*\\\n  !*** ./src/lib/modules/SoundSources/Noise.js ***!\n  \\***********************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../../core/Constants */ 1);\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _coreSoundSource = __webpack_require__(/*! ../../core/SoundSource */ 5);\n\t\n\tvar _coreSoundSource2 = _interopRequireDefault(_coreSoundSource);\n\t\n\tvar Noise = (function (_SoundSource) {\n\t    _inherits(Noise, _SoundSource);\n\t\n\t    function Noise(props) {\n\t        _classCallCheck(this, Noise);\n\t\n\t        _get(Object.getPrototypeOf(Noise.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t\n\t        this.defaultLineInProperty = 'detune';\n\t        this.main = _AudioContext2['default'].createBufferSource();\n\t        this.main.connect(this.envelope);\n\t\n\t        this.color = properties.color || 'white';\n\t        this.setColor();\n\t    }\n\t\n\t    _createClass(Noise, [{\n\t        key: 'setColor',\n\t        value: function setColor() {\n\t            switch (this.color) {\n\t                case _coreConstants.CONST.NOISE_WHITE:\n\t                    this.main.buffer = this.white();\n\t                    break;\n\t                case _coreConstants.CONST.NOISE_PINK:\n\t                    this.main.buffer = this.pink();\n\t                    break;\n\t                case _coreConstants.CONST.NOISE_BROWN:\n\t                    this.main.buffer = this.brown();\n\t                    break;\n\t                default:\n\t                    throw new Error('Invalid Noise color: ' + this.color);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'white',\n\t        value: function white() {\n\t            var noiseBuffer = this.getNoiseBuffer(),\n\t                bufferSize = this.getBufferSize(),\n\t                output = noiseBuffer.getChannelData(0);\n\t\n\t            for (var i = 0; i < bufferSize; i++) {\n\t                output[i] = Math.random() * 2 - 1;\n\t            }\n\t\n\t            return noiseBuffer;\n\t        }\n\t    }, {\n\t        key: 'pink',\n\t        value: function pink() {\n\t            var b0 = undefined,\n\t                b1 = undefined,\n\t                b2 = undefined,\n\t                b3 = undefined,\n\t                b4 = undefined,\n\t                b5 = undefined,\n\t                b6 = undefined,\n\t                noiseBuffer = this.getNoiseBuffer(),\n\t                bufferSize = this.getBufferSize(),\n\t                output = noiseBuffer.getChannelData(0),\n\t                white = undefined;\n\t\n\t            b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\t\n\t            for (var i = 0; i < bufferSize; i++) {\n\t                white = Math.random() * 2 - 1;\n\t\n\t                b0 = 0.99886 * b0 + white * 0.0555179;\n\t                b1 = 0.99332 * b1 + white * 0.0750759;\n\t                b2 = 0.96900 * b2 + white * 0.1538520;\n\t                b3 = 0.86650 * b3 + white * 0.3104856;\n\t                b4 = 0.55000 * b4 + white * 0.5329522;\n\t                b5 = -0.7616 * b5 - white * 0.0168980;\n\t\n\t                output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n\t                output[i] *= 0.11;\n\t                b6 = white * 0.115926;\n\t            }\n\t\n\t            return noiseBuffer;\n\t        }\n\t    }, {\n\t        key: 'brown',\n\t        value: function brown() {\n\t            var noiseBuffer = this.getNoiseBuffer(),\n\t                bufferSize = this.getBufferSize(),\n\t                output = noiseBuffer.getChannelData(0),\n\t                lastOut = 0.0,\n\t                white = undefined;\n\t\n\t            for (var i = 0; i < bufferSize; i++) {\n\t                white = white = Math.random() * 2 - 1;\n\t\n\t                output[i] = (lastOut + 0.02 * white) / 1.02;\n\t                lastOut = output[i];\n\t                output[i] *= 3.5;\n\t            }\n\t\n\t            return noiseBuffer;\n\t        }\n\t    }, {\n\t        key: 'getBufferSize',\n\t        value: function getBufferSize() {\n\t            return 2 * _AudioContext2['default'].sampleRate;\n\t        }\n\t    }, {\n\t        key: 'getNoiseBuffer',\n\t        value: function getNoiseBuffer() {\n\t            var bufferSize = this.getBufferSize(),\n\t                noiseBuffer = _AudioContext2['default'].createBuffer(1, bufferSize, _AudioContext2['default'].sampleRate);\n\t            return noiseBuffer;\n\t        }\n\t    }, {\n\t        key: 'setNote',\n\t        value: function setNote() {\n\t            this.main.loop = true;\n\t        }\n\t    }]);\n\t\n\t    return Noise;\n\t})(_coreSoundSource2['default']);\n\t\n\texports['default'] = Noise;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 25 */\n/*!****************************************************!*\\\n  !*** ./src/lib/modules/SoundSources/Oscillator.js ***!\n  \\****************************************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _coreConstants = __webpack_require__(/*! ../../core/Constants */ 1);\n\t\n\tvar _AudioContext = __webpack_require__(/*! ../../AudioContext */ 2);\n\t\n\tvar _AudioContext2 = _interopRequireDefault(_AudioContext);\n\t\n\tvar _coreSoundSource = __webpack_require__(/*! ../../core/SoundSource */ 5);\n\t\n\tvar _coreSoundSource2 = _interopRequireDefault(_coreSoundSource);\n\t\n\tvar Oscillator = (function (_SoundSource) {\n\t    _inherits(Oscillator, _SoundSource);\n\t\n\t    function Oscillator(props) {\n\t        _classCallCheck(this, Oscillator);\n\t\n\t        _get(Object.getPrototypeOf(Oscillator.prototype), 'constructor', this).call(this, props);\n\t\n\t        var properties = props || {};\n\t\n\t        this.detune = +properties.detune || 0;\n\t\n\t        this.main = _AudioContext2['default'].createOscillator();\n\t        this.main.type = properties.type || _coreConstants.CONST.WAVE_SINE;\n\t        this.main.connect(this.envelope);\n\t\n\t        this.setDetune();\n\t    }\n\t\n\t    _createClass(Oscillator, [{\n\t        key: 'setDetune',\n\t        value: function setDetune() {\n\t            if (this.detune > 1200) {\n\t                this.detune = 1200;\n\t            } else if (this.detune < -1200) {\n\t                this.detune = -1200;\n\t            }\n\t\n\t            this.main.detune.value = this.detune;\n\t        }\n\t    }, {\n\t        key: 'setNote',\n\t        value: function setNote(note) {\n\t            this.main.frequency.value = note;\n\t        }\n\t    }]);\n\t\n\t    return Oscillator;\n\t})(_coreSoundSource2['default']);\n\t\n\texports['default'] = Oscillator;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 26 */\n/*!**************************!*\\\n  !*** ./~/tunajs/tuna.js ***!\n  \\**************************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t    Copyright (c) 2012 DinahMoe AB & Oskar Eriksson\n\t\n\t    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\n\t    files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy,\n\t    modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software\n\t    is furnished to do so, subject to the following conditions:\n\t\n\t    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t\n\t    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n\t    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t*/\n\t(function(window) {\n\t    var userContext,\n\t        userInstance,\n\t        pipe = function(param, val) {\n\t            param.value = val;\n\t        },\n\t        Super = Object.create(null, {\n\t            activate: {\n\t                writable: true,\n\t                value: function(doActivate) {\n\t                    if (doActivate) {\n\t                        this.input.disconnect();\n\t                        this.input.connect(this.activateNode);\n\t                        if (this.activateCallback) {\n\t                            this.activateCallback(doActivate);\n\t                        }\n\t                    } else {\n\t                        this.input.disconnect();\n\t                        this.input.connect(this.output);\n\t                    }\n\t                }\n\t            },\n\t            bypass: {\n\t                get: function() {\n\t                    return this._bypass;\n\t                },\n\t                set: function(value) {\n\t                    if (this._lastBypassValue === value) {\n\t                        return;\n\t                    }\n\t                    this._bypass = value;\n\t                    this.activate(!value);\n\t                    this._lastBypassValue = value;\n\t                }\n\t            },\n\t            connect: {\n\t                value: function(target) {\n\t                    this.output.connect(target);\n\t                }\n\t            },\n\t            disconnect: {\n\t                value: function(target) {\n\t                    this.output.disconnect(target);\n\t                }\n\t            },\n\t            connectInOrder: {\n\t                value: function(nodeArray) {\n\t                    var i = nodeArray.length - 1;\n\t                    while (i--) {\n\t                        if (!nodeArray[i].connect) {\n\t                            return console.error(\"AudioNode.connectInOrder: TypeError: Not an AudioNode.\", nodeArray[i]);\n\t                        }\n\t                        if (nodeArray[i + 1].input) {\n\t                            nodeArray[i].connect(nodeArray[i + 1].input);\n\t                        } else {\n\t                            nodeArray[i].connect(nodeArray[i + 1]);\n\t                        }\n\t                    }\n\t                }\n\t            },\n\t            getDefaults: {\n\t                value: function() {\n\t                    var result = {};\n\t                    for (var key in this.defaults) {\n\t                        result[key] = this.defaults[key].value;\n\t                    }\n\t                    return result;\n\t                }\n\t            },\n\t            automate: {\n\t                value: function(property, value, duration, startTime) {\n\t                    var start = startTime ? ~~(startTime / 1000) : userContext.currentTime,\n\t                        dur = duration ? ~~(duration / 1000) : 0,\n\t                        _is = this.defaults[property],\n\t                        param = this[property],\n\t                        method;\n\t\n\t                    if (param) {\n\t                        if (_is.automatable) {\n\t                            if (!duration) {\n\t                                method = \"setValueAtTime\";\n\t                            } else {\n\t                                method = \"linearRampToValueAtTime\";\n\t                                param.cancelScheduledValues(start);\n\t                                param.setValueAtTime(param.value, start);\n\t                            }\n\t                            param[method](value, dur + start);\n\t                        } else {\n\t                            param = value;\n\t                        }\n\t                    } else {\n\t                        console.error(\"Invalid Property for \" + this.name);\n\t                    }\n\t                }\n\t            }\n\t        }),\n\t        FLOAT = \"float\",\n\t        BOOLEAN = \"boolean\",\n\t        STRING = \"string\",\n\t        INT = \"int\";\n\t\n\t    if (typeof module !== \"undefined\" && module.exports) {\n\t        module.exports = Tuna;\n\t    } else if (true) {\n\t        window.define(\"Tuna\", definition);\n\t    } else {\n\t        window.Tuna = Tuna;\n\t    }\n\t\n\t    function definition() {\n\t        return Tuna;\n\t    }\n\t\n\t    function Tuna(context) {\n\t        if (!(this instanceof Tuna)) {\n\t            return new Tuna(context);\n\t        }\n\t        if (!window.AudioContext) {\n\t            window.AudioContext = window.webkitAudioContext;\n\t        }\n\t        if (!context) {\n\t            console.log(\"tuna.js: Missing audio context! Creating a new context for you.\");\n\t            context = window.AudioContext && (new window.AudioContext());\n\t        }\n\t        if (!context) {\n\t            throw new Error(\"Tuna cannot initialize because this environment does not support web audio.\");\n\t        }\n\t        connectify(context);\n\t        userContext = context;\n\t        userInstance = this;\n\t    }\n\t\n\t    function connectify(context) {\n\t        if (context.__connectified__ === true) return;\n\t\n\t        var gain = context.createGain(),\n\t            proto = Object.getPrototypeOf(Object.getPrototypeOf(gain)),\n\t            oconnect = proto.connect;\n\t\n\t        proto.connect = shimConnect;\n\t        context.__connectified__ = true; // Prevent overriding connect more than once\n\t\n\t        function shimConnect() {\n\t            var node = Array.prototype.shift.apply(arguments);\n\t            node = Super.isPrototypeOf ? (Super.isPrototypeOf(node) ? node.input : node) : (node.input || node);\n\t            arguments = Array.prototype.slice.call(arguments);\n\t            arguments.unshift(node);\n\t            oconnect.apply(this, arguments);\n\t            return node;\n\t        }\n\t    }\n\t\n\t    function dbToWAVolume(db) {\n\t        return Math.max(0, Math.round(100 * Math.pow(2, db / 6)) / 100);\n\t    }\n\t\n\t    function fmod(x, y) {\n\t        // http://kevin.vanzonneveld.net\n\t        // *     example 1: fmod(5.7, 1.3);\n\t        // *     returns 1: 0.5\n\t        var tmp, tmp2, p = 0,\n\t            pY = 0,\n\t            l = 0.0,\n\t            l2 = 0.0;\n\t\n\t        tmp = x.toExponential().match(/^.\\.?(.*)e(.+)$/);\n\t        p = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n\t        tmp = y.toExponential().match(/^.\\.?(.*)e(.+)$/);\n\t        pY = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n\t\n\t        if (pY > p) {\n\t            p = pY;\n\t        }\n\t\n\t        tmp2 = (x % y);\n\t\n\t        if (p < -100 || p > 20) {\n\t            // toFixed will give an out of bound error so we fix it like this:\n\t            l = Math.round(Math.log(tmp2) / Math.log(10));\n\t            l2 = Math.pow(10, l);\n\t\n\t            return (tmp2 / l2).toFixed(l - p) * l2;\n\t        } else {\n\t            return parseFloat(tmp2.toFixed(-p));\n\t        }\n\t    }\n\t\n\t    function sign(x) {\n\t        if (x === 0) {\n\t            return 1;\n\t        } else {\n\t            return Math.abs(x) / x;\n\t        }\n\t    }\n\t\n\t    function tanh(n) {\n\t        return (Math.exp(n) - Math.exp(-n)) / (Math.exp(n) + Math.exp(-n));\n\t    }\n\t\n\t    function initValue(userVal, defaultVal) {\n\t        return userVal === undefined ? defaultVal : userVal;\n\t    }\n\t\n\t    Tuna.prototype.Bitcrusher = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;\n\t\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.processor);\n\t        this.processor.connect(this.output);\n\t\n\t        var phaser = 0,\n\t            last = 0,\n\t            input, output, step, i, length;\n\t        this.processor.onaudioprocess = function(e) {\n\t            input = e.inputBuffer.getChannelData(0),\n\t            output = e.outputBuffer.getChannelData(0),\n\t            step = Math.pow(1 / 2, this.bits);\n\t            length = input.length;\n\t            for (i = 0; i < length; i++) {\n\t                phaser += this.normfreq;\n\t                if (phaser >= 1.0) {\n\t                    phaser -= 1.0;\n\t                    last = step * Math.floor(input[i] / step + 0.5);\n\t                }\n\t                output[i] = last;\n\t            }\n\t        };\n\t\n\t        this.bits = properties.bits || this.defaults.bits.value;\n\t        this.normfreq = initValue(properties.normfreq, this.defaults.normfreq.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Bitcrusher.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Bitcrusher\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                bits: {\n\t                    value: 4,\n\t                    min: 1,\n\t                    max: 16,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                bufferSize: {\n\t                    value: 4096,\n\t                    min: 256,\n\t                    max: 16384,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                bypass: {\n\t                    value: true,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                normfreq: {\n\t                    value: 0.1,\n\t                    min: 0.0001,\n\t                    max: 1.0,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        bits: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.processor.bits;\n\t            },\n\t            set: function(value) {\n\t                this.processor.bits = value;\n\t            }\n\t        },\n\t        normfreq: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.processor.normfreq;\n\t            },\n\t            set: function(value) {\n\t                this.processor.normfreq = value;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Cabinet = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.convolver = this.newConvolver(properties.impulsePath ||\n\t            \"../impulses/impulse_guitar.wav\");\n\t        this.makeupNode = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.convolver.input);\n\t        this.convolver.output.connect(this.makeupNode);\n\t        this.makeupNode.connect(this.output);\n\t\n\t        this.makeupGain = initValue(properties.makeupGain, this.defaults\n\t            .makeupGain);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Cabinet.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Cabinet\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                makeupGain: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 20,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                bypass: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                }\n\t            }\n\t        },\n\t        makeupGain: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.makeupNode.gain;\n\t            },\n\t            set: function(value) {\n\t                this.makeupNode.gain.value = value;\n\t            }\n\t        },\n\t        newConvolver: {\n\t            value: function(impulsePath) {\n\t                return new userInstance.Convolver({\n\t                    impulse: impulsePath,\n\t                    dryLevel: 0,\n\t                    wetLevel: 1\n\t                });\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Chorus = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.attenuator = this.activateNode = userContext.createGain();\n\t        this.splitter = userContext.createChannelSplitter(2);\n\t        this.delayL = userContext.createDelay();\n\t        this.delayR = userContext.createDelay();\n\t        this.feedbackGainNodeLR = userContext.createGain();\n\t        this.feedbackGainNodeRL = userContext.createGain();\n\t        this.merger = userContext.createChannelMerger(2);\n\t        this.output = userContext.createGain();\n\t\n\t        this.lfoL = new userInstance.LFO({\n\t            target: this.delayL.delayTime,\n\t            callback: pipe\n\t        });\n\t        this.lfoR = new userInstance.LFO({\n\t            target: this.delayR.delayTime,\n\t            callback: pipe\n\t        });\n\t\n\t        this.input.connect(this.attenuator);\n\t        this.attenuator.connect(this.output);\n\t        this.attenuator.connect(this.splitter);\n\t        this.splitter.connect(this.delayL, 0);\n\t        this.splitter.connect(this.delayR, 1);\n\t        this.delayL.connect(this.feedbackGainNodeLR);\n\t        this.delayR.connect(this.feedbackGainNodeRL);\n\t        this.feedbackGainNodeLR.connect(this.delayR);\n\t        this.feedbackGainNodeRL.connect(this.delayL);\n\t        this.delayL.connect(this.merger, 0, 0);\n\t        this.delayR.connect(this.merger, 0, 1);\n\t        this.merger.connect(this.output);\n\t\n\t        this.feedback = initValue(properties.feedback, this.defaults.feedback\n\t            .value);\n\t        this.rate = initValue(properties.rate, this.defaults.rate.value);\n\t        this.delay = initValue(properties.delay, this.defaults.delay.value);\n\t        this.depth = initValue(properties.depth, this.defaults.depth.value);\n\t        this.lfoR.phase = Math.PI / 2;\n\t        this.attenuator.gain.value = 0.6934; // 1 / (10 ^ (((20 * log10(3)) / 3) / 20))\n\t        this.lfoL.activate(true);\n\t        this.lfoR.activate(true);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Chorus.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Chorus\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                feedback: {\n\t                    value: 0.4,\n\t                    min: 0,\n\t                    max: 0.95,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                delay: {\n\t                    value: 0.0045,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                depth: {\n\t                    value: 0.7,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                rate: {\n\t                    value: 1.5,\n\t                    min: 0,\n\t                    max: 8,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                bypass: {\n\t                    value: true,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                }\n\t            }\n\t        },\n\t        delay: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._delay;\n\t            },\n\t            set: function(value) {\n\t                this._delay = 0.0002 * (Math.pow(10, value) * 2);\n\t                this.lfoL.offset = this._delay;\n\t                this.lfoR.offset = this._delay;\n\t                this._depth = this._depth;\n\t            }\n\t        },\n\t        depth: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._depth;\n\t            },\n\t            set: function(value) {\n\t                this._depth = value;\n\t                this.lfoL.oscillation = this._depth * this._delay;\n\t                this.lfoR.oscillation = this._depth * this._delay;\n\t            }\n\t        },\n\t        feedback: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._feedback;\n\t            },\n\t            set: function(value) {\n\t                this._feedback = value;\n\t                this.feedbackGainNodeLR.gain.value = this._feedback;\n\t                this.feedbackGainNodeRL.gain.value = this._feedback;\n\t            }\n\t        },\n\t        rate: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._rate;\n\t            },\n\t            set: function(value) {\n\t                this._rate = value;\n\t                this.lfoL.frequency = this._rate;\n\t                this.lfoR.frequency = this._rate;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Compressor = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.compNode = this.activateNode = userContext.createDynamicsCompressor();\n\t        this.makeupNode = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.compNode.connect(this.makeupNode);\n\t        this.makeupNode.connect(this.output);\n\t\n\t        this.automakeup = initValue(properties.automakeup, this.defaults\n\t            .automakeup\n\t            .value);\n\t        this.makeupGain = properties.makeupGain || this.defaults.makeupGain\n\t            .value;\n\t        this.threshold = initValue(properties.threshold, this.defaults.threshold\n\t            .value);\n\t        this.release = properties.release || this.defaults.release.value;\n\t        this.attack = initValue(properties.attack, this.defaults.attack\n\t            .value);\n\t        this.ratio = properties.ratio || this.defaults.ratio.value;\n\t        this.knee = initValue(properties.knee, this.defaults.knee.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Compressor.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Compressor\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                threshold: {\n\t                    value: -20,\n\t                    min: -60,\n\t                    max: 0,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                release: {\n\t                    value: 250,\n\t                    min: 10,\n\t                    max: 2000,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                makeupGain: {\n\t                    value: 1,\n\t                    min: 1,\n\t                    max: 100,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                attack: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1000,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                ratio: {\n\t                    value: 4,\n\t                    min: 1,\n\t                    max: 50,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                knee: {\n\t                    value: 5,\n\t                    min: 0,\n\t                    max: 40,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                automakeup: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                bypass: {\n\t                    value: true,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                }\n\t            }\n\t        },\n\t        computeMakeup: {\n\t            value: function() {\n\t                var magicCoefficient = 4,\n\t                    // raise me if the output is too hot\n\t                    c = this.compNode;\n\t                return -(c.threshold.value - c.threshold.value /\n\t                        c.ratio.value) /\n\t                    magicCoefficient;\n\t            }\n\t        },\n\t        automakeup: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._automakeup;\n\t            },\n\t            set: function(value) {\n\t                this._automakeup = value;\n\t                if (this._automakeup) this.makeupGain = this.computeMakeup();\n\t            }\n\t        },\n\t        threshold: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.threshold;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.threshold.value = value;\n\t                if (this._automakeup) this.makeupGain = this.computeMakeup();\n\t            }\n\t        },\n\t        ratio: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.ratio;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.ratio.value = value;\n\t                if (this._automakeup) this.makeupGain = this.computeMakeup();\n\t            }\n\t        },\n\t        knee: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.knee;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.knee.value = value;\n\t                if (this._automakeup) this.makeupGain = this.computeMakeup();\n\t            }\n\t        },\n\t        attack: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.attack;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.attack.value = value / 1000;\n\t            }\n\t        },\n\t        release: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.compNode.release;\n\t            },\n\t            set: function(value) {\n\t                this.compNode.release = value / 1000;\n\t            }\n\t        },\n\t        makeupGain: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.makeupNode.gain;\n\t            },\n\t            set: function(value) {\n\t                this.makeupNode.gain.value = dbToWAVolume(value);\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Convolver = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.convolver = userContext.createConvolver();\n\t        this.dry = userContext.createGain();\n\t        this.filterLow = userContext.createBiquadFilter();\n\t        this.filterHigh = userContext.createBiquadFilter();\n\t        this.wet = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.filterLow);\n\t        this.activateNode.connect(this.dry);\n\t        this.filterLow.connect(this.filterHigh);\n\t        this.filterHigh.connect(this.convolver);\n\t        this.convolver.connect(this.wet);\n\t        this.wet.connect(this.output);\n\t        this.dry.connect(this.output);\n\t\n\t        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel\n\t            .value);\n\t        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel\n\t            .value);\n\t        this.highCut = properties.highCut || this.defaults.highCut.value;\n\t        this.buffer = properties.impulse ||\n\t            \"../impulses/ir_rev_short.wav\";\n\t        this.lowCut = properties.lowCut || this.defaults.lowCut.value;\n\t        this.level = initValue(properties.level, this.defaults.level.value);\n\t        this.filterHigh.type = \"lowpass\";\n\t        this.filterLow.type = \"highpass\";\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Convolver.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Convolver\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                highCut: {\n\t                    value: 22050,\n\t                    min: 20,\n\t                    max: 22050,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                lowCut: {\n\t                    value: 20,\n\t                    min: 20,\n\t                    max: 22050,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                dryLevel: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                wetLevel: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                level: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        lowCut: {\n\t            get: function() {\n\t                return this.filterLow.frequency;\n\t            },\n\t            set: function(value) {\n\t                this.filterLow.frequency.value = value;\n\t            }\n\t        },\n\t        highCut: {\n\t            get: function() {\n\t                return this.filterHigh.frequency;\n\t            },\n\t            set: function(value) {\n\t                this.filterHigh.frequency.value = value;\n\t            }\n\t        },\n\t        level: {\n\t            get: function() {\n\t                return this.output.gain;\n\t            },\n\t            set: function(value) {\n\t                this.output.gain.value = value;\n\t            }\n\t        },\n\t        dryLevel: {\n\t            get: function() {\n\t                return this.dry.gain\n\t            },\n\t            set: function(value) {\n\t                this.dry.gain.value = value;\n\t            }\n\t        },\n\t        wetLevel: {\n\t            get: function() {\n\t                return this.wet.gain;\n\t            },\n\t            set: function(value) {\n\t                this.wet.gain.value = value;\n\t            }\n\t        },\n\t        buffer: {\n\t            enumerable: false,\n\t            get: function() {\n\t                return this.convolver.buffer;\n\t            },\n\t            set: function(impulse) {\n\t                var convolver = this.convolver,\n\t                    xhr = new XMLHttpRequest();\n\t                if (!impulse) {\n\t                    console.log(\"Tuna.Convolver.setBuffer: Missing impulse path!\");\n\t                    return;\n\t                }\n\t                xhr.open(\"GET\", impulse, true);\n\t                xhr.responseType = \"arraybuffer\";\n\t                xhr.onreadystatechange = function() {\n\t                    if (xhr.readyState === 4) {\n\t                        if (xhr.status < 300 && xhr.status > 199 || xhr.status === 302) {\n\t                            userContext.decodeAudioData(xhr.response, function(buffer) {\n\t                                convolver.buffer = buffer;\n\t                            }, function(e) {\n\t                                if (e) console.log(\"Tuna.Convolver.setBuffer: Error decoding data\" + e);\n\t                            });\n\t                        }\n\t                    }\n\t                };\n\t                xhr.send(null);\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Delay = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.dry = userContext.createGain();\n\t        this.wet = userContext.createGain();\n\t        this.filter = userContext.createBiquadFilter();\n\t        this.delay = userContext.createDelay();\n\t        this.feedbackNode = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.delay);\n\t        this.activateNode.connect(this.dry);\n\t        this.delay.connect(this.filter);\n\t        this.filter.connect(this.feedbackNode);\n\t        this.feedbackNode.connect(this.delay);\n\t        this.feedbackNode.connect(this.wet);\n\t        this.wet.connect(this.output);\n\t        this.dry.connect(this.output);\n\t\n\t        this.delayTime = properties.delayTime || this.defaults.delayTime.value;\n\t        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n\t        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel.value);\n\t        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel.value);\n\t        this.cutoff = properties.cutoff || this.defaults.cutoff.value;\n\t        this.filter.type = \"lowpass\";\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Delay.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Delay\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                delayTime: {\n\t                    value: 100,\n\t                    min: 20,\n\t                    max: 1000,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                feedback: {\n\t                    value: 0.45,\n\t                    min: 0,\n\t                    max: 0.9,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                cutoff: {\n\t                    value: 20000,\n\t                    min: 20,\n\t                    max: 20000,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                wetLevel: {\n\t                    value: 0.5,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                dryLevel: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        delayTime: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.delay.delayTime;\n\t            },\n\t            set: function(value) {\n\t                this.delay.delayTime.value = value / 1000;\n\t            }\n\t        },\n\t        wetLevel: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.wet.gain;\n\t            },\n\t            set: function(value) {\n\t                this.wet.gain.value = value;\n\t            }\n\t        },\n\t        dryLevel: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.dry.gain;\n\t            },\n\t            set: function(value) {\n\t                this.dry.gain.value = value;\n\t            }\n\t        },\n\t        feedback: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.feedbackNode.gain;\n\t            },\n\t            set: function(value) {\n\t                this.feedbackNode.gain.value = value;\n\t            }\n\t        },\n\t        cutoff: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.frequency;\n\t            },\n\t            set: function(value) {\n\t                this.filter.frequency.value = value;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Filter = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.filter = userContext.createBiquadFilter();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.filter);\n\t        this.filter.connect(this.output);\n\t\n\t        this.frequency = properties.frequency || this.defaults.frequency\n\t            .value;\n\t        this.Q = properties.resonance || this.defaults.Q.value;\n\t        this.filterType = initValue(properties.filterType, this.defaults\n\t            .filterType\n\t            .value);\n\t        this.gain = initValue(properties.gain, this.defaults.gain.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Filter.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Filter\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                frequency: {\n\t                    value: 800,\n\t                    min: 20,\n\t                    max: 22050,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                Q: {\n\t                    value: 1,\n\t                    min: 0.001,\n\t                    max: 100,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                gain: {\n\t                    value: 0,\n\t                    min: -40,\n\t                    max: 40,\n\t                    automatable: true,\n\t                    type: FLOAT\n\t                },\n\t                bypass: {\n\t                    value: true,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                filterType: {\n\t                    value: \"lowpass\",\n\t                    automatable: false,\n\t                    type: STRING\n\t                }\n\t            }\n\t        },\n\t        filterType: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.type;\n\t            },\n\t            set: function(value) {\n\t                this.filter.type = value;\n\t            }\n\t        },\n\t        Q: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.Q;\n\t            },\n\t            set: function(value) {\n\t                this.filter.Q.value = value;\n\t            }\n\t        },\n\t        gain: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.gain;\n\t            },\n\t            set: function(value) {\n\t                this.filter.gain.value = value;\n\t            }\n\t        },\n\t        frequency: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.filter.frequency;\n\t            },\n\t            set: function(value) {\n\t                this.filter.frequency.value = value;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.MoogFilter = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.bufferSize = properties.bufferSize || this.defaults.bufferSize\n\t            .value;\n\t\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.processor = userContext.createScriptProcessor(this.bufferSize,\n\t            1,\n\t            1);\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.processor);\n\t        this.processor.connect(this.output);\n\t\n\t        var in1, in2, in3, in4, out1, out2, out3, out4;\n\t        in1 = in2 = in3 = in4 = out1 = out2 = out3 = out4 = 0.0;\n\t        var input, output, f, fb, i, length;\n\t        this.processor.onaudioprocess = function(e) {\n\t            input = e.inputBuffer.getChannelData(0),\n\t                output = e.outputBuffer.getChannelData(0),\n\t                f = this.cutoff * 1.16,\n\t                inputFactor = 0.35013 * (f * f) * (f * f);\n\t            fb = this.resonance * (1.0 - 0.15 * f * f);\n\t            length = input.length;\n\t            for (i = 0; i < length; i++) {\n\t                input[i] -= out4 * fb;\n\t                input[i] *= inputFactor;\n\t                out1 = input[i] + 0.3 * in1 + (1 - f) * out1; // Pole 1\n\t                in1 = input[i];\n\t                out2 = out1 + 0.3 * in2 + (1 - f) * out2; // Pole 2\n\t                in2 = out1;\n\t                out3 = out2 + 0.3 * in3 + (1 - f) * out3; // Pole 3\n\t                in3 = out2;\n\t                out4 = out3 + 0.3 * in4 + (1 - f) * out4; // Pole 4\n\t                in4 = out3;\n\t                output[i] = out4;\n\t            }\n\t        };\n\t\n\t        this.cutoff = initValue(properties.cutoff, this.defaults.cutoff\n\t            .value);\n\t        this.resonance = initValue(properties.resonance, this.defaults.resonance\n\t            .value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.MoogFilter.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"MoogFilter\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                bufferSize: {\n\t                    value: 4096,\n\t                    min: 256,\n\t                    max: 16384,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                bypass: {\n\t                    value: false,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                cutoff: {\n\t                    value: 0.065,\n\t                    min: 0.0001,\n\t                    max: 1.0,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                resonance: {\n\t                    value: 3.5,\n\t                    min: 0.0,\n\t                    max: 4.0,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        cutoff: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.processor.cutoff;\n\t            },\n\t            set: function(value) {\n\t                this.processor.cutoff = value;\n\t            }\n\t        },\n\t        resonance: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this.processor.resonance;\n\t            },\n\t            set: function(value) {\n\t                this.processor.resonance = value;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Overdrive = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.inputDrive = userContext.createGain();\n\t        this.waveshaper = userContext.createWaveShaper();\n\t        this.outputDrive = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t\n\t        this.activateNode.connect(this.inputDrive);\n\t        this.inputDrive.connect(this.waveshaper);\n\t        this.waveshaper.connect(this.outputDrive);\n\t        this.outputDrive.connect(this.output);\n\t\n\t        this.ws_table = new Float32Array(this.k_nSamples);\n\t        this.drive = initValue(properties.drive, this.defaults.drive.value);\n\t        this.outputGain = initValue(properties.outputGain, this.defaults\n\t            .outputGain\n\t            .value);\n\t        this.curveAmount = initValue(properties.curveAmount, this.defaults\n\t            .curveAmount\n\t            .value);\n\t        this.algorithmIndex = initValue(properties.algorithmIndex, this\n\t            .defaults\n\t            .algorithmIndex.value);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Overdrive.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Overdrive\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                drive: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT,\n\t                    scaled: true\n\t                },\n\t                outputGain: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: true,\n\t                    type: FLOAT,\n\t                    scaled: true\n\t                },\n\t                curveAmount: {\n\t                    value: 0.725,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                algorithmIndex: {\n\t                    value: 0,\n\t                    min: 0,\n\t                    max: 5,\n\t                    automatable: false,\n\t                    type: INT\n\t                }\n\t            }\n\t        },\n\t        k_nSamples: {\n\t            value: 8192\n\t        },\n\t        drive: {\n\t            get: function() {\n\t                return this.inputDrive.gain;\n\t            },\n\t            set: function(value) {\n\t                this._drive = value;\n\t            }\n\t        },\n\t        curveAmount: {\n\t            get: function() {\n\t                return this._curveAmount;\n\t            },\n\t            set: function(value) {\n\t                this._curveAmount = value;\n\t                if (this._algorithmIndex === undefined) {\n\t                    this._algorithmIndex = 0;\n\t                }\n\t                this.waveshaperAlgorithms[this._algorithmIndex]\n\t                    (this._curveAmount,\n\t                        this.k_nSamples, this.ws_table);\n\t                this.waveshaper.curve = this.ws_table;\n\t            }\n\t        },\n\t        outputGain: {\n\t            get: function() {\n\t                return this.outputDrive.gain;\n\t            },\n\t            set: function(value) {\n\t                this._outputGain = dbToWAVolume(value);\n\t            }\n\t        },\n\t        algorithmIndex: {\n\t            get: function() {\n\t                return this._algorithmIndex;\n\t            },\n\t            set: function(value) {\n\t                this._algorithmIndex = value;\n\t                this.curveAmount = this._curveAmount;\n\t            }\n\t        },\n\t        waveshaperAlgorithms: {\n\t            value: [\n\t                function(amount, n_samples, ws_table) {\n\t                    amount = Math.min(amount, 0.9999);\n\t                    var k = 2 * amount / (1 - amount),\n\t                        i, x;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        ws_table[i] = (1 + k) * x / (1 + k * Math.abs(x));\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) {\n\t                    var i, x, y;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        y = ((0.5 * Math.pow((x + 1.4), 2)) - 1) * y >= 0 ? 5.8 : 1.2;\n\t                        ws_table[i] = tanh(y);\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) {\n\t                    var i, x, y, a = 1 - amount;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        y = x < 0 ? -Math.pow(Math.abs(x), a + 0.04) : Math.pow(x, a);\n\t                        ws_table[i] = tanh(y * 2);\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) {\n\t                    var i, x, y, abx, a = 1 - amount > 0.99 ? 0.99 : 1 - amount;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        abx = Math.abs(x);\n\t                        if (abx < a) y = abx;\n\t                        else if (abx > a) y = a + (abx - a) / (1 + Math.pow((abx - a) / (1 - a), 2));\n\t                        else if (abx > 1) y = abx;\n\t                        ws_table[i] = sign(x) * y * (1 / ((a + 1) / 2));\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) { // fixed curve, amount doesn't do anything, the distortion is just from the drive\n\t                    var i, x;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        if (x < -0.08905) {\n\t                            ws_table[i] = (-3 / 4) * (1 - (Math.pow((1 - (Math.abs(x) - 0.032857)), 12)) + (1 / 3) * (Math.abs(x) -\n\t                                0.032847)) + 0.01;\n\t                        } else if (x >= -0.08905 && x < 0.320018) {\n\t                            ws_table[i] = (-6.153 * (x * x)) + 3.9375 * x;\n\t                        } else {\n\t                            ws_table[i] = 0.630035;\n\t                        }\n\t                    }\n\t                },\n\t                function(amount, n_samples, ws_table) {\n\t                    var a = 2 + Math.round(amount * 14),\n\t                        // we go from 2 to 16 bits, keep in mind for the UI\n\t                        bits = Math.round(Math.pow(2, a - 1)),\n\t                        // real number of quantization steps divided by 2\n\t                        i, x;\n\t                    for (i = 0; i < n_samples; i++) {\n\t                        x = i * 2 / n_samples - 1;\n\t                        ws_table[i] = Math.round(x * bits) / bits;\n\t                    }\n\t                }\n\t            ]\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Phaser = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.splitter = this.activateNode = userContext.createChannelSplitter(2);\n\t        this.filtersL = [];\n\t        this.filtersR = [];\n\t        this.feedbackGainNodeL = userContext.createGain();\n\t        this.feedbackGainNodeR = userContext.createGain();\n\t        this.merger = userContext.createChannelMerger(2);\n\t        this.filteredSignal = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t        this.lfoL = new userInstance.LFO({\n\t            target: this.filtersL,\n\t            callback: this.callback\n\t        });\n\t        this.lfoR = new userInstance.LFO({\n\t            target: this.filtersR,\n\t            callback: this.callback\n\t        });\n\t\n\t        var i = this.stage;\n\t        while (i--) {\n\t            this.filtersL[i] = userContext.createBiquadFilter();\n\t            this.filtersR[i] = userContext.createBiquadFilter();\n\t            this.filtersL[i].type = \"allpass\";\n\t            this.filtersR[i].type = \"allpass\";\n\t        }\n\t        this.input.connect(this.splitter);\n\t        this.input.connect(this.output);\n\t        this.splitter.connect(this.filtersL[0], 0, 0);\n\t        this.splitter.connect(this.filtersR[0], 1, 0);\n\t        this.connectInOrder(this.filtersL);\n\t        this.connectInOrder(this.filtersR);\n\t        this.filtersL[this.stage - 1].connect(this.feedbackGainNodeL);\n\t        this.filtersL[this.stage - 1].connect(this.merger, 0, 0);\n\t        this.filtersR[this.stage - 1].connect(this.feedbackGainNodeR);\n\t        this.filtersR[this.stage - 1].connect(this.merger, 0, 1);\n\t        this.feedbackGainNodeL.connect(this.filtersL[0]);\n\t        this.feedbackGainNodeR.connect(this.filtersR[0]);\n\t        this.merger.connect(this.output);\n\t\n\t        this.rate = initValue(properties.rate, this.defaults.rate.value);\n\t        this.baseModulationFrequency = properties.baseModulationFrequency || this.defaults.baseModulationFrequency.value;\n\t        this.depth = initValue(properties.depth, this.defaults.depth.value);\n\t        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n\t        this.stereoPhase = initValue(properties.stereoPhase, this.defaults.stereoPhase.value);\n\t\n\t        this.lfoL.activate(true);\n\t        this.lfoR.activate(true);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Phaser.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Phaser\"\n\t        },\n\t        stage: {\n\t            value: 4\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                rate: {\n\t                    value: 0.1,\n\t                    min: 0,\n\t                    max: 8,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                depth: {\n\t                    value: 0.6,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                feedback: {\n\t                    value: 0.7,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                stereoPhase: {\n\t                    value: 40,\n\t                    min: 0,\n\t                    max: 180,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                baseModulationFrequency: {\n\t                    value: 700,\n\t                    min: 500,\n\t                    max: 1500,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        callback: {\n\t            value: function(filters, value) {\n\t                for (var stage = 0; stage < 4; stage++) {\n\t                    filters[stage].frequency.value = value;\n\t                }\n\t            }\n\t        },\n\t        depth: {\n\t            get: function() {\n\t                return this._depth;\n\t            },\n\t            set: function(value) {\n\t                this._depth = value;\n\t                this.lfoL.oscillation = this._baseModulationFrequency * this._depth;\n\t                this.lfoR.oscillation = this._baseModulationFrequency * this._depth;\n\t            }\n\t        },\n\t        rate: {\n\t            get: function() {\n\t                return this._rate;\n\t            },\n\t            set: function(value) {\n\t                this._rate = value;\n\t                this.lfoL.frequency = this._rate;\n\t                this.lfoR.frequency = this._rate;\n\t            }\n\t        },\n\t        baseModulationFrequency: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._baseModulationFrequency;\n\t            },\n\t            set: function(value) {\n\t                this._baseModulationFrequency = value;\n\t                this.lfoL.offset = this._baseModulationFrequency;\n\t                this.lfoR.offset = this._baseModulationFrequency;\n\t                this._depth = this._depth;\n\t            }\n\t        },\n\t        feedback: {\n\t            get: function() {\n\t                return this._feedback;\n\t            },\n\t            set: function(value) {\n\t                this._feedback = value;\n\t                this.feedbackGainNodeL.gain.value = this._feedback;\n\t                this.feedbackGainNodeR.gain.value = this._feedback;\n\t            }\n\t        },\n\t        stereoPhase: {\n\t            get: function() {\n\t                return this._stereoPhase;\n\t            },\n\t            set: function(value) {\n\t                this._stereoPhase = value;\n\t                var newPhase = this.lfoL._phase + this._stereoPhase *\n\t                    Math.PI /\n\t                    180;\n\t                newPhase = fmod(newPhase, 2 * Math.PI);\n\t                this.lfoR._phase = newPhase;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.PingPongDelay = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.wetLevel = userContext.createGain();\n\t        this.stereoToMonoMix = userContext.createGain();\n\t        this.feedbackLevel = userContext.createGain();\n\t        this.output = userContext.createGain();\n\t        this.delayLeft = userContext.createDelay();\n\t        this.delayRight = userContext.createDelay();\n\t\n\t        this.activateNode = userContext.createGain();\n\t        this.splitter = userContext.createChannelSplitter(2);\n\t        this.merger = userContext.createChannelMerger(2);\n\t\n\t        this.activateNode.connect(this.splitter);\n\t        this.splitter.connect(this.stereoToMonoMix, 0, 0);\n\t        this.splitter.connect(this.stereoToMonoMix, 1, 0);\n\t        this.stereoToMonoMix.gain.value = .5;\n\t        this.stereoToMonoMix.connect(this.wetLevel);\n\t        this.wetLevel.connect(this.delayLeft);\n\t        this.feedbackLevel.connect(this.delayLeft);\n\t        this.delayLeft.connect(this.delayRight);\n\t        this.delayRight.connect(this.feedbackLevel);\n\t        this.delayLeft.connect(this.merger, 0, 0);\n\t        this.delayRight.connect(this.merger, 0, 1);\n\t        this.merger.connect(this.output);\n\t        this.activateNode.connect(this.output);\n\t\n\t        this.delayTimeLeft = properties.delayTimeLeft !== undefined ? properties.delayTimeLeft : this.defaults.delayTimeLeft.value;\n\t        this.delayTimeRight = properties.delayTimeRight !== undefined ? properties.delayTimeRight : this.defaults.delayTimeRight.value;\n\t        this.feedbackLevel.gain.value = properties.feedback !== undefined ? properties.feedback : this.defaults.feedback.value;\n\t        this.wetLevel.gain.value = properties.wetLevel !== undefined ? properties.wetLevel : this.defaults.wetLevel.value;\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.PingPongDelay.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"PingPongDelay\"\n\t        },\n\t        delayTimeLeft: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._delayTimeLeft;\n\t            },\n\t            set: function(value) {\n\t                this._delayTimeLeft = value;\n\t                this.delayLeft.delayTime.value = value / 1000;\n\t            }\n\t        },\n\t        delayTimeRight: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._delayTimeRight;\n\t            },\n\t            set: function(value) {\n\t                this._delayTimeRight = value;\n\t                this.delayRight.delayTime.value = value / 1000;\n\t            }\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                delayTimeLeft: {\n\t                    value: 200,\n\t                    min: 1,\n\t                    max: 10000,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                delayTimeRight: {\n\t                    value: 400,\n\t                    min: 1,\n\t                    max: 10000,\n\t                    automatable: false,\n\t                    type: INT\n\t                },\n\t                feedback: {\n\t                    value: 0.3,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                wetLevel: {\n\t                    value: 0.5,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.Tremolo = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.splitter = this.activateNode = userContext.createChannelSplitter(\n\t                2),\n\t            this.amplitudeL = userContext.createGain(), this.amplitudeR =\n\t            userContext.createGain(), this.merger = userContext.createChannelMerger(\n\t                2), this.output = userContext.createGain();\n\t        this.lfoL = new userInstance.LFO({\n\t            target: this.amplitudeL.gain,\n\t            callback: pipe\n\t        });\n\t        this.lfoR = new userInstance.LFO({\n\t            target: this.amplitudeR.gain,\n\t            callback: pipe\n\t        });\n\t\n\t        this.input.connect(this.splitter);\n\t        this.splitter.connect(this.amplitudeL, 0);\n\t        this.splitter.connect(this.amplitudeR, 1);\n\t        this.amplitudeL.connect(this.merger, 0, 0);\n\t        this.amplitudeR.connect(this.merger, 0, 1);\n\t        this.merger.connect(this.output);\n\t\n\t        this.rate = properties.rate || this.defaults.rate.value;\n\t        this.intensity = initValue(properties.intensity, this.defaults.intensity\n\t            .value);\n\t        this.stereoPhase = initValue(properties.stereoPhase, this.defaults\n\t            .stereoPhase\n\t            .value);\n\t\n\t        this.lfoL.offset = 1 - (this.intensity / 2);\n\t        this.lfoR.offset = 1 - (this.intensity / 2);\n\t        this.lfoL.phase = this.stereoPhase * Math.PI / 180;\n\t\n\t        this.lfoL.activate(true);\n\t        this.lfoR.activate(true);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.Tremolo.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"Tremolo\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                intensity: {\n\t                    value: 0.3,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                stereoPhase: {\n\t                    value: 0,\n\t                    min: 0,\n\t                    max: 180,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                rate: {\n\t                    value: 5,\n\t                    min: 0.1,\n\t                    max: 11,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        intensity: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._intensity;\n\t            },\n\t            set: function(value) {\n\t                this._intensity = value;\n\t                this.lfoL.offset = 1 - this._intensity / 2;\n\t                this.lfoR.offset = 1 - this._intensity / 2;\n\t                this.lfoL.oscillation = this._intensity;\n\t                this.lfoR.oscillation = this._intensity;\n\t            }\n\t        },\n\t        rate: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._rate;\n\t            },\n\t            set: function(value) {\n\t                this._rate = value;\n\t                this.lfoL.frequency = this._rate;\n\t                this.lfoR.frequency = this._rate;\n\t            }\n\t        },\n\t        stereoPhase: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._rate;\n\t            },\n\t            set: function(value) {\n\t                this._stereoPhase = value;\n\t                var newPhase = this.lfoL._phase + this._stereoPhase *\n\t                    Math.PI /\n\t                    180;\n\t                newPhase = fmod(newPhase, 2 * Math.PI);\n\t                this.lfoR.phase = newPhase;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.WahWah = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.activateNode = userContext.createGain();\n\t        this.envelopeFollower = new userInstance.EnvelopeFollower({\n\t            target: this,\n\t            callback: function(context, value) {\n\t                context.sweep = value;\n\t            }\n\t        });\n\t        this.filterBp = userContext.createBiquadFilter();\n\t        this.filterPeaking = userContext.createBiquadFilter();\n\t        this.output = userContext.createGain();\n\t\n\t        //Connect AudioNodes\n\t        this.activateNode.connect(this.filterBp);\n\t        this.filterBp.connect(this.filterPeaking);\n\t        this.filterPeaking.connect(this.output);\n\t\n\t        //Set Properties\n\t        this.init();\n\t        this.automode = initValue(properties.enableAutoMode, this.defaults\n\t            .automode\n\t            .value);\n\t        this.resonance = properties.resonance || this.defaults.resonance\n\t            .value;\n\t        this.sensitivity = initValue(properties.sensitivity, this.defaults\n\t            .sensitivity\n\t            .value);\n\t        this.baseFrequency = initValue(properties.baseFrequency, this.defaults\n\t            .baseFrequency\n\t            .value);\n\t        this.excursionOctaves = properties.excursionOctaves || this.defaults\n\t            .excursionOctaves\n\t            .value;\n\t        this.sweep = initValue(properties.sweep, this.defaults.sweep.value);\n\t\n\t        this.activateNode.gain.value = 2;\n\t        this.envelopeFollower.activate(true);\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.WahWah.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"WahWah\"\n\t        },\n\t        defaults: {\n\t            writable: true,\n\t            value: {\n\t                automode: {\n\t                    value: true,\n\t                    automatable: false,\n\t                    type: BOOLEAN\n\t                },\n\t                baseFrequency: {\n\t                    value: 0.5,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                excursionOctaves: {\n\t                    value: 2,\n\t                    min: 1,\n\t                    max: 6,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                sweep: {\n\t                    value: 0.2,\n\t                    min: 0,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                resonance: {\n\t                    value: 10,\n\t                    min: 1,\n\t                    max: 100,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                sensitivity: {\n\t                    value: 0.5,\n\t                    min: -1,\n\t                    max: 1,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        activateCallback: {\n\t            value: function(value) {\n\t                this.automode = value;\n\t            }\n\t        },\n\t        automode: {\n\t            get: function() {\n\t                return this._automode;\n\t            },\n\t            set: function(value) {\n\t                this._automode = value;\n\t                if (value) {\n\t                    this.activateNode.connect(this.envelopeFollower.input);\n\t                    this.envelopeFollower.activate(true);\n\t                } else {\n\t                    this.envelopeFollower.activate(false);\n\t                    this.activateNode.disconnect();\n\t                    this.activateNode.connect(this.filterBp);\n\t                }\n\t            }\n\t        },\n\t        filterFreqTimeout: {\n\t            value: 0\n\t        },\n\t        setFilterFreq: {\n\t            value: function() {\n\t                try {\n\t                    this.filterBp.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n\t                    this.filterPeaking.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n\t                } catch (e) {\n\t                    clearTimeout(this.filterFreqTimeout);\n\t                    //put on the next cycle to let all init properties be set\n\t                    this.filterFreqTimeout = setTimeout(function() {\n\t                        this.setFilterFreq();\n\t                    }.bind(this), 0);\n\t                }\n\t            }\n\t        },\n\t        sweep: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._sweep.value;\n\t            },\n\t            set: function(value) {\n\t                this._sweep = Math.pow(value > 1 ? 1 : value <\n\t                    0 ? 0 :\n\t                    value,\n\t                    this._sensitivity);\n\t                this.setFilterFreq();\n\t            }\n\t        },\n\t        baseFrequency: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._baseFrequency;\n\t            },\n\t            set: function(value) {\n\t                this._baseFrequency = 50 * Math.pow(10, value *\n\t                    2);\n\t                this._excursionFrequency = Math.min(userContext\n\t                    .sampleRate /\n\t                    2,\n\t                    this.baseFrequency * Math.pow(2, this._excursionOctaves)\n\t                );\n\t                this.setFilterFreq();\n\t            }\n\t        },\n\t        excursionOctaves: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._excursionOctaves;\n\t            },\n\t            set: function(value) {\n\t                this._excursionOctaves = value;\n\t                this._excursionFrequency = Math.min(userContext\n\t                    .sampleRate /\n\t                    2,\n\t                    this.baseFrequency * Math.pow(2, this._excursionOctaves)\n\t                );\n\t                this.setFilterFreq();\n\t            }\n\t        },\n\t        sensitivity: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._sensitivity;\n\t            },\n\t            set: function(value) {\n\t                this._sensitivity = Math.pow(10, value);\n\t            }\n\t        },\n\t        resonance: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._resonance;\n\t            },\n\t            set: function(value) {\n\t                this._resonance = value;\n\t                this.filterPeaking.Q = this._resonance;\n\t            }\n\t        },\n\t        init: {\n\t            value: function() {\n\t                this.output.gain.value = 1;\n\t                this.filterPeaking.type = \"peaking\";\n\t                this.filterBp.type = \"bandpass\";\n\t                this.filterPeaking.frequency.value = 100;\n\t                this.filterPeaking.gain.value = 20;\n\t                this.filterPeaking.Q.value = 5;\n\t                this.filterBp.frequency.value = 100;\n\t                this.filterBp.Q.value = 1;\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.EnvelopeFollower = function(properties) {\n\t        if (!properties) {\n\t            properties = this.getDefaults();\n\t        }\n\t        this.input = userContext.createGain();\n\t        this.jsNode = this.output = userContext.createScriptProcessor(\n\t            this.buffersize,\n\t            1, 1);\n\t\n\t        this.input.connect(this.output);\n\t\n\t        this.attackTime = initValue(properties.attackTime, this.defaults\n\t            .attackTime\n\t            .value);\n\t        this.releaseTime = initValue(properties.releaseTime, this.defaults\n\t            .releaseTime\n\t            .value);\n\t        this._envelope = 0;\n\t        this.target = properties.target || {};\n\t        this.callback = properties.callback || function() {};\n\t    };\n\t    Tuna.prototype.EnvelopeFollower.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"EnvelopeFollower\"\n\t        },\n\t        defaults: {\n\t            value: {\n\t                attackTime: {\n\t                    value: 0.003,\n\t                    min: 0,\n\t                    max: 0.5,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                releaseTime: {\n\t                    value: 0.5,\n\t                    min: 0,\n\t                    max: 0.5,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        buffersize: {\n\t            value: 256\n\t        },\n\t        envelope: {\n\t            value: 0\n\t        },\n\t        sampleRate: {\n\t            value: 44100\n\t        },\n\t        attackTime: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._attackTime;\n\t            },\n\t            set: function(value) {\n\t                this._attackTime = value;\n\t                this._attackC = Math.exp(-1 / this._attackTime *\n\t                    this.sampleRate /\n\t                    this.buffersize);\n\t            }\n\t        },\n\t        releaseTime: {\n\t            enumerable: true,\n\t            get: function() {\n\t                return this._releaseTime;\n\t            },\n\t            set: function(value) {\n\t                this._releaseTime = value;\n\t                this._releaseC = Math.exp(-1 / this._releaseTime *\n\t                    this.sampleRate /\n\t                    this.buffersize);\n\t            }\n\t        },\n\t        callback: {\n\t            get: function() {\n\t                return this._callback;\n\t            },\n\t            set: function(value) {\n\t                if (typeof value === \"function\") {\n\t                    this._callback = value;\n\t                } else {\n\t                    console.error(\"tuna.js: \" + this.name +\n\t                        \": Callback must be a function!\");\n\t                }\n\t            }\n\t        },\n\t        target: {\n\t            get: function() {\n\t                return this._target;\n\t            },\n\t            set: function(value) {\n\t                this._target = value;\n\t            }\n\t        },\n\t        activate: {\n\t            value: function(doActivate) {\n\t                this.activated = doActivate;\n\t                if (doActivate) {\n\t                    this.jsNode.connect(userContext.destination);\n\t                    this.jsNode.onaudioprocess = this.returnCompute(\n\t                        this);\n\t                } else {\n\t                    this.jsNode.disconnect();\n\t                    this.jsNode.onaudioprocess = null;\n\t                }\n\t            }\n\t        },\n\t        returnCompute: {\n\t            value: function(instance) {\n\t                return function(event) {\n\t                    instance.compute(event);\n\t                };\n\t            }\n\t        },\n\t        compute: {\n\t            value: function(event) {\n\t                var count = event.inputBuffer.getChannelData(0)\n\t                    .length,\n\t                    channels = event.inputBuffer.numberOfChannels,\n\t                    current, chan, rms, i;\n\t                chan = rms = i = 0;\n\t                if (channels > 1) { //need to mixdown\n\t                    for (i = 0; i < count; ++i) {\n\t                        for (; chan < channels; ++chan) {\n\t                            current = event.inputBuffer.getChannelData(chan)[i];\n\t                            rms += (current * current) / channels;\n\t                        }\n\t                    }\n\t                } else {\n\t                    for (i = 0; i < count; ++i) {\n\t                        current = event.inputBuffer.getChannelData(0)[i];\n\t                        rms += (current * current);\n\t                    }\n\t                }\n\t                rms = Math.sqrt(rms);\n\t\n\t                if (this._envelope < rms) {\n\t                    this._envelope *= this._attackC;\n\t                    this._envelope += (1 - this._attackC) * rms;\n\t                } else {\n\t                    this._envelope *= this._releaseC;\n\t                    this._envelope += (1 - this._releaseC) *\n\t                        rms;\n\t                }\n\t                this._callback(this._target, this._envelope);\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.prototype.LFO = function(properties) {\n\t        //Instantiate AudioNode\n\t        this.output = userContext.createScriptProcessor(256, 1, 1);\n\t        this.activateNode = userContext.destination;\n\t\n\t        //Set Properties\n\t        this.frequency = initValue(properties.frequency, this.defaults.frequency\n\t            .value);\n\t        this.offset = initValue(properties.offset, this.defaults.offset.value);\n\t        this.oscillation = initValue(properties.oscillation, this.defaults\n\t            .oscillation\n\t            .value);\n\t        this.phase = initValue(properties.phase, this.defaults.phase.value);\n\t        this.target = properties.target || {};\n\t        this.output.onaudioprocess = this.callback(properties.callback ||\n\t            function() {});\n\t        this.bypass = properties.bypass || false;\n\t    };\n\t    Tuna.prototype.LFO.prototype = Object.create(Super, {\n\t        name: {\n\t            value: \"LFO\"\n\t        },\n\t        bufferSize: {\n\t            value: 256\n\t        },\n\t        sampleRate: {\n\t            value: 44100\n\t        },\n\t        defaults: {\n\t            value: {\n\t                frequency: {\n\t                    value: 1,\n\t                    min: 0,\n\t                    max: 20,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                offset: {\n\t                    value: 0.85,\n\t                    min: 0,\n\t                    max: 22049,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                oscillation: {\n\t                    value: 0.3,\n\t                    min: -22050,\n\t                    max: 22050,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                },\n\t                phase: {\n\t                    value: 0,\n\t                    min: 0,\n\t                    max: 2 * Math.PI,\n\t                    automatable: false,\n\t                    type: FLOAT\n\t                }\n\t            }\n\t        },\n\t        frequency: {\n\t            get: function() {\n\t                return this._frequency;\n\t            },\n\t            set: function(value) {\n\t                this._frequency = value;\n\t                this._phaseInc = 2 * Math.PI * this._frequency *\n\t                    this.bufferSize /\n\t                    this.sampleRate;\n\t            }\n\t        },\n\t        offset: {\n\t            get: function() {\n\t                return this._offset;\n\t            },\n\t            set: function(value) {\n\t                this._offset = value;\n\t            }\n\t        },\n\t        oscillation: {\n\t            get: function() {\n\t                return this._oscillation;\n\t            },\n\t            set: function(value) {\n\t                this._oscillation = value;\n\t            }\n\t        },\n\t        phase: {\n\t            get: function() {\n\t                return this._phase;\n\t            },\n\t            set: function(value) {\n\t                this._phase = value;\n\t            }\n\t        },\n\t        target: {\n\t            get: function() {\n\t                return this._target;\n\t            },\n\t            set: function(value) {\n\t                this._target = value;\n\t            }\n\t        },\n\t        activate: {\n\t            value: function(doActivate) {\n\t                if (!doActivate) {\n\t                    this.output.disconnect(userContext.destination);\n\t                } else {\n\t                    this.output.connect(userContext.destination);\n\t                }\n\t            }\n\t        },\n\t        callback: {\n\t            value: function(callback) {\n\t                var that = this;\n\t                return function() {\n\t                    that._phase += that._phaseInc;\n\t                    if (that._phase > 2 * Math.PI) {\n\t                        that._phase = 0;\n\t                    }\n\t                    callback(that._target, that._offset +\n\t                        that._oscillation *\n\t                        Math.sin(that._phase));\n\t                };\n\t            }\n\t        }\n\t    });\n\t\n\t    Tuna.toString = Tuna.prototype.toString = function() {\n\t        return \"Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js\";\n\t    };\n\t})(this);\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** web-synth.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9e4457b65504384d48b1\n **/","import Synth from './WebSynth'\n\nconst win = window || {};\n\n//TODO manage module.exports....etc...\n\nwin.WebSynth = Synth;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","export const TYPES = {\n    MASTER: 'Master',\n    OSCILLATOR: 'Oscillator',\n    MODULATOR: 'Modulator',\n    FILTER: 'Filter',\n    NOISE: 'Noise',\n    REVERB: 'Reverb',\n    CHORUS: 'Chorus',\n    DELAY: 'Delay',\n    ENVELOPE: 'Envelope'\n};\n\nexport const CONST = {\n    MASTER: 'master',\n    ADSR: 'adsr',\n\n    NOISE_WHITE: 'white',\n    NOISE_PINK:  'pink',\n    NOISE_BROWN: 'brown',\n\n    WAVE_SINE:   'sine',\n    WAVE_SQUARE: 'square',\n    WAVE_SAWTOOTH: 'sawtooth',\n    WAVE_TRIANLGE: 'triangle',\n    WAVE_CUSTOM: 'custom',\n\n    FILTER_LOWPASS: 'lowpass',\n    FILTER_HIGHPASS: 'highpass',\n    FILTER_BANDPASS: 'bandpass',\n    FILTER_LOWSHELF: 'lowshelf',\n    FILTER_HIGHSHELF: 'highshelf',\n    FILTER_PEAKING: 'peaking',\n    FILTER_NOTCH: 'notch',\n    FILTER_ALLPASS: 'allpass'\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/core/Constants.js\n **/","let AudioCtx = window.AudioContext || window.webkitAudioContext,\n    ctx = new AudioCtx(),\n    deprecatedFn = {\n        createGainNode: 'createGain',\n        createDelayNode: 'createDelay'\n    };\n\nfor (let f in deprecatedFn) {\n    if (typeof ctx[f] === 'function') {\n        ctx[deprecatedFn[f]] = ctx[f];\n    }\n}\n\nexport default ctx;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/AudioContext.js\n **/","import { TYPES } from '../core/Constants'\nimport Module from '../core/Module'\nimport EffectManager from './EffectManager'\n\nclass Effect extends Module {\n\n    constructor (props) {\n        super(props);\n        this.main = null;\n        this.mainEffect = null;\n    }\n\n    setMainEffect (type, mainEffect, props) {\n        //TODO set an array of main effects??\n        this.main = new EffectManager[type](props);\n        this.mainEffect = this.main[mainEffect];\n    }\n\n    createGain () {\n        return false;\n    }\n\n    getLineIn (sourceType, source) {\n        if (sourceType === TYPES.MODULATOR) {\n            return this.mainEffect[source.target];\n        } else {\n            return this.main.input;\n        }\n    }\n\n    getLineOut () {\n        return this.main.output;\n    }\n\n    getEnvelopeTarget (target) {\n        let ret = null;\n\n        if (target === 'gain') {\n            ret = this.main.output.gain;\n        } else if (this.main && this.mainEffect && this.mainEffect[target]) {\n            ret = this.main.filter[target]\n        }\n\n        return ret;\n    }\n\n}\n\nexport default Effect;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/core/Effect.js\n **/","import AudioContext from '../AudioContext'\n\nclass Module {\n\n    constructor (props) {\n        let properties = props || {};\n        this.gain = null;\n        this.envelope = null;\n        this.main = null;\n        this.link = properties.link || null;\n        this.level = +properties.level;\n\n        this.createGain(this.level);\n    }\n\n    createGain (level) {\n        let l = (level >= 0) ?  level % 101 : 100;\n        this.gain = AudioContext.createGain();\n        this.envelope = AudioContext.createGain();\n        this.gain.gain.value = l / 100;\n        this.envelope.gain.value = 1;\n\n        this.envelope.connect(this.gain);\n    }\n\n    disconnect () {\n        this.gain.disconnect();\n    }\n\n    getLineIn () {\n        return this.main;\n    }\n\n    getLineOut () {\n        return this.gain;\n    }\n\n    getEnvelopeTarget (target) {\n        let ret = null;\n\n        if (this.main && this.main[target]) {\n            ret = this.main[target];\n        } else if (target === 'gain' && this.gain) {\n            ret = this.envelope.gain;\n        }\n\n        return ret;\n    }\n}\n\nexport default Module;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/core/Module.js\n **/","import { TYPES } from '../core/Constants'\nimport Module from '../core/Module'\n\nclass SoundSource extends Module {\n\n    constructor (props) {\n        super(props);\n\n        this.defaultLineInProperty = 'frequency';\n    }\n\n    noteOn () {\n        this.main.start(0);\n    }\n\n    noteOff (release) {\n        this.main.stop(release);\n    }\n\n    getLineIn (sourceType, source) {\n        if (sourceType === TYPES.MODULATOR) {\n            return this.main[source.target];\n        } else {\n            return this.main[this.defaultLineInProperty];\n        }\n    }\n}\n\nexport default SoundSource;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/core/SoundSource.js\n **/","export {default as Master} from './Master'\nexport {default as Envelope} from './Envelope'\nexport {default as Pan} from './Pan'\n\n//SOUNDSOURCES\nexport {default as Oscillator} from './SoundSources/Oscillator'\nexport {default as Modulator} from './SoundSources/Modulator'\nexport {default as Noise} from './SoundSources/Noise'\n\n//TODO implement\n//Sampler\n\n//EFFECTS\nexport {default as Filter} from './Effects/Filter'\nexport {default as Delay} from './Effects/Delay'\nexport {default as PingPongDelay} from './Effects/PingPongDelay'\nexport {default as WahWah} from './Effects/WahWah'\nexport {default as Tremolo} from './Effects/Tremolo'\nexport {default as Overdrive} from './Effects/Overdrive'\nexport {default as Cabinet} from './Effects/Cabinet'\nexport {default as Bitcrusher} from './Effects/Bitcrusher'\nexport {default as MoogFilter} from './Effects/MoogFilter'\n\n//TODO implement\n//Convolver\n//Compressor\n//Phaser\n//Chorus\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/index.js\n **/","import * as Modules from './lib/modules'\nimport { CONST } from './lib/core/Constants'\nimport Synth from './lib/Synth'\n\nclass WebSynth {\n    constructor (props) {\n        let properties = props || {},\n            synth = new Synth(properties),\n            methods = Object.keys(Modules),\n            fx;\n\n        this.VARS = CONST;\n\n        //Synth Module Creators\n        for (let type of methods) {\n            fx = type.toLowerCase();\n            this[fx] = (label, props) => {\n                synth.module(type, label, props);\n                return this;\n            }\n        }\n\n        this.play = (note) => synth.play(note);\n        this.stop = (note) => synth.stop(note);\n    }\n}\n\nexport default WebSynth;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/WebSynth.js\n **/","import { CONST } from './core/Constants'\nimport AudioContext from './AudioContext'\nimport Voice from './core/Voice'\n\nclass Synth {\n\n    constructor (props) {\n        let properties = props || {};\n        this.modulesConfig = {};\n        this.voices = {};\n        this.spectrum = properties.spectrum || false;\n        this.updateSpectrum = properties.updateSpectrum || null;\n        this.resetSpectrum = properties.resetSpectrum || null;\n\n        this.analyser = null;\n        this.javascriptNode = null;\n\n        if (this.spectrum === true) {\n            this.createSpectrum();\n        }\n\n        this.module('Master', CONST.MASTER, {\n            level: 100\n        });\n\n        this.module('Envelope', CONST.ADSR, {\n            link:    CONST.MASTER,\n            target:  'gain',\n            level:   100,\n            attack:  null,\n            decay:   0.1,\n            sustain: 100,\n            release: 5\n        });\n\n    }\n\n    createSpectrum () {\n        var SMOOTHING = 0.8,\n            FFT_SIZE = 2048;\n\n        this.javascriptNode = AudioContext.createScriptProcessor(2048, 1, 1);\n        this.javascriptNode.connect(AudioContext.destination);\n\n        this.analyser = AudioContext.createAnalyser();\n        this.analyser.smoothingTimeConstant = SMOOTHING;\n        this.analyser.fftSize = FFT_SIZE;\n        this.analyser.minDecibels = -140;\n        this.analyser.maxDecibels = 0;\n\n        this.analyser.connect(AudioContext.destination);\n    }\n\n    module (type, label, props) {\n        if (!type || type.constructor !== String) {\n            throw new Error('Synth Module :: missing type');\n        }\n\n        if (!label || label.constructor !== String) {\n            throw new Error('Synth Module :: missing label');\n        }\n\n        if (!props || props.constructor !== Object) {\n            throw new Error('Synth Module :: missing properties');\n        }\n\n        if (!this.modulesConfig[label]) {\n            this.addModule(type, label, props);\n        }\n    }\n\n    addModule (type, label, props) {\n        this.modulesConfig[label] = {\n            type,\n            props\n        };\n    }\n\n    play (note) {\n        let frequencyData;\n\n        if (!this.voices[note]) {\n            this.voices[note] = new Voice(note, this.modulesConfig, this.analyser);\n            this.voices[note].noteOn();\n        }\n        if (this.spectrum === true && this.javascriptNode) {\n            frequencyData =  new Uint8Array(this.analyser.frequencyBinCount);\n\n            this.javascriptNode.onaudioprocess =  () => {\n                this.analyser.getByteFrequencyData(frequencyData);\n                if (this.updateSpectrum && typeof this.updateSpectrum === 'function') {\n                    this.updateSpectrum(frequencyData);\n                }\n            };\n        }\n    }\n\n    stop (note) {\n        if (this.voices[note]) {\n            this.voices[note].noteOff();\n            this.voices[note] = undefined;\n            delete this.voices[note];\n        }\n        if (\n            Object.keys(this.voices).length === 0 &&\n            this.spectrum === true &&\n            this.javascriptNode\n        ) {\n            this.javascriptNode.onaudioprocess = null;\n            if (\n                this.resetSpectrum &&\n                typeof this.resetSpectrum === 'function'\n            ) {\n                this.resetSpectrum();\n            }\n        }\n    }\n}\n\nexport default Synth;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/Synth.js\n **/","import AudioContext from '../AudioContext'\nimport Tuna from 'tunajs'\n\nlet manager = new Tuna(AudioContext);\n\nexport default manager;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/core/EffectManager.js\n **/","import AudioContext from '../AudioContext'\nimport * as Modules from '../modules'\nimport SoundSource from './SoundSource'\nimport { TYPES } from './Constants'\n\nclass Voice {\n\n    constructor (note, modulesConfig, analyser) {\n        this.note = note;\n        this.modulesConfig = modulesConfig;\n        this.modules = {};\n        this.soundSources = [];\n        this.master = null;\n        this.analyser = analyser || null;\n\n        this.setupModules();\n        this.linkModules();\n    }\n\n    setupModules () {\n        let modConf,\n            m;\n\n        Object.keys(this.modulesConfig).forEach((mod) => {\n            modConf = this.modulesConfig[mod];\n            if (modConf.type && modConf.props) {\n                m = new Modules[modConf.type](modConf.props);\n                this.modules[mod] = {\n                    type:     modConf.type,\n                    instance: m\n                };\n\n                if (m.instance instanceof SoundSource) {\n                    this.soundSources.push(m);\n                } else if (modConf.type === TYPES.MASTER) {\n                    this.master = m;\n                }\n            }\n        });\n    }\n\n    linkModules () {\n        Object.keys(this.modules).forEach((mod) => {\n            let currentModule = this.modules[mod].instance,\n                currentModuleType = this.modules[mod].type,\n                destinationModule,\n                source,\n                dest;\n\n            if (currentModule.link) {\n                destinationModule = this.modules[currentModule.link];\n                if (destinationModule && destinationModule.instance) {\n                    source = currentModule.getLineOut();\n                    dest = destinationModule.instance.getLineIn(currentModuleType, currentModule);\n                    //console.log(mod, source, currentModule.link, dest);\n                    if (source && dest) {\n                        source.connect(dest);\n                    }\n                }\n            }\n        });\n\n        this.master.lineOut(this.analyser);\n    }\n\n    noteOn () {\n        let m,\n            dest;\n\n        Object.keys(this.modules).forEach((e) => {\n            m = this.modules[e].instance;\n\n            if (typeof m.setEnvelope === 'function') {\n                dest = (this.modules[m.link]) ? this.modules[m.link].instance : null;\n                m.setEnvelope(dest);\n            }\n            if (typeof m.setNote === 'function') {\n                m.setNote(+this.note);\n            }\n        });\n        Object.keys(this.modules).forEach((e) => {\n            m = this.modules[e].instance;\n            if (typeof m.noteOn === 'function') {\n                m.noteOn();\n            }\n        });\n    }\n\n    noteOff () {\n        let release = 0,\n            adsr = this.modules.adsr.instance,\n            m,\n            dest;\n\n        release = adsr.getReleaseTime();\n\n        Object.keys(this.modules).forEach((e) => {\n            m = this.modules[e].instance;\n            if (typeof m.resetEnvelope === 'function') {\n                dest = (this.modules[m.link]) ? this.modules[m.link].instance : null;\n                m.resetEnvelope(dest);\n            }\n        });\n        Object.keys(this.modules).forEach((e) => {\n            m = this.modules[e].instance;\n            if (typeof m.noteOff === 'function') {\n                m.noteOff(release);\n            }\n        });\n    }\n\n}\n\nexport default Voice;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/core/Voice.js\n **/","import { CONST } from '../../core/Constants'\nimport Effect from '../../core/Effect'\n\nclass Bitcrusher extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n\n        this.bits = +properties.bits || 4;                  //1 to 16\n        this.normfreq =  +properties.normfreq || 0.1;       //0 to 1\n        this.bufferSize = +properties.bufferSize || 4096;  //256 to 16384\n\n        this.setMainEffect('Bitcrusher', 'output', {\n            bits: this.bits,\n            normfreq: this.normfreq,\n            bufferSize: this.bufferSize\n        });\n    }\n}\n\nexport default Bitcrusher;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Effects/Bitcrusher.js\n **/","import { CONST } from '../../core/Constants'\nimport Effect from '../../core/Effect'\n\nclass Cabinet extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n        this.makeupGain = +properties.makeupGain || 1;     //0 to 20\n        this.impulsePath = properties.impulsePath || '';  //path to your speaker impulse\n        this.bypass = +properties.bypass || 0;\n\n        this.setMainEffect('Cabinet', 'output', {\n            makeupGain: this.makeupGain,\n            impulsePath: this.impulsePath,\n            bypass: this.bypass\n        });\n    }\n}\n\nexport default Cabinet;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Effects/Cabinet.js\n **/","import { CONST } from '../../core/Constants'\nimport Effect from '../../core/Effect'\n\nclass Delay extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n\n        this.wet = +properties.wet || 0;\n        this.feedback = +properties.feedback || 0;\n        this.cutoff = +properties.cutoff || 0;\n        this.delayTime = +properties.delayTime || 0;\n        this.bypass = +properties.bypass || 0;\n\n        this.setMainEffect('Delay', 'filter', {\n            feedback: this.feedback,    //0 to 1+\n            delayTime: this.delayTime,    //how many milliseconds should the wet signal be delayed?\n            wetLevel: this.wet,    //0 to 1+\n            dryLevel: 1,       //0 to 1+\n            cutoff: this.cutoff,      //cutoff frequency of the built in lowpass-filter. 20 to 22050\n            bypass: this.bypass\n        });\n    }\n}\n\nexport default Delay;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Effects/Delay.js\n **/","import { CONST } from '../../core/Constants'\nimport Effect from '../../core/Effect'\n\nclass Filter extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n\n        this.freq = +properties.freq || 11000;\n        this.q = +properties.q || 10;\n        this.bypass = +properties.bypass || 0;\n        this.filterGain = this.level || 0;\n\n        this.setMainEffect('Filter', 'filter', {\n            frequency: this.freq, //20 to 22050\n            Q: this.q, //0.001 to 100\n            gain: this.filterGain, //-40 to 40\n            filterType: properties.type || CONST.FILTER_LOWPASS,\n            bypass: this.bypass\n        });\n    }\n}\n\nexport default Filter;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Effects/Filter.js\n **/","import { CONST } from '../../core/Constants'\nimport Effect from '../../core/Effect'\n\nclass MoogFilter extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n\n        this.cutoff = +properties.cutoff || 0.065;      //0 to 1\n        this.resonance = +properties.resonance || 3.5;      //0 to 4\n        this.bufferSize = +properties.bufferSize || 4096;  //256 to 16384\n\n        this.setMainEffect('MoogFilter', 'output', {\n            cutoff:     this.cutoff,\n            resonance:  this.resonance,\n            bufferSize: this.bufferSize\n        });\n    }\n}\n\nexport default MoogFilter;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Effects/MoogFilter.js\n **/","import { CONST } from '../../core/Constants'\nimport Effect from '../../core/Effect'\n\nclass Overdrive extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n        this.outputGain = +properties.outputGain || 0.5;     //0 to 1+\n        this.drive = +properties.drive || 0.7;              //0 to 1\n        this.curveAmount = +properties.curveAmount || 1;    //0 to 1\n        this.algorithmIndex = +properties.algorithmIndex || 0;  //0 to 5, selects one of our drive algorithms\n        this.bypass = +properties.bypass || 0;\n\n        this.setMainEffect('Overdrive', 'output', {\n            outputGain: this.outputGain,\n            drive: this.drive,\n            curveAmount: this.curveAmount,\n            algorithmIndex: this.algorithmIndex,\n            bypass: this.bypass\n        });\n    }\n}\n\nexport default Overdrive;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Effects/Overdrive.js\n **/","import { CONST } from '../../core/Constants'\nimport Effect from '../../core/Effect'\n\nclass PingPongDelay extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n\n        this.wet = +properties.wet || 0;\n        this.feedback = +properties.feedback || 0;\n        this.delayTimeLeft = +properties.delayTimeLeft || 0;\n        this.delayTimeRight = +properties.delayTimeRight || 0;\n        this.bypass = +properties.bypass || 0;\n\n        this.setMainEffect('PingPongDelay', 'delayLeft', {\n            wetLevel: this.wet, //0 to 1\n            feedback: this.feedback, //0 to 1\n            delayTimeLeft: this.delayTimeRight, //1 to 10000 (milliseconds)\n            delayTimeRight: this.delayTimeRight //1 to 10000 (milliseconds)\n        });\n    }\n}\n\nexport default PingPongDelay;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Effects/PingPongDelay.js\n **/","import { CONST } from '../../core/Constants'\nimport Effect from '../../core/Effect'\n\nclass Tremolo extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n\n        this.intensity = +properties.intensity || 0;    //0 to 1\n        this.rate = +properties.rate || 0.001;         //0.001 to 8\n        this.stereoPhase = +properties.stereoPhase || 0;    //0 to 180\n        this.bypass = +properties.bypass || 0;\n\n        this.setMainEffect('Tremolo', 'output', {\n            intensity: this.intensity,\n            rate: this.rate,\n            stereoPhase: this.stereoPhase,\n            bypass: this.bypass\n        });\n    }\n}\n\nexport default Tremolo;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Effects/Tremolo.js\n **/","import { CONST } from '../../core/Constants'\nimport Effect from '../../core/Effect'\n\nclass WahWah extends Effect {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n\n        this.automode = +properties.automode || false;      //true/false\n        this.baseFrequency = +properties.baseFrequency || 0;            //0 to 1\n        this.excursionOctaves = +properties.excursionOctaves || 1;           //1 to 6\n        this.sweep = +properties.sweep || 0;                          //0 to 1\n        this.resonance = +properties.resonance || 1;                //1 to 100\n        this.sensitivity = +properties.sensitivity || 0;              //-1 to 1\n        this.bypass = +properties.bypass || 0;\n\n        this.setMainEffect('WahWah', 'filterBp', {\n            automode:         this.automode,\n            baseFrequency:    this.baseFrequency,\n            excursionOctaves: this.excursionOctaves,\n            sweep:            this.sweep,\n            resonance:        this.resonance,\n            sensitivity:      this.sensitivity,\n            bypass:           this.bypass\n        });\n    }\n}\n\nexport default WahWah;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Effects/WahWah.js\n **/","import AudioContext from '../AudioContext'\nimport Module from '../core/Module'\n\nclass Envelope extends Module {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n\n        this.target = properties.target || null;\n        this.attack = properties.attack;\n        this.decay = properties.decay;\n        this.sustain = properties.sustain;\n        this.release = properties.release;\n    }\n\n    createGain () {\n        return false;\n    }\n\n    getReleaseTime () {\n        let now = AudioContext.currentTime,\n            release;\n\n        if (this.release) {\n            release = now + (this.release / 10.0);\n        } else {\n            release = now + 0.2;\n        }\n\n        return release;\n    }\n\n    setEnvelope (dest) {\n        let now = AudioContext.currentTime,\n            envelope = this.level % 101,\n            attackLevel,\n            sustainLevel,\n            attackEnd = (this.attack / 20.0),\n            t;\n\n        if (this.target === 'gain') {\n            attackLevel = envelope / 100;\n            sustainLevel = this.sustain / 100.0;\n        } else {\n            attackLevel = envelope * 72;  // Range: 0-7200: 6-octave range\n            sustainLevel = attackLevel * this.sustain / 100.0; // range: 0-7200\n        }\n\n        if (!attackEnd) {\n            attackEnd = 0.05; // tweak to get target decay to work properly\n        }\n\n        if (dest && typeof dest.getEnvelopeTarget === 'function') {\n            t = dest.getEnvelopeTarget(this.target);\n\n            if (t) {\n                t.setValueAtTime(0, now);\n                t.linearRampToValueAtTime(attackLevel, now + attackEnd);\n                t.setTargetAtTime(sustainLevel, now + attackEnd, (this.decay / 100.0));\n            }\n        }\n\n    }\n\n    resetEnvelope (dest) {\n        let now = AudioContext.currentTime,\n            t;\n\n        if (dest && typeof dest.getEnvelopeTarget === 'function') {\n            t = dest.getEnvelopeTarget(this.target);\n\n            if (t) {\n                t.cancelScheduledValues(now);\n                if (this.target === 'gain') {\n                    t.setValueAtTime(t.value, now);\n                }\n                t.setTargetAtTime(0, now, (this.release / 100.0));\n            }\n        }\n    }\n\n    getLineOut () {\n        return false;\n    }\n}\n\nexport default Envelope;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Envelope.js\n **/","import AudioContext from '../AudioContext'\nimport Module from '../core/Module'\n\nclass Master extends Module {\n\n    constructor (props) {\n        super(props);\n\n        this.main = AudioContext.createGain();\n        this.link = null;\n    }\n\n    getLineIn () {\n        return this.main;\n    }\n\n    lineOut (analyser) {\n        this.main.connect(this.envelope);\n        if (analyser) {\n            this.gain.connect(analyser);\n        } else {\n            this.gain.connect(AudioContext.destination);\n        }\n        //if (spectrum) {\n        //    this.javascriptNode = AudioContext.createScriptProcessor(2048, 1, 1);\n        //    this.javascriptNode.connect(AudioContext.destination);\n        //\n        //    this.analyser = AudioContext.createAnalyser();\n        //    this.analyser.fftSize = 1024;\n        //\n        //    this.gain.connect(this.analyser);\n        //    this.analyser.connect(AudioContext.destination);\n        //\n        //    this.javascriptNode.onaudioprocess = function () {\n        //        console.log('asd');\n        //    };\n        //\n        //} else {\n\n        //}\n    }\n}\n\nexport default Master;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Master.js\n **/","import AudioContext from '../AudioContext'\nimport Module from '../core/Module'\n\nclass Pan extends Module {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n\n        this.main = AudioContext.createStereoPanner();\n        this.main.pan.value = +properties.value || 0;\n        this.main.connect(this.envelope);\n    }\n}\n\nexport default Pan;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/Pan.js\n **/","import { CONST, TYPES } from '../../core/Constants'\nimport AudioContext from '../../AudioContext'\nimport SoundSource from '../../core/SoundSource'\n\nclass Modulator extends SoundSource {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n\n        this.freq = +properties.freq || 440;\n        this.target = properties.target || 'frequency';\n\n        this.main = AudioContext.createOscillator();\n        this.main.type = properties.type || CONST.WAVE_SINE;\n        this.main.connect(this.envelope);\n    }\n\n    setNote () {\n        let f =  this.freq % 11;\n        this.main.frequency.value = f;\n    }\n}\n\nexport default Modulator;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/SoundSources/Modulator.js\n **/","import { CONST, TYPES } from '../../core/Constants'\nimport AudioContext from '../../AudioContext'\nimport SoundSource from '../../core/SoundSource'\n\nclass Noise extends SoundSource {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n\n        this.defaultLineInProperty = 'detune';\n        this.main = AudioContext.createBufferSource();\n        this.main.connect(this.envelope);\n\n        this.color = properties.color || 'white';\n        this.setColor();\n    }\n\n    setColor () {\n        switch (this.color) {\n            case CONST.NOISE_WHITE :\n                this.main.buffer = this.white();\n                break;\n            case CONST.NOISE_PINK :\n                this.main.buffer = this.pink();\n                break;\n            case CONST.NOISE_BROWN :\n                this.main.buffer = this.brown();\n                break;\n            default :\n                throw new Error('Invalid Noise color: ' + this.color);\n        }\n    }\n\n    white () {\n        let noiseBuffer = this.getNoiseBuffer(),\n            bufferSize = this.getBufferSize(),\n            output = noiseBuffer.getChannelData(0);\n\n        for (let i = 0; i < bufferSize; i++) {\n            output[i] = Math.random() * 2 - 1;\n        }\n\n        return noiseBuffer;\n    }\n\n    pink () {\n        let b0, b1, b2, b3, b4, b5, b6,\n            noiseBuffer = this.getNoiseBuffer(),\n            bufferSize = this.getBufferSize(),\n            output = noiseBuffer.getChannelData(0),\n            white;\n\n        b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n\n        for (let i = 0; i < bufferSize; i++) {\n            white = Math.random() * 2 - 1;\n\n            b0 = 0.99886 * b0 + white * 0.0555179;\n            b1 = 0.99332 * b1 + white * 0.0750759;\n            b2 = 0.96900 * b2 + white * 0.1538520;\n            b3 = 0.86650 * b3 + white * 0.3104856;\n            b4 = 0.55000 * b4 + white * 0.5329522;\n            b5 = -0.7616 * b5 - white * 0.0168980;\n\n            output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n            output[i] *= 0.11;\n            b6 = white * 0.115926;\n        }\n\n        return noiseBuffer;\n    }\n\n    brown () {\n        let noiseBuffer = this.getNoiseBuffer(),\n            bufferSize = this.getBufferSize(),\n            output = noiseBuffer.getChannelData(0),\n            lastOut = 0.0,\n            white;\n\n        for (let i = 0; i < bufferSize; i++) {\n            white = white = Math.random() * 2 - 1;\n\n            output[i] = (lastOut + (0.02 * white)) / 1.02;\n            lastOut = output[i];\n            output[i] *= 3.5;\n        }\n\n        return noiseBuffer;\n    }\n\n    getBufferSize () {\n        return 2 * AudioContext.sampleRate;\n    }\n\n    getNoiseBuffer () {\n        let bufferSize = this.getBufferSize(),\n            noiseBuffer = AudioContext.createBuffer(1, bufferSize, AudioContext.sampleRate);\n        return noiseBuffer;\n    }\n\n    setNote () {\n        this.main.loop = true;\n    }\n}\n\nexport default Noise;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/SoundSources/Noise.js\n **/","import { CONST, TYPES } from '../../core/Constants'\nimport AudioContext from '../../AudioContext'\nimport SoundSource from '../../core/SoundSource'\n\nclass Oscillator extends SoundSource {\n\n    constructor (props) {\n        super(props);\n\n        let properties = props || {};\n\n        this.detune = +properties.detune || 0;\n\n        this.main = AudioContext.createOscillator();\n        this.main.type = properties.type || CONST.WAVE_SINE;\n        this.main.connect(this.envelope);\n\n        this.setDetune();\n    }\n\n    setDetune () {\n        if (this.detune > 1200) {\n            this.detune = 1200;\n        } else if (this.detune < -1200) {\n            this.detune = -1200;\n        }\n\n        this.main.detune.value = this.detune;\n    }\n\n    setNote (note) {\n        this.main.frequency.value = note;\n    }\n}\n\nexport default Oscillator;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/modules/SoundSources/Oscillator.js\n **/","/*\n    Copyright (c) 2012 DinahMoe AB & Oskar Eriksson\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\n    files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy,\n    modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software\n    is furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function(window) {\n    var userContext,\n        userInstance,\n        pipe = function(param, val) {\n            param.value = val;\n        },\n        Super = Object.create(null, {\n            activate: {\n                writable: true,\n                value: function(doActivate) {\n                    if (doActivate) {\n                        this.input.disconnect();\n                        this.input.connect(this.activateNode);\n                        if (this.activateCallback) {\n                            this.activateCallback(doActivate);\n                        }\n                    } else {\n                        this.input.disconnect();\n                        this.input.connect(this.output);\n                    }\n                }\n            },\n            bypass: {\n                get: function() {\n                    return this._bypass;\n                },\n                set: function(value) {\n                    if (this._lastBypassValue === value) {\n                        return;\n                    }\n                    this._bypass = value;\n                    this.activate(!value);\n                    this._lastBypassValue = value;\n                }\n            },\n            connect: {\n                value: function(target) {\n                    this.output.connect(target);\n                }\n            },\n            disconnect: {\n                value: function(target) {\n                    this.output.disconnect(target);\n                }\n            },\n            connectInOrder: {\n                value: function(nodeArray) {\n                    var i = nodeArray.length - 1;\n                    while (i--) {\n                        if (!nodeArray[i].connect) {\n                            return console.error(\"AudioNode.connectInOrder: TypeError: Not an AudioNode.\", nodeArray[i]);\n                        }\n                        if (nodeArray[i + 1].input) {\n                            nodeArray[i].connect(nodeArray[i + 1].input);\n                        } else {\n                            nodeArray[i].connect(nodeArray[i + 1]);\n                        }\n                    }\n                }\n            },\n            getDefaults: {\n                value: function() {\n                    var result = {};\n                    for (var key in this.defaults) {\n                        result[key] = this.defaults[key].value;\n                    }\n                    return result;\n                }\n            },\n            automate: {\n                value: function(property, value, duration, startTime) {\n                    var start = startTime ? ~~(startTime / 1000) : userContext.currentTime,\n                        dur = duration ? ~~(duration / 1000) : 0,\n                        _is = this.defaults[property],\n                        param = this[property],\n                        method;\n\n                    if (param) {\n                        if (_is.automatable) {\n                            if (!duration) {\n                                method = \"setValueAtTime\";\n                            } else {\n                                method = \"linearRampToValueAtTime\";\n                                param.cancelScheduledValues(start);\n                                param.setValueAtTime(param.value, start);\n                            }\n                            param[method](value, dur + start);\n                        } else {\n                            param = value;\n                        }\n                    } else {\n                        console.error(\"Invalid Property for \" + this.name);\n                    }\n                }\n            }\n        }),\n        FLOAT = \"float\",\n        BOOLEAN = \"boolean\",\n        STRING = \"string\",\n        INT = \"int\";\n\n    if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = Tuna;\n    } else if (typeof define === \"function\") {\n        window.define(\"Tuna\", definition);\n    } else {\n        window.Tuna = Tuna;\n    }\n\n    function definition() {\n        return Tuna;\n    }\n\n    function Tuna(context) {\n        if (!(this instanceof Tuna)) {\n            return new Tuna(context);\n        }\n        if (!window.AudioContext) {\n            window.AudioContext = window.webkitAudioContext;\n        }\n        if (!context) {\n            console.log(\"tuna.js: Missing audio context! Creating a new context for you.\");\n            context = window.AudioContext && (new window.AudioContext());\n        }\n        if (!context) {\n            throw new Error(\"Tuna cannot initialize because this environment does not support web audio.\");\n        }\n        connectify(context);\n        userContext = context;\n        userInstance = this;\n    }\n\n    function connectify(context) {\n        if (context.__connectified__ === true) return;\n\n        var gain = context.createGain(),\n            proto = Object.getPrototypeOf(Object.getPrototypeOf(gain)),\n            oconnect = proto.connect;\n\n        proto.connect = shimConnect;\n        context.__connectified__ = true; // Prevent overriding connect more than once\n\n        function shimConnect() {\n            var node = Array.prototype.shift.apply(arguments);\n            node = Super.isPrototypeOf ? (Super.isPrototypeOf(node) ? node.input : node) : (node.input || node);\n            arguments = Array.prototype.slice.call(arguments);\n            arguments.unshift(node);\n            oconnect.apply(this, arguments);\n            return node;\n        }\n    }\n\n    function dbToWAVolume(db) {\n        return Math.max(0, Math.round(100 * Math.pow(2, db / 6)) / 100);\n    }\n\n    function fmod(x, y) {\n        // http://kevin.vanzonneveld.net\n        // *     example 1: fmod(5.7, 1.3);\n        // *     returns 1: 0.5\n        var tmp, tmp2, p = 0,\n            pY = 0,\n            l = 0.0,\n            l2 = 0.0;\n\n        tmp = x.toExponential().match(/^.\\.?(.*)e(.+)$/);\n        p = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n        tmp = y.toExponential().match(/^.\\.?(.*)e(.+)$/);\n        pY = parseInt(tmp[2], 10) - (tmp[1] + \"\").length;\n\n        if (pY > p) {\n            p = pY;\n        }\n\n        tmp2 = (x % y);\n\n        if (p < -100 || p > 20) {\n            // toFixed will give an out of bound error so we fix it like this:\n            l = Math.round(Math.log(tmp2) / Math.log(10));\n            l2 = Math.pow(10, l);\n\n            return (tmp2 / l2).toFixed(l - p) * l2;\n        } else {\n            return parseFloat(tmp2.toFixed(-p));\n        }\n    }\n\n    function sign(x) {\n        if (x === 0) {\n            return 1;\n        } else {\n            return Math.abs(x) / x;\n        }\n    }\n\n    function tanh(n) {\n        return (Math.exp(n) - Math.exp(-n)) / (Math.exp(n) + Math.exp(-n));\n    }\n\n    function initValue(userVal, defaultVal) {\n        return userVal === undefined ? defaultVal : userVal;\n    }\n\n    Tuna.prototype.Bitcrusher = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.bufferSize = properties.bufferSize || this.defaults.bufferSize.value;\n\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.processor = userContext.createScriptProcessor(this.bufferSize, 1, 1);\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.processor);\n        this.processor.connect(this.output);\n\n        var phaser = 0,\n            last = 0,\n            input, output, step, i, length;\n        this.processor.onaudioprocess = function(e) {\n            input = e.inputBuffer.getChannelData(0),\n            output = e.outputBuffer.getChannelData(0),\n            step = Math.pow(1 / 2, this.bits);\n            length = input.length;\n            for (i = 0; i < length; i++) {\n                phaser += this.normfreq;\n                if (phaser >= 1.0) {\n                    phaser -= 1.0;\n                    last = step * Math.floor(input[i] / step + 0.5);\n                }\n                output[i] = last;\n            }\n        };\n\n        this.bits = properties.bits || this.defaults.bits.value;\n        this.normfreq = initValue(properties.normfreq, this.defaults.normfreq.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Bitcrusher.prototype = Object.create(Super, {\n        name: {\n            value: \"Bitcrusher\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                bits: {\n                    value: 4,\n                    min: 1,\n                    max: 16,\n                    automatable: false,\n                    type: INT\n                },\n                bufferSize: {\n                    value: 4096,\n                    min: 256,\n                    max: 16384,\n                    automatable: false,\n                    type: INT\n                },\n                bypass: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                normfreq: {\n                    value: 0.1,\n                    min: 0.0001,\n                    max: 1.0,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        bits: {\n            enumerable: true,\n            get: function() {\n                return this.processor.bits;\n            },\n            set: function(value) {\n                this.processor.bits = value;\n            }\n        },\n        normfreq: {\n            enumerable: true,\n            get: function() {\n                return this.processor.normfreq;\n            },\n            set: function(value) {\n                this.processor.normfreq = value;\n            }\n        }\n    });\n\n    Tuna.prototype.Cabinet = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.convolver = this.newConvolver(properties.impulsePath ||\n            \"../impulses/impulse_guitar.wav\");\n        this.makeupNode = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.convolver.input);\n        this.convolver.output.connect(this.makeupNode);\n        this.makeupNode.connect(this.output);\n\n        this.makeupGain = initValue(properties.makeupGain, this.defaults\n            .makeupGain);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Cabinet.prototype = Object.create(Super, {\n        name: {\n            value: \"Cabinet\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                makeupGain: {\n                    value: 1,\n                    min: 0,\n                    max: 20,\n                    automatable: true,\n                    type: FLOAT\n                },\n                bypass: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                }\n            }\n        },\n        makeupGain: {\n            enumerable: true,\n            get: function() {\n                return this.makeupNode.gain;\n            },\n            set: function(value) {\n                this.makeupNode.gain.value = value;\n            }\n        },\n        newConvolver: {\n            value: function(impulsePath) {\n                return new userInstance.Convolver({\n                    impulse: impulsePath,\n                    dryLevel: 0,\n                    wetLevel: 1\n                });\n            }\n        }\n    });\n\n    Tuna.prototype.Chorus = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.attenuator = this.activateNode = userContext.createGain();\n        this.splitter = userContext.createChannelSplitter(2);\n        this.delayL = userContext.createDelay();\n        this.delayR = userContext.createDelay();\n        this.feedbackGainNodeLR = userContext.createGain();\n        this.feedbackGainNodeRL = userContext.createGain();\n        this.merger = userContext.createChannelMerger(2);\n        this.output = userContext.createGain();\n\n        this.lfoL = new userInstance.LFO({\n            target: this.delayL.delayTime,\n            callback: pipe\n        });\n        this.lfoR = new userInstance.LFO({\n            target: this.delayR.delayTime,\n            callback: pipe\n        });\n\n        this.input.connect(this.attenuator);\n        this.attenuator.connect(this.output);\n        this.attenuator.connect(this.splitter);\n        this.splitter.connect(this.delayL, 0);\n        this.splitter.connect(this.delayR, 1);\n        this.delayL.connect(this.feedbackGainNodeLR);\n        this.delayR.connect(this.feedbackGainNodeRL);\n        this.feedbackGainNodeLR.connect(this.delayR);\n        this.feedbackGainNodeRL.connect(this.delayL);\n        this.delayL.connect(this.merger, 0, 0);\n        this.delayR.connect(this.merger, 0, 1);\n        this.merger.connect(this.output);\n\n        this.feedback = initValue(properties.feedback, this.defaults.feedback\n            .value);\n        this.rate = initValue(properties.rate, this.defaults.rate.value);\n        this.delay = initValue(properties.delay, this.defaults.delay.value);\n        this.depth = initValue(properties.depth, this.defaults.depth.value);\n        this.lfoR.phase = Math.PI / 2;\n        this.attenuator.gain.value = 0.6934; // 1 / (10 ^ (((20 * log10(3)) / 3) / 20))\n        this.lfoL.activate(true);\n        this.lfoR.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Chorus.prototype = Object.create(Super, {\n        name: {\n            value: \"Chorus\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                feedback: {\n                    value: 0.4,\n                    min: 0,\n                    max: 0.95,\n                    automatable: false,\n                    type: FLOAT\n                },\n                delay: {\n                    value: 0.0045,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                depth: {\n                    value: 0.7,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                rate: {\n                    value: 1.5,\n                    min: 0,\n                    max: 8,\n                    automatable: false,\n                    type: FLOAT\n                },\n                bypass: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                }\n            }\n        },\n        delay: {\n            enumerable: true,\n            get: function() {\n                return this._delay;\n            },\n            set: function(value) {\n                this._delay = 0.0002 * (Math.pow(10, value) * 2);\n                this.lfoL.offset = this._delay;\n                this.lfoR.offset = this._delay;\n                this._depth = this._depth;\n            }\n        },\n        depth: {\n            enumerable: true,\n            get: function() {\n                return this._depth;\n            },\n            set: function(value) {\n                this._depth = value;\n                this.lfoL.oscillation = this._depth * this._delay;\n                this.lfoR.oscillation = this._depth * this._delay;\n            }\n        },\n        feedback: {\n            enumerable: true,\n            get: function() {\n                return this._feedback;\n            },\n            set: function(value) {\n                this._feedback = value;\n                this.feedbackGainNodeLR.gain.value = this._feedback;\n                this.feedbackGainNodeRL.gain.value = this._feedback;\n            }\n        },\n        rate: {\n            enumerable: true,\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._rate = value;\n                this.lfoL.frequency = this._rate;\n                this.lfoR.frequency = this._rate;\n            }\n        }\n    });\n\n    Tuna.prototype.Compressor = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.compNode = this.activateNode = userContext.createDynamicsCompressor();\n        this.makeupNode = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.compNode.connect(this.makeupNode);\n        this.makeupNode.connect(this.output);\n\n        this.automakeup = initValue(properties.automakeup, this.defaults\n            .automakeup\n            .value);\n        this.makeupGain = properties.makeupGain || this.defaults.makeupGain\n            .value;\n        this.threshold = initValue(properties.threshold, this.defaults.threshold\n            .value);\n        this.release = properties.release || this.defaults.release.value;\n        this.attack = initValue(properties.attack, this.defaults.attack\n            .value);\n        this.ratio = properties.ratio || this.defaults.ratio.value;\n        this.knee = initValue(properties.knee, this.defaults.knee.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Compressor.prototype = Object.create(Super, {\n        name: {\n            value: \"Compressor\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                threshold: {\n                    value: -20,\n                    min: -60,\n                    max: 0,\n                    automatable: true,\n                    type: FLOAT\n                },\n                release: {\n                    value: 250,\n                    min: 10,\n                    max: 2000,\n                    automatable: true,\n                    type: FLOAT\n                },\n                makeupGain: {\n                    value: 1,\n                    min: 1,\n                    max: 100,\n                    automatable: true,\n                    type: FLOAT\n                },\n                attack: {\n                    value: 1,\n                    min: 0,\n                    max: 1000,\n                    automatable: true,\n                    type: FLOAT\n                },\n                ratio: {\n                    value: 4,\n                    min: 1,\n                    max: 50,\n                    automatable: true,\n                    type: FLOAT\n                },\n                knee: {\n                    value: 5,\n                    min: 0,\n                    max: 40,\n                    automatable: true,\n                    type: FLOAT\n                },\n                automakeup: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                bypass: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                }\n            }\n        },\n        computeMakeup: {\n            value: function() {\n                var magicCoefficient = 4,\n                    // raise me if the output is too hot\n                    c = this.compNode;\n                return -(c.threshold.value - c.threshold.value /\n                        c.ratio.value) /\n                    magicCoefficient;\n            }\n        },\n        automakeup: {\n            enumerable: true,\n            get: function() {\n                return this._automakeup;\n            },\n            set: function(value) {\n                this._automakeup = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        threshold: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.threshold;\n            },\n            set: function(value) {\n                this.compNode.threshold.value = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        ratio: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.ratio;\n            },\n            set: function(value) {\n                this.compNode.ratio.value = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        knee: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.knee;\n            },\n            set: function(value) {\n                this.compNode.knee.value = value;\n                if (this._automakeup) this.makeupGain = this.computeMakeup();\n            }\n        },\n        attack: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.attack;\n            },\n            set: function(value) {\n                this.compNode.attack.value = value / 1000;\n            }\n        },\n        release: {\n            enumerable: true,\n            get: function() {\n                return this.compNode.release;\n            },\n            set: function(value) {\n                this.compNode.release = value / 1000;\n            }\n        },\n        makeupGain: {\n            enumerable: true,\n            get: function() {\n                return this.makeupNode.gain;\n            },\n            set: function(value) {\n                this.makeupNode.gain.value = dbToWAVolume(value);\n            }\n        }\n    });\n\n    Tuna.prototype.Convolver = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.convolver = userContext.createConvolver();\n        this.dry = userContext.createGain();\n        this.filterLow = userContext.createBiquadFilter();\n        this.filterHigh = userContext.createBiquadFilter();\n        this.wet = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.filterLow);\n        this.activateNode.connect(this.dry);\n        this.filterLow.connect(this.filterHigh);\n        this.filterHigh.connect(this.convolver);\n        this.convolver.connect(this.wet);\n        this.wet.connect(this.output);\n        this.dry.connect(this.output);\n\n        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel\n            .value);\n        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel\n            .value);\n        this.highCut = properties.highCut || this.defaults.highCut.value;\n        this.buffer = properties.impulse ||\n            \"../impulses/ir_rev_short.wav\";\n        this.lowCut = properties.lowCut || this.defaults.lowCut.value;\n        this.level = initValue(properties.level, this.defaults.level.value);\n        this.filterHigh.type = \"lowpass\";\n        this.filterLow.type = \"highpass\";\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Convolver.prototype = Object.create(Super, {\n        name: {\n            value: \"Convolver\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                highCut: {\n                    value: 22050,\n                    min: 20,\n                    max: 22050,\n                    automatable: true,\n                    type: FLOAT\n                },\n                lowCut: {\n                    value: 20,\n                    min: 20,\n                    max: 22050,\n                    automatable: true,\n                    type: FLOAT\n                },\n                dryLevel: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                },\n                wetLevel: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                },\n                level: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                }\n            }\n        },\n        lowCut: {\n            get: function() {\n                return this.filterLow.frequency;\n            },\n            set: function(value) {\n                this.filterLow.frequency.value = value;\n            }\n        },\n        highCut: {\n            get: function() {\n                return this.filterHigh.frequency;\n            },\n            set: function(value) {\n                this.filterHigh.frequency.value = value;\n            }\n        },\n        level: {\n            get: function() {\n                return this.output.gain;\n            },\n            set: function(value) {\n                this.output.gain.value = value;\n            }\n        },\n        dryLevel: {\n            get: function() {\n                return this.dry.gain\n            },\n            set: function(value) {\n                this.dry.gain.value = value;\n            }\n        },\n        wetLevel: {\n            get: function() {\n                return this.wet.gain;\n            },\n            set: function(value) {\n                this.wet.gain.value = value;\n            }\n        },\n        buffer: {\n            enumerable: false,\n            get: function() {\n                return this.convolver.buffer;\n            },\n            set: function(impulse) {\n                var convolver = this.convolver,\n                    xhr = new XMLHttpRequest();\n                if (!impulse) {\n                    console.log(\"Tuna.Convolver.setBuffer: Missing impulse path!\");\n                    return;\n                }\n                xhr.open(\"GET\", impulse, true);\n                xhr.responseType = \"arraybuffer\";\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.status < 300 && xhr.status > 199 || xhr.status === 302) {\n                            userContext.decodeAudioData(xhr.response, function(buffer) {\n                                convolver.buffer = buffer;\n                            }, function(e) {\n                                if (e) console.log(\"Tuna.Convolver.setBuffer: Error decoding data\" + e);\n                            });\n                        }\n                    }\n                };\n                xhr.send(null);\n            }\n        }\n    });\n\n    Tuna.prototype.Delay = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.dry = userContext.createGain();\n        this.wet = userContext.createGain();\n        this.filter = userContext.createBiquadFilter();\n        this.delay = userContext.createDelay();\n        this.feedbackNode = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.delay);\n        this.activateNode.connect(this.dry);\n        this.delay.connect(this.filter);\n        this.filter.connect(this.feedbackNode);\n        this.feedbackNode.connect(this.delay);\n        this.feedbackNode.connect(this.wet);\n        this.wet.connect(this.output);\n        this.dry.connect(this.output);\n\n        this.delayTime = properties.delayTime || this.defaults.delayTime.value;\n        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n        this.wetLevel = initValue(properties.wetLevel, this.defaults.wetLevel.value);\n        this.dryLevel = initValue(properties.dryLevel, this.defaults.dryLevel.value);\n        this.cutoff = properties.cutoff || this.defaults.cutoff.value;\n        this.filter.type = \"lowpass\";\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Delay.prototype = Object.create(Super, {\n        name: {\n            value: \"Delay\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                delayTime: {\n                    value: 100,\n                    min: 20,\n                    max: 1000,\n                    automatable: false,\n                    type: FLOAT\n                },\n                feedback: {\n                    value: 0.45,\n                    min: 0,\n                    max: 0.9,\n                    automatable: true,\n                    type: FLOAT\n                },\n                cutoff: {\n                    value: 20000,\n                    min: 20,\n                    max: 20000,\n                    automatable: true,\n                    type: FLOAT\n                },\n                wetLevel: {\n                    value: 0.5,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                },\n                dryLevel: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT\n                }\n            }\n        },\n        delayTime: {\n            enumerable: true,\n            get: function() {\n                return this.delay.delayTime;\n            },\n            set: function(value) {\n                this.delay.delayTime.value = value / 1000;\n            }\n        },\n        wetLevel: {\n            enumerable: true,\n            get: function() {\n                return this.wet.gain;\n            },\n            set: function(value) {\n                this.wet.gain.value = value;\n            }\n        },\n        dryLevel: {\n            enumerable: true,\n            get: function() {\n                return this.dry.gain;\n            },\n            set: function(value) {\n                this.dry.gain.value = value;\n            }\n        },\n        feedback: {\n            enumerable: true,\n            get: function() {\n                return this.feedbackNode.gain;\n            },\n            set: function(value) {\n                this.feedbackNode.gain.value = value;\n            }\n        },\n        cutoff: {\n            enumerable: true,\n            get: function() {\n                return this.filter.frequency;\n            },\n            set: function(value) {\n                this.filter.frequency.value = value;\n            }\n        }\n    });\n\n    Tuna.prototype.Filter = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.filter = userContext.createBiquadFilter();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.filter);\n        this.filter.connect(this.output);\n\n        this.frequency = properties.frequency || this.defaults.frequency\n            .value;\n        this.Q = properties.resonance || this.defaults.Q.value;\n        this.filterType = initValue(properties.filterType, this.defaults\n            .filterType\n            .value);\n        this.gain = initValue(properties.gain, this.defaults.gain.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Filter.prototype = Object.create(Super, {\n        name: {\n            value: \"Filter\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                frequency: {\n                    value: 800,\n                    min: 20,\n                    max: 22050,\n                    automatable: true,\n                    type: FLOAT\n                },\n                Q: {\n                    value: 1,\n                    min: 0.001,\n                    max: 100,\n                    automatable: true,\n                    type: FLOAT\n                },\n                gain: {\n                    value: 0,\n                    min: -40,\n                    max: 40,\n                    automatable: true,\n                    type: FLOAT\n                },\n                bypass: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                filterType: {\n                    value: \"lowpass\",\n                    automatable: false,\n                    type: STRING\n                }\n            }\n        },\n        filterType: {\n            enumerable: true,\n            get: function() {\n                return this.filter.type;\n            },\n            set: function(value) {\n                this.filter.type = value;\n            }\n        },\n        Q: {\n            enumerable: true,\n            get: function() {\n                return this.filter.Q;\n            },\n            set: function(value) {\n                this.filter.Q.value = value;\n            }\n        },\n        gain: {\n            enumerable: true,\n            get: function() {\n                return this.filter.gain;\n            },\n            set: function(value) {\n                this.filter.gain.value = value;\n            }\n        },\n        frequency: {\n            enumerable: true,\n            get: function() {\n                return this.filter.frequency;\n            },\n            set: function(value) {\n                this.filter.frequency.value = value;\n            }\n        }\n    });\n\n    Tuna.prototype.MoogFilter = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.bufferSize = properties.bufferSize || this.defaults.bufferSize\n            .value;\n\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.processor = userContext.createScriptProcessor(this.bufferSize,\n            1,\n            1);\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.processor);\n        this.processor.connect(this.output);\n\n        var in1, in2, in3, in4, out1, out2, out3, out4;\n        in1 = in2 = in3 = in4 = out1 = out2 = out3 = out4 = 0.0;\n        var input, output, f, fb, i, length;\n        this.processor.onaudioprocess = function(e) {\n            input = e.inputBuffer.getChannelData(0),\n                output = e.outputBuffer.getChannelData(0),\n                f = this.cutoff * 1.16,\n                inputFactor = 0.35013 * (f * f) * (f * f);\n            fb = this.resonance * (1.0 - 0.15 * f * f);\n            length = input.length;\n            for (i = 0; i < length; i++) {\n                input[i] -= out4 * fb;\n                input[i] *= inputFactor;\n                out1 = input[i] + 0.3 * in1 + (1 - f) * out1; // Pole 1\n                in1 = input[i];\n                out2 = out1 + 0.3 * in2 + (1 - f) * out2; // Pole 2\n                in2 = out1;\n                out3 = out2 + 0.3 * in3 + (1 - f) * out3; // Pole 3\n                in3 = out2;\n                out4 = out3 + 0.3 * in4 + (1 - f) * out4; // Pole 4\n                in4 = out3;\n                output[i] = out4;\n            }\n        };\n\n        this.cutoff = initValue(properties.cutoff, this.defaults.cutoff\n            .value);\n        this.resonance = initValue(properties.resonance, this.defaults.resonance\n            .value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.MoogFilter.prototype = Object.create(Super, {\n        name: {\n            value: \"MoogFilter\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                bufferSize: {\n                    value: 4096,\n                    min: 256,\n                    max: 16384,\n                    automatable: false,\n                    type: INT\n                },\n                bypass: {\n                    value: false,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                cutoff: {\n                    value: 0.065,\n                    min: 0.0001,\n                    max: 1.0,\n                    automatable: false,\n                    type: FLOAT\n                },\n                resonance: {\n                    value: 3.5,\n                    min: 0.0,\n                    max: 4.0,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        cutoff: {\n            enumerable: true,\n            get: function() {\n                return this.processor.cutoff;\n            },\n            set: function(value) {\n                this.processor.cutoff = value;\n            }\n        },\n        resonance: {\n            enumerable: true,\n            get: function() {\n                return this.processor.resonance;\n            },\n            set: function(value) {\n                this.processor.resonance = value;\n            }\n        }\n    });\n\n    Tuna.prototype.Overdrive = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.inputDrive = userContext.createGain();\n        this.waveshaper = userContext.createWaveShaper();\n        this.outputDrive = userContext.createGain();\n        this.output = userContext.createGain();\n\n        this.activateNode.connect(this.inputDrive);\n        this.inputDrive.connect(this.waveshaper);\n        this.waveshaper.connect(this.outputDrive);\n        this.outputDrive.connect(this.output);\n\n        this.ws_table = new Float32Array(this.k_nSamples);\n        this.drive = initValue(properties.drive, this.defaults.drive.value);\n        this.outputGain = initValue(properties.outputGain, this.defaults\n            .outputGain\n            .value);\n        this.curveAmount = initValue(properties.curveAmount, this.defaults\n            .curveAmount\n            .value);\n        this.algorithmIndex = initValue(properties.algorithmIndex, this\n            .defaults\n            .algorithmIndex.value);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Overdrive.prototype = Object.create(Super, {\n        name: {\n            value: \"Overdrive\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                drive: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT,\n                    scaled: true\n                },\n                outputGain: {\n                    value: 1,\n                    min: 0,\n                    max: 1,\n                    automatable: true,\n                    type: FLOAT,\n                    scaled: true\n                },\n                curveAmount: {\n                    value: 0.725,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                algorithmIndex: {\n                    value: 0,\n                    min: 0,\n                    max: 5,\n                    automatable: false,\n                    type: INT\n                }\n            }\n        },\n        k_nSamples: {\n            value: 8192\n        },\n        drive: {\n            get: function() {\n                return this.inputDrive.gain;\n            },\n            set: function(value) {\n                this._drive = value;\n            }\n        },\n        curveAmount: {\n            get: function() {\n                return this._curveAmount;\n            },\n            set: function(value) {\n                this._curveAmount = value;\n                if (this._algorithmIndex === undefined) {\n                    this._algorithmIndex = 0;\n                }\n                this.waveshaperAlgorithms[this._algorithmIndex]\n                    (this._curveAmount,\n                        this.k_nSamples, this.ws_table);\n                this.waveshaper.curve = this.ws_table;\n            }\n        },\n        outputGain: {\n            get: function() {\n                return this.outputDrive.gain;\n            },\n            set: function(value) {\n                this._outputGain = dbToWAVolume(value);\n            }\n        },\n        algorithmIndex: {\n            get: function() {\n                return this._algorithmIndex;\n            },\n            set: function(value) {\n                this._algorithmIndex = value;\n                this.curveAmount = this._curveAmount;\n            }\n        },\n        waveshaperAlgorithms: {\n            value: [\n                function(amount, n_samples, ws_table) {\n                    amount = Math.min(amount, 0.9999);\n                    var k = 2 * amount / (1 - amount),\n                        i, x;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        ws_table[i] = (1 + k) * x / (1 + k * Math.abs(x));\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var i, x, y;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        y = ((0.5 * Math.pow((x + 1.4), 2)) - 1) * y >= 0 ? 5.8 : 1.2;\n                        ws_table[i] = tanh(y);\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var i, x, y, a = 1 - amount;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        y = x < 0 ? -Math.pow(Math.abs(x), a + 0.04) : Math.pow(x, a);\n                        ws_table[i] = tanh(y * 2);\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var i, x, y, abx, a = 1 - amount > 0.99 ? 0.99 : 1 - amount;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        abx = Math.abs(x);\n                        if (abx < a) y = abx;\n                        else if (abx > a) y = a + (abx - a) / (1 + Math.pow((abx - a) / (1 - a), 2));\n                        else if (abx > 1) y = abx;\n                        ws_table[i] = sign(x) * y * (1 / ((a + 1) / 2));\n                    }\n                },\n                function(amount, n_samples, ws_table) { // fixed curve, amount doesn't do anything, the distortion is just from the drive\n                    var i, x;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        if (x < -0.08905) {\n                            ws_table[i] = (-3 / 4) * (1 - (Math.pow((1 - (Math.abs(x) - 0.032857)), 12)) + (1 / 3) * (Math.abs(x) -\n                                0.032847)) + 0.01;\n                        } else if (x >= -0.08905 && x < 0.320018) {\n                            ws_table[i] = (-6.153 * (x * x)) + 3.9375 * x;\n                        } else {\n                            ws_table[i] = 0.630035;\n                        }\n                    }\n                },\n                function(amount, n_samples, ws_table) {\n                    var a = 2 + Math.round(amount * 14),\n                        // we go from 2 to 16 bits, keep in mind for the UI\n                        bits = Math.round(Math.pow(2, a - 1)),\n                        // real number of quantization steps divided by 2\n                        i, x;\n                    for (i = 0; i < n_samples; i++) {\n                        x = i * 2 / n_samples - 1;\n                        ws_table[i] = Math.round(x * bits) / bits;\n                    }\n                }\n            ]\n        }\n    });\n\n    Tuna.prototype.Phaser = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.splitter = this.activateNode = userContext.createChannelSplitter(2);\n        this.filtersL = [];\n        this.filtersR = [];\n        this.feedbackGainNodeL = userContext.createGain();\n        this.feedbackGainNodeR = userContext.createGain();\n        this.merger = userContext.createChannelMerger(2);\n        this.filteredSignal = userContext.createGain();\n        this.output = userContext.createGain();\n        this.lfoL = new userInstance.LFO({\n            target: this.filtersL,\n            callback: this.callback\n        });\n        this.lfoR = new userInstance.LFO({\n            target: this.filtersR,\n            callback: this.callback\n        });\n\n        var i = this.stage;\n        while (i--) {\n            this.filtersL[i] = userContext.createBiquadFilter();\n            this.filtersR[i] = userContext.createBiquadFilter();\n            this.filtersL[i].type = \"allpass\";\n            this.filtersR[i].type = \"allpass\";\n        }\n        this.input.connect(this.splitter);\n        this.input.connect(this.output);\n        this.splitter.connect(this.filtersL[0], 0, 0);\n        this.splitter.connect(this.filtersR[0], 1, 0);\n        this.connectInOrder(this.filtersL);\n        this.connectInOrder(this.filtersR);\n        this.filtersL[this.stage - 1].connect(this.feedbackGainNodeL);\n        this.filtersL[this.stage - 1].connect(this.merger, 0, 0);\n        this.filtersR[this.stage - 1].connect(this.feedbackGainNodeR);\n        this.filtersR[this.stage - 1].connect(this.merger, 0, 1);\n        this.feedbackGainNodeL.connect(this.filtersL[0]);\n        this.feedbackGainNodeR.connect(this.filtersR[0]);\n        this.merger.connect(this.output);\n\n        this.rate = initValue(properties.rate, this.defaults.rate.value);\n        this.baseModulationFrequency = properties.baseModulationFrequency || this.defaults.baseModulationFrequency.value;\n        this.depth = initValue(properties.depth, this.defaults.depth.value);\n        this.feedback = initValue(properties.feedback, this.defaults.feedback.value);\n        this.stereoPhase = initValue(properties.stereoPhase, this.defaults.stereoPhase.value);\n\n        this.lfoL.activate(true);\n        this.lfoR.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Phaser.prototype = Object.create(Super, {\n        name: {\n            value: \"Phaser\"\n        },\n        stage: {\n            value: 4\n        },\n        defaults: {\n            writable: true,\n            value: {\n                rate: {\n                    value: 0.1,\n                    min: 0,\n                    max: 8,\n                    automatable: false,\n                    type: FLOAT\n                },\n                depth: {\n                    value: 0.6,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                feedback: {\n                    value: 0.7,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                stereoPhase: {\n                    value: 40,\n                    min: 0,\n                    max: 180,\n                    automatable: false,\n                    type: FLOAT\n                },\n                baseModulationFrequency: {\n                    value: 700,\n                    min: 500,\n                    max: 1500,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        callback: {\n            value: function(filters, value) {\n                for (var stage = 0; stage < 4; stage++) {\n                    filters[stage].frequency.value = value;\n                }\n            }\n        },\n        depth: {\n            get: function() {\n                return this._depth;\n            },\n            set: function(value) {\n                this._depth = value;\n                this.lfoL.oscillation = this._baseModulationFrequency * this._depth;\n                this.lfoR.oscillation = this._baseModulationFrequency * this._depth;\n            }\n        },\n        rate: {\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._rate = value;\n                this.lfoL.frequency = this._rate;\n                this.lfoR.frequency = this._rate;\n            }\n        },\n        baseModulationFrequency: {\n            enumerable: true,\n            get: function() {\n                return this._baseModulationFrequency;\n            },\n            set: function(value) {\n                this._baseModulationFrequency = value;\n                this.lfoL.offset = this._baseModulationFrequency;\n                this.lfoR.offset = this._baseModulationFrequency;\n                this._depth = this._depth;\n            }\n        },\n        feedback: {\n            get: function() {\n                return this._feedback;\n            },\n            set: function(value) {\n                this._feedback = value;\n                this.feedbackGainNodeL.gain.value = this._feedback;\n                this.feedbackGainNodeR.gain.value = this._feedback;\n            }\n        },\n        stereoPhase: {\n            get: function() {\n                return this._stereoPhase;\n            },\n            set: function(value) {\n                this._stereoPhase = value;\n                var newPhase = this.lfoL._phase + this._stereoPhase *\n                    Math.PI /\n                    180;\n                newPhase = fmod(newPhase, 2 * Math.PI);\n                this.lfoR._phase = newPhase;\n            }\n        }\n    });\n\n    Tuna.prototype.PingPongDelay = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.wetLevel = userContext.createGain();\n        this.stereoToMonoMix = userContext.createGain();\n        this.feedbackLevel = userContext.createGain();\n        this.output = userContext.createGain();\n        this.delayLeft = userContext.createDelay();\n        this.delayRight = userContext.createDelay();\n\n        this.activateNode = userContext.createGain();\n        this.splitter = userContext.createChannelSplitter(2);\n        this.merger = userContext.createChannelMerger(2);\n\n        this.activateNode.connect(this.splitter);\n        this.splitter.connect(this.stereoToMonoMix, 0, 0);\n        this.splitter.connect(this.stereoToMonoMix, 1, 0);\n        this.stereoToMonoMix.gain.value = .5;\n        this.stereoToMonoMix.connect(this.wetLevel);\n        this.wetLevel.connect(this.delayLeft);\n        this.feedbackLevel.connect(this.delayLeft);\n        this.delayLeft.connect(this.delayRight);\n        this.delayRight.connect(this.feedbackLevel);\n        this.delayLeft.connect(this.merger, 0, 0);\n        this.delayRight.connect(this.merger, 0, 1);\n        this.merger.connect(this.output);\n        this.activateNode.connect(this.output);\n\n        this.delayTimeLeft = properties.delayTimeLeft !== undefined ? properties.delayTimeLeft : this.defaults.delayTimeLeft.value;\n        this.delayTimeRight = properties.delayTimeRight !== undefined ? properties.delayTimeRight : this.defaults.delayTimeRight.value;\n        this.feedbackLevel.gain.value = properties.feedback !== undefined ? properties.feedback : this.defaults.feedback.value;\n        this.wetLevel.gain.value = properties.wetLevel !== undefined ? properties.wetLevel : this.defaults.wetLevel.value;\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.PingPongDelay.prototype = Object.create(Super, {\n        name: {\n            value: \"PingPongDelay\"\n        },\n        delayTimeLeft: {\n            enumerable: true,\n            get: function() {\n                return this._delayTimeLeft;\n            },\n            set: function(value) {\n                this._delayTimeLeft = value;\n                this.delayLeft.delayTime.value = value / 1000;\n            }\n        },\n        delayTimeRight: {\n            enumerable: true,\n            get: function() {\n                return this._delayTimeRight;\n            },\n            set: function(value) {\n                this._delayTimeRight = value;\n                this.delayRight.delayTime.value = value / 1000;\n            }\n        },\n        defaults: {\n            writable: true,\n            value: {\n                delayTimeLeft: {\n                    value: 200,\n                    min: 1,\n                    max: 10000,\n                    automatable: false,\n                    type: INT\n                },\n                delayTimeRight: {\n                    value: 400,\n                    min: 1,\n                    max: 10000,\n                    automatable: false,\n                    type: INT\n                },\n                feedback: {\n                    value: 0.3,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                wetLevel: {\n                    value: 0.5,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        }\n    });\n\n    Tuna.prototype.Tremolo = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.splitter = this.activateNode = userContext.createChannelSplitter(\n                2),\n            this.amplitudeL = userContext.createGain(), this.amplitudeR =\n            userContext.createGain(), this.merger = userContext.createChannelMerger(\n                2), this.output = userContext.createGain();\n        this.lfoL = new userInstance.LFO({\n            target: this.amplitudeL.gain,\n            callback: pipe\n        });\n        this.lfoR = new userInstance.LFO({\n            target: this.amplitudeR.gain,\n            callback: pipe\n        });\n\n        this.input.connect(this.splitter);\n        this.splitter.connect(this.amplitudeL, 0);\n        this.splitter.connect(this.amplitudeR, 1);\n        this.amplitudeL.connect(this.merger, 0, 0);\n        this.amplitudeR.connect(this.merger, 0, 1);\n        this.merger.connect(this.output);\n\n        this.rate = properties.rate || this.defaults.rate.value;\n        this.intensity = initValue(properties.intensity, this.defaults.intensity\n            .value);\n        this.stereoPhase = initValue(properties.stereoPhase, this.defaults\n            .stereoPhase\n            .value);\n\n        this.lfoL.offset = 1 - (this.intensity / 2);\n        this.lfoR.offset = 1 - (this.intensity / 2);\n        this.lfoL.phase = this.stereoPhase * Math.PI / 180;\n\n        this.lfoL.activate(true);\n        this.lfoR.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.Tremolo.prototype = Object.create(Super, {\n        name: {\n            value: \"Tremolo\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                intensity: {\n                    value: 0.3,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                stereoPhase: {\n                    value: 0,\n                    min: 0,\n                    max: 180,\n                    automatable: false,\n                    type: FLOAT\n                },\n                rate: {\n                    value: 5,\n                    min: 0.1,\n                    max: 11,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        intensity: {\n            enumerable: true,\n            get: function() {\n                return this._intensity;\n            },\n            set: function(value) {\n                this._intensity = value;\n                this.lfoL.offset = 1 - this._intensity / 2;\n                this.lfoR.offset = 1 - this._intensity / 2;\n                this.lfoL.oscillation = this._intensity;\n                this.lfoR.oscillation = this._intensity;\n            }\n        },\n        rate: {\n            enumerable: true,\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._rate = value;\n                this.lfoL.frequency = this._rate;\n                this.lfoR.frequency = this._rate;\n            }\n        },\n        stereoPhase: {\n            enumerable: true,\n            get: function() {\n                return this._rate;\n            },\n            set: function(value) {\n                this._stereoPhase = value;\n                var newPhase = this.lfoL._phase + this._stereoPhase *\n                    Math.PI /\n                    180;\n                newPhase = fmod(newPhase, 2 * Math.PI);\n                this.lfoR.phase = newPhase;\n            }\n        }\n    });\n\n    Tuna.prototype.WahWah = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.activateNode = userContext.createGain();\n        this.envelopeFollower = new userInstance.EnvelopeFollower({\n            target: this,\n            callback: function(context, value) {\n                context.sweep = value;\n            }\n        });\n        this.filterBp = userContext.createBiquadFilter();\n        this.filterPeaking = userContext.createBiquadFilter();\n        this.output = userContext.createGain();\n\n        //Connect AudioNodes\n        this.activateNode.connect(this.filterBp);\n        this.filterBp.connect(this.filterPeaking);\n        this.filterPeaking.connect(this.output);\n\n        //Set Properties\n        this.init();\n        this.automode = initValue(properties.enableAutoMode, this.defaults\n            .automode\n            .value);\n        this.resonance = properties.resonance || this.defaults.resonance\n            .value;\n        this.sensitivity = initValue(properties.sensitivity, this.defaults\n            .sensitivity\n            .value);\n        this.baseFrequency = initValue(properties.baseFrequency, this.defaults\n            .baseFrequency\n            .value);\n        this.excursionOctaves = properties.excursionOctaves || this.defaults\n            .excursionOctaves\n            .value;\n        this.sweep = initValue(properties.sweep, this.defaults.sweep.value);\n\n        this.activateNode.gain.value = 2;\n        this.envelopeFollower.activate(true);\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.WahWah.prototype = Object.create(Super, {\n        name: {\n            value: \"WahWah\"\n        },\n        defaults: {\n            writable: true,\n            value: {\n                automode: {\n                    value: true,\n                    automatable: false,\n                    type: BOOLEAN\n                },\n                baseFrequency: {\n                    value: 0.5,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                excursionOctaves: {\n                    value: 2,\n                    min: 1,\n                    max: 6,\n                    automatable: false,\n                    type: FLOAT\n                },\n                sweep: {\n                    value: 0.2,\n                    min: 0,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                },\n                resonance: {\n                    value: 10,\n                    min: 1,\n                    max: 100,\n                    automatable: false,\n                    type: FLOAT\n                },\n                sensitivity: {\n                    value: 0.5,\n                    min: -1,\n                    max: 1,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        activateCallback: {\n            value: function(value) {\n                this.automode = value;\n            }\n        },\n        automode: {\n            get: function() {\n                return this._automode;\n            },\n            set: function(value) {\n                this._automode = value;\n                if (value) {\n                    this.activateNode.connect(this.envelopeFollower.input);\n                    this.envelopeFollower.activate(true);\n                } else {\n                    this.envelopeFollower.activate(false);\n                    this.activateNode.disconnect();\n                    this.activateNode.connect(this.filterBp);\n                }\n            }\n        },\n        filterFreqTimeout: {\n            value: 0\n        },\n        setFilterFreq: {\n            value: function() {\n                try {\n                    this.filterBp.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n                    this.filterPeaking.frequency.value = this._baseFrequency + this._excursionFrequency * this._sweep;\n                } catch (e) {\n                    clearTimeout(this.filterFreqTimeout);\n                    //put on the next cycle to let all init properties be set\n                    this.filterFreqTimeout = setTimeout(function() {\n                        this.setFilterFreq();\n                    }.bind(this), 0);\n                }\n            }\n        },\n        sweep: {\n            enumerable: true,\n            get: function() {\n                return this._sweep.value;\n            },\n            set: function(value) {\n                this._sweep = Math.pow(value > 1 ? 1 : value <\n                    0 ? 0 :\n                    value,\n                    this._sensitivity);\n                this.setFilterFreq();\n            }\n        },\n        baseFrequency: {\n            enumerable: true,\n            get: function() {\n                return this._baseFrequency;\n            },\n            set: function(value) {\n                this._baseFrequency = 50 * Math.pow(10, value *\n                    2);\n                this._excursionFrequency = Math.min(userContext\n                    .sampleRate /\n                    2,\n                    this.baseFrequency * Math.pow(2, this._excursionOctaves)\n                );\n                this.setFilterFreq();\n            }\n        },\n        excursionOctaves: {\n            enumerable: true,\n            get: function() {\n                return this._excursionOctaves;\n            },\n            set: function(value) {\n                this._excursionOctaves = value;\n                this._excursionFrequency = Math.min(userContext\n                    .sampleRate /\n                    2,\n                    this.baseFrequency * Math.pow(2, this._excursionOctaves)\n                );\n                this.setFilterFreq();\n            }\n        },\n        sensitivity: {\n            enumerable: true,\n            get: function() {\n                return this._sensitivity;\n            },\n            set: function(value) {\n                this._sensitivity = Math.pow(10, value);\n            }\n        },\n        resonance: {\n            enumerable: true,\n            get: function() {\n                return this._resonance;\n            },\n            set: function(value) {\n                this._resonance = value;\n                this.filterPeaking.Q = this._resonance;\n            }\n        },\n        init: {\n            value: function() {\n                this.output.gain.value = 1;\n                this.filterPeaking.type = \"peaking\";\n                this.filterBp.type = \"bandpass\";\n                this.filterPeaking.frequency.value = 100;\n                this.filterPeaking.gain.value = 20;\n                this.filterPeaking.Q.value = 5;\n                this.filterBp.frequency.value = 100;\n                this.filterBp.Q.value = 1;\n            }\n        }\n    });\n\n    Tuna.prototype.EnvelopeFollower = function(properties) {\n        if (!properties) {\n            properties = this.getDefaults();\n        }\n        this.input = userContext.createGain();\n        this.jsNode = this.output = userContext.createScriptProcessor(\n            this.buffersize,\n            1, 1);\n\n        this.input.connect(this.output);\n\n        this.attackTime = initValue(properties.attackTime, this.defaults\n            .attackTime\n            .value);\n        this.releaseTime = initValue(properties.releaseTime, this.defaults\n            .releaseTime\n            .value);\n        this._envelope = 0;\n        this.target = properties.target || {};\n        this.callback = properties.callback || function() {};\n    };\n    Tuna.prototype.EnvelopeFollower.prototype = Object.create(Super, {\n        name: {\n            value: \"EnvelopeFollower\"\n        },\n        defaults: {\n            value: {\n                attackTime: {\n                    value: 0.003,\n                    min: 0,\n                    max: 0.5,\n                    automatable: false,\n                    type: FLOAT\n                },\n                releaseTime: {\n                    value: 0.5,\n                    min: 0,\n                    max: 0.5,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        buffersize: {\n            value: 256\n        },\n        envelope: {\n            value: 0\n        },\n        sampleRate: {\n            value: 44100\n        },\n        attackTime: {\n            enumerable: true,\n            get: function() {\n                return this._attackTime;\n            },\n            set: function(value) {\n                this._attackTime = value;\n                this._attackC = Math.exp(-1 / this._attackTime *\n                    this.sampleRate /\n                    this.buffersize);\n            }\n        },\n        releaseTime: {\n            enumerable: true,\n            get: function() {\n                return this._releaseTime;\n            },\n            set: function(value) {\n                this._releaseTime = value;\n                this._releaseC = Math.exp(-1 / this._releaseTime *\n                    this.sampleRate /\n                    this.buffersize);\n            }\n        },\n        callback: {\n            get: function() {\n                return this._callback;\n            },\n            set: function(value) {\n                if (typeof value === \"function\") {\n                    this._callback = value;\n                } else {\n                    console.error(\"tuna.js: \" + this.name +\n                        \": Callback must be a function!\");\n                }\n            }\n        },\n        target: {\n            get: function() {\n                return this._target;\n            },\n            set: function(value) {\n                this._target = value;\n            }\n        },\n        activate: {\n            value: function(doActivate) {\n                this.activated = doActivate;\n                if (doActivate) {\n                    this.jsNode.connect(userContext.destination);\n                    this.jsNode.onaudioprocess = this.returnCompute(\n                        this);\n                } else {\n                    this.jsNode.disconnect();\n                    this.jsNode.onaudioprocess = null;\n                }\n            }\n        },\n        returnCompute: {\n            value: function(instance) {\n                return function(event) {\n                    instance.compute(event);\n                };\n            }\n        },\n        compute: {\n            value: function(event) {\n                var count = event.inputBuffer.getChannelData(0)\n                    .length,\n                    channels = event.inputBuffer.numberOfChannels,\n                    current, chan, rms, i;\n                chan = rms = i = 0;\n                if (channels > 1) { //need to mixdown\n                    for (i = 0; i < count; ++i) {\n                        for (; chan < channels; ++chan) {\n                            current = event.inputBuffer.getChannelData(chan)[i];\n                            rms += (current * current) / channels;\n                        }\n                    }\n                } else {\n                    for (i = 0; i < count; ++i) {\n                        current = event.inputBuffer.getChannelData(0)[i];\n                        rms += (current * current);\n                    }\n                }\n                rms = Math.sqrt(rms);\n\n                if (this._envelope < rms) {\n                    this._envelope *= this._attackC;\n                    this._envelope += (1 - this._attackC) * rms;\n                } else {\n                    this._envelope *= this._releaseC;\n                    this._envelope += (1 - this._releaseC) *\n                        rms;\n                }\n                this._callback(this._target, this._envelope);\n            }\n        }\n    });\n\n    Tuna.prototype.LFO = function(properties) {\n        //Instantiate AudioNode\n        this.output = userContext.createScriptProcessor(256, 1, 1);\n        this.activateNode = userContext.destination;\n\n        //Set Properties\n        this.frequency = initValue(properties.frequency, this.defaults.frequency\n            .value);\n        this.offset = initValue(properties.offset, this.defaults.offset.value);\n        this.oscillation = initValue(properties.oscillation, this.defaults\n            .oscillation\n            .value);\n        this.phase = initValue(properties.phase, this.defaults.phase.value);\n        this.target = properties.target || {};\n        this.output.onaudioprocess = this.callback(properties.callback ||\n            function() {});\n        this.bypass = properties.bypass || false;\n    };\n    Tuna.prototype.LFO.prototype = Object.create(Super, {\n        name: {\n            value: \"LFO\"\n        },\n        bufferSize: {\n            value: 256\n        },\n        sampleRate: {\n            value: 44100\n        },\n        defaults: {\n            value: {\n                frequency: {\n                    value: 1,\n                    min: 0,\n                    max: 20,\n                    automatable: false,\n                    type: FLOAT\n                },\n                offset: {\n                    value: 0.85,\n                    min: 0,\n                    max: 22049,\n                    automatable: false,\n                    type: FLOAT\n                },\n                oscillation: {\n                    value: 0.3,\n                    min: -22050,\n                    max: 22050,\n                    automatable: false,\n                    type: FLOAT\n                },\n                phase: {\n                    value: 0,\n                    min: 0,\n                    max: 2 * Math.PI,\n                    automatable: false,\n                    type: FLOAT\n                }\n            }\n        },\n        frequency: {\n            get: function() {\n                return this._frequency;\n            },\n            set: function(value) {\n                this._frequency = value;\n                this._phaseInc = 2 * Math.PI * this._frequency *\n                    this.bufferSize /\n                    this.sampleRate;\n            }\n        },\n        offset: {\n            get: function() {\n                return this._offset;\n            },\n            set: function(value) {\n                this._offset = value;\n            }\n        },\n        oscillation: {\n            get: function() {\n                return this._oscillation;\n            },\n            set: function(value) {\n                this._oscillation = value;\n            }\n        },\n        phase: {\n            get: function() {\n                return this._phase;\n            },\n            set: function(value) {\n                this._phase = value;\n            }\n        },\n        target: {\n            get: function() {\n                return this._target;\n            },\n            set: function(value) {\n                this._target = value;\n            }\n        },\n        activate: {\n            value: function(doActivate) {\n                if (!doActivate) {\n                    this.output.disconnect(userContext.destination);\n                } else {\n                    this.output.connect(userContext.destination);\n                }\n            }\n        },\n        callback: {\n            value: function(callback) {\n                var that = this;\n                return function() {\n                    that._phase += that._phaseInc;\n                    if (that._phase > 2 * Math.PI) {\n                        that._phase = 0;\n                    }\n                    callback(that._target, that._offset +\n                        that._oscillation *\n                        Math.sin(that._phase));\n                };\n            }\n        }\n    });\n\n    Tuna.toString = Tuna.prototype.toString = function() {\n        return \"Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js\";\n    };\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/tunajs/tuna.js\n ** module id = 26\n ** module chunks = 0\n **/"],"sourceRoot":""}